C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main\main.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) OBJECT(.\output\main.obj)

line level    source

   1          #include "main.h"
   2          #include "uart.h"
   3          #include "oled.h"
   4          #include "24c02.h"
   5          #include "cd4052.h"
   6          #include "_595.h"
   7          #include "isr.h"
   8          #include "key.h"
   9          
  10          u8 MODE;
  11          u32 AddNo;    //割码地址值 
  12          
  13          u8 Cutflag;
  14          u8 BeepFlag;
  15          u8 PKG;            //封装型号
  16          u32 OK_COUNT;
  17          u32 NG_COUNT;
  18          
  19          u8 Maxline;
  20          u32 MaxlineHex;
  21          u8 POP;      //弹窗标志
  22          extern Pad_Res RES;
  23          extern void tsteicon(void);
  24          WINDOWS windemo;
  25          void init_windows(u8 x ,u8 y,u8 with,u8 height,u8 * title,u8 * text,u8 * state)
  26          {
  27   1        windemo.x =x;
  28   1        windemo.y =y;
  29   1        windemo.with =with;
  30   1        windemo.hight =height;
  31   1        windemo.title = title;
  32   1        windemo.text = text;
  33   1        windemo.state = state;
  34   1      } 
  35          #ifdef PRINT_AUTHOR_INFO
  36          void printInfo(void)
  37          {
  38   1         send_string ("=======================================================\n");
  39   1         send_string ("********************* Burn Code X *********************\n");
  40   1         send_string ("*                                                     *\n");
  41   1         send_string ("*    Version: SDK1.00.00(11:20:16 Apr 2  2015)        *\n");
  42   1         send_string ("*     Author: Liaokeyre<Liaokeyre@foxmail.com>        *\n");
  43   1         send_string ("*  Author: Cherry@ycsemi.com.cn @yancheng company     *\n");
  44   1         send_string ("*                                                     *\n");
  45   1         send_string ("*******************************************************\n"); 
  46   1         send_string ("=======================================================\n");
  47   1         send_string ("\n\n\nSystem Loading...\n");
  48   1         send_string ("\n\n\nSystem Load Ok!\n");
  49   1      }
  50          #endif
  51          
  52          void initAddNo(void)     //判断地址值是否正常
  53          {
  54   1        u32 tmp;
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 2   

  55   1        at24c02_rddat(0x10,(u8*)&tmp,4);
  56   1        if((tmp == 0xffffffff)||((tmp > 0xfffff))) //初始状态 || 累加溢出？
  57   1        {
  58   2         AddNo = 0;
  59   2         at24c02_wrdat(0x10,(u8*)&AddNo,4);
  60   2        }
  61   1      }
  62          void oledInit(void)
  63          {
  64   1              OLED_Init();  //初始化OLED  
  65   1              OLED_Clear(); 
  66   1              /*
  67   1          OLED_ShowFont16(0,10,0,1);
  68   1              OLED_ShowFont16(16,10,1,1);
  69   1              OLED_ShowFont16(32,10,2,1);
  70   1              OLED_ShowFont16(48,10,3,1);
  71   1              OLED_ShowFont16(64,10,4,1);
  72   1              OLED_ShowFont16(80,10,5,1);
  73   1              OLED_ShowFont16(96,10,6,1);
  74   1              OLED_ShowFont16(112,10,7,1);
  75   1              */
  76   1      #ifdef SHOW_LOGO
  77   1              OLED_DrawBMP(0,0,1);                    // show logo
  78   1          OLED_DrawBar(36, 26, 124, 30, 1);
  79   1      #endif
  80   1              OLED_Refresh_Gram();
  81   1      }
  82          
  83          void ioInit(void)
  84          {
  85   1            P1M1 = 0;
  86   1                P1M0 = 0; 
  87   1            P2M1 = 0;
  88   1                P2M0 = 0;
  89   1            P3M1 = 0;
  90   1                P3M0 = 0; 
  91   1            P4M1 = 0;
  92   1                P4M0 = 0;
  93   1            P5M1 = 0;
  94   1                P5M0 = 0; 
  95   1            P0M1 = 0;
  96   1                P0M0 = 0;
  97   1      
  98   1                P4M0 |= 0x22;
  99   1      
 100   1                P1M1 |= 0Xff;
 101   1                P1M0 &= ~0Xff; //高阻输入     ADC输入端口配置
 102   1      
 103   1                P2M1 &= ~0XF8;
 104   1                P2M0 |= 0XF8; //推挽
 105   1      
 106   1                P3M1 |= 0x04;
 107   1                P3M1 &= ~0x04;  //    p32 输入
 108   1      
 109   1                P5M1 &= ~0X28;
 110   1                P5M0 |= 0X28;    //P55推挽
 111   1      }
 112          u32 EXP2(u8 num)
 113          {
 114   1        u8 i;
 115   1        u32 tmp;
 116   1        tmp = 1;
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 3   

 117   1        for (i=0;i<num;i++)
 118   1        tmp*=2;
 119   1        return tmp;
 120   1      }
 121          void sysInit(void)
 122          {
 123   1              ioInit();
 124   1              InitADC();
 125   1              InitSign();
 126   1              UartInit();
 127   1              oledInit();
 128   1              timerInit();
 129   1              BeepFlag = 0;
 130   1              OK_COUNT = 0;
 131   1              NG_COUNT = 0;             //复位计数器
 132   1              DSENVMOS();                       // 关mos电源
 133   1              DSENABLE595();                    // 关595控制mos开关
 134   1              Cutflag = 3;
 135   1              MODE = cutmode;
 136   1              POP = 0;
 137   1              DSENVSOC();
 138   1              K1_OUT_LOW();
 139   1              Maxline = at24c02_rd(LINE_NUM_ADD);
 140   1              if((Maxline >20)||(Maxline < 1))
 141   1              {
 142   2                Maxline = 20;
 143   2                at24c02_wr(LINE_NUM_ADD, Maxline);
 144   2              }
 145   1              MaxlineHex = EXP2(Maxline);
 146   1      }
 147          void SetLine(void)
 148          {
 149   1              u8 Done;
 150   1              u8 Linetmp;
 151   1              Done = 0;
 152   1      #ifdef PRINT_INFO
 153   1              send_string ("\n 设置割码线 \n");
 154   1      #endif
 155   1              Linetmp = at24c02_rd(LINE_NUM_ADD);
 156   1              Maxline = Linetmp;
 157   1              if((Maxline >20)||(Maxline < 1))
 158   1              {
 159   2                Maxline = 20;
 160   2                at24c02_wr(LINE_NUM_ADD, Maxline);
 161   2              }
 162   1              Linetmp = Maxline;
 163   1              MaxlineHex = EXP2(Maxline);
 164   1              OLED_Clear();
 165   1          OLED_ShowChar(0,14,'0',7,1);
 166   1          OLED_ShowChar(115,14,'2',7,1);
 167   1          OLED_ShowChar(121,14,'0',7,1); 
 168   1              OLED_ShowString(20,0,"Set max line",12,1);
 169   1              while(!Done)
 170   1              {
 171   2                      OLED_DrawSetBar(9, 15, 110, 19, 20,Linetmp, 1);
 172   2      //          OLED_Refresh_Gram();
 173   2            if(Key_change)
 174   2                {
 175   3                      switch(Key_back)
 176   3                      {
 177   4                        case PR_ADD:
 178   4                        case PS_ADD:
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 4   

 179   4                                      Key_change=0; 
 180   4                              BeepFlag =1;
 181   4                                      if(Linetmp-- <= 1)
 182   4                                      Linetmp = 20;
 183   4                        break;
 184   4                        case PR_SUB:
 185   4                        case PS_SUB:
 186   4                                      Key_change=0; 
 187   4                              BeepFlag =1;
 188   4                                      if(Linetmp++ >= 20)
 189   4                                      Linetmp = 1;            
 190   4                        break;
 191   4                        case PR_OK:
 192   4                        case PS_OK:
 193   4                                      Key_change=0; 
 194   4                              BeepFlag =1;
 195   4                          init_windows(20,0,80,32,"Notice"," Set OK!",0);
 196   4                          OLED_Draw_WindowsDraw(&windemo);
 197   4                      OLED_Refresh_Gram();
 198   4                                  Maxline = Linetmp;
 199   4                                      MaxlineHex = EXP2(Maxline);
 200   4                                      at24c02_wr(LINE_NUM_ADD, Maxline);                              
 201   4                                      delay_10ms();
 202   4                                      delay_10ms();
 203   4                                      delay_10ms();
 204   4                                      delay_10ms();
 205   4      #ifdef PRINT_INFO
 206   4                          send_string ("\n割码线设置为 : ");
 207   4                      put_char((Maxline/10)+'0');
 208   4                          put_char((Maxline%10)+'0');
 209   4                      send_string (" 条\n");
 210   4      #endif
 211   4                                      Done = 1;       
 212   4                        break;
 213   4                        case PR_MOD:
 214   4                        case PS_MOD:
 215   4                                      Key_change=0; 
 216   4                              BeepFlag =1;
 217   4                                      OLED_Clear();
 218   4                                      Done = 1;
 219   4                        break;
 220   4                      }
 221   3                }     
 222   2              }
 223   1      }
 224          
 225          void set_mode(void)
 226          {
 227   1          u8 Done;
 228   1              u8 InMode;
 229   1              u8 menucnt;
 230   1              u8 Eraseflag;
 231   1              u8 YesNo;
 232   1              YesNo = 0;
 233   1              Eraseflag = 0;    //删除内存的二次确认
 234   1              menucnt = 0;
 235   1              InMode = 0;
 236   1              Done = 0;
 237   1              Disp_Menu_Main(setmode);
 238   1              OLED_Refresh_Gram();
 239   1      #ifdef PRINT_INFO
 240   1              send_string ("\n【设置】 割码 测试\n");
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 5   

 241   1      #endif
 242   1              while(!Done)
 243   1              {
 244   2                if(Key_change)
 245   2                {
 246   3                      switch(Key_back)
 247   3                      {
 248   4                        case PR_ADD:
 249   4                                      Key_change=0; 
 250   4                              BeepFlag =1;
 251   4                                      if(InMode)
 252   4                                      {
 253   5                                        if(Eraseflag == 1)
 254   5                                        {
 255   6                                                if(YesNo ++ >=1)
 256   6                                                YesNo = 0;
 257   6                                                OLED_ShowString(70,20,"YES",12,!YesNo);
 258   6                                                OLED_ShowString(110,20,"NO",12,YesNo);
 259   6                                                OLED_Refresh_Gram();  
 260   6                                        }
 261   5                                        else
 262   5                                        {
 263   6                                                if(menucnt --<=0)
 264   6                                                menucnt = 3;
 265   6                                                Disp_Menu_0(menucnt);
 266   6                                    OLED_Refresh_Gram();                                
 267   6                                        }                             
 268   5                                      }
 269   4                                      else
 270   4                                      {
 271   5                                        MODE = testmode;
 272   5                                        Done = 1;
 273   5                                      }
 274   4                        break;
 275   4                        case PR_SUB:
 276   4                                      Key_change=0; 
 277   4                              BeepFlag =1;
 278   4                                      if(InMode)
 279   4                                      {
 280   5                                        if(Eraseflag == 1)
 281   5                                        {
 282   6                                                if(YesNo -- <= 0)
 283   6                                                YesNo = 1;
 284   6                                                OLED_ShowString(70,20,"YES",12,!YesNo);
 285   6                                                OLED_ShowString(110,20,"NO",12,YesNo);
 286   6                                                OLED_Refresh_Gram();
 287   6                                        }
 288   5                                        else
 289   5                                        {
 290   6                                                if(menucnt ++>=3)
 291   6                                                menucnt = 0;
 292   6                                                Disp_Menu_0(menucnt);
 293   6                                    OLED_Refresh_Gram();
 294   6                                        }                                     
 295   5                                      }
 296   4                                      else
 297   4                                      {
 298   5                                        MODE = cutmode;
 299   5                                        Done = 1;
 300   5                                      }
 301   4                        break;
 302   4                        case PR_OK:
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 6   

 303   4                                      Key_change=0; 
 304   4                              BeepFlag =1;
 305   4                                      if(InMode)
 306   4                                      {
 307   5                                                if(menucnt ==2)        
 308   5                                                {
 309   6                                                    if(Eraseflag == 1)
 310   6                                                        {
 311   7                                                      
 312   7                                                              if(YesNo)
 313   7                                                              {
 314   8                                                                  OLED_Clear();
 315   8                                                                  OLED_ShowString(2,10,"ERASE MEMORRY...",12,1);                                       
 316   8                                                                      OLED_Refresh_Gram();
 317   8                                                                  Flush_24c02();
 318   8                                                                  OLED_Clear();
 319   8                                                                  OLED_ShowString(2,10,"ERASE DONE!",12,1);                                    
 320   8                                                                      OLED_Refresh_Gram();
 321   8      #ifdef PRINT_INFO
 322   8                                                          send_string ("\n记录擦除完成\n");
 323   8      #endif
 324   8                                                              }
 325   7      
 326   7                                                          OLED_Clear();
 327   7                                                          Disp_Menu_0(menucnt);
 328   7                                                              OLED_Refresh_Gram();                                                
 329   7                                                              Eraseflag = 0;
 330   7                                                              YesNo = 0;
 331   7                                                        }
 332   6                                                        else
 333   6                                                        {
 334   7                                                          Eraseflag = 1;
 335   7                                                      OLED_Clear();
 336   7                                                          OLED_ShowString(2,0,"Clear all memorry?",12,1);     
 337   7                                                              OLED_ShowString(70,20,"YES",12,1);
 338   7                                                              OLED_ShowString(110,20,"NO",12,0);                               
 339   7                                              OLED_Refresh_Gram();                              
 340   7                                                        }
 341   6                                                                                          
 342   6                                                }
 343   5                                                else if(menucnt ==0)   
 344   5                                                {
 345   6                                                    SetLine();
 346   6                                                        OLED_Clear();
 347   6                                                Disp_Menu_0(menucnt);
 348   6                                            OLED_Refresh_Gram();                                          
 349   6                                                }
 350   5      /*                                        else if(menucnt ==2)
 351   5                                                {
 352   5                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 353   5                                                init_windows(20,0,80,32,"Notice"," COB",0);
 354   5                                                OLED_Draw_WindowsDraw(&windemo);
 355   5                                                        POP = 1;
 356   5                                            OLED_Refresh_Gram();                                          
 357   5                                                }      
 358   5      */                                                                      
 359   5                                      }
 360   4                                      else
 361   4                                      {
 362   5                                        OLED_Clear();
 363   5                                        Disp_Menu_0(menucnt);
 364   5                            OLED_Refresh_Gram();
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 7   

 365   5                                        InMode = 1;
 366   5                                      }
 367   4                        break;
 368   4                        case PR_MOD:
 369   4                                      Key_change=0; 
 370   4                              BeepFlag =1;
 371   4                                      OLED_Clear();
 372   4                                      Done = 1;
 373   4                        break;
 374   4                      }
 375   3                
 376   3                }
 377   2              }
 378   1      
 379   1      }
 380          void cut_mode(void)
 381          {
 382   1          u8 Done;
 383   1              u8 InMode;
 384   1              u8 menucnt;
 385   1              menucnt = 2;      //直接选择到晶元模式
 386   1              InMode = 0;
 387   1              Done = 0;
 388   1              Disp_Menu_Main(cutmode);
 389   1              OLED_Refresh_Gram();
 390   1      #ifdef PRINT_INFO
 391   1              send_string ("\n设置 【割码】 测试\n");
 392   1      #endif
 393   1              while(!Done)
 394   1              {
 395   2                if(Key_change)
 396   2                {
 397   3                      switch(Key_back)
 398   3                      {
 399   4                        case PR_ADD:
 400   4                                      Key_change=0; 
 401   4                              BeepFlag =1;
 402   4                                      if(InMode)
 403   4                                      {
 404   5                                        if(menucnt --<=0)
 405   5                                        menucnt = 3;
 406   5                                        Disp_Menu_1(menucnt);
 407   5                            OLED_Refresh_Gram();
 408   5                                      }
 409   4                                      else
 410   4                                      {
 411   5                                        MODE = setmode;
 412   5                                        Done = 1;
 413   5                                      }
 414   4                        break;
 415   4                        case PR_SUB:
 416   4                                      Key_change=0; 
 417   4                              BeepFlag =1;
 418   4                                      if(InMode)
 419   4                                      {
 420   5                                        if(menucnt ++>=3)
 421   5                                        menucnt = 0;
 422   5                                        Disp_Menu_1(menucnt);
 423   5                            OLED_Refresh_Gram();                                                              
 424   5                                      }
 425   4                                      else
 426   4                                      {
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 8   

 427   5                                        MODE = testmode;
 428   5                                        Done = 1;
 429   5                                      }
 430   4                        break;
 431   4                        case PR_OK:
 432   4                                      Key_change=0; 
 433   4                              BeepFlag =1;
 434   4                                      if(InMode)
 435   4                                      {
 436   5                                        if(menucnt ==3)        //返回
 437   5                                        {
 438   6                                          OLED_Clear();        //清屏 
 439   6                                          Done = 1;
 440   6                                          return;
 441   6                                        }
 442   5                                        else
 443   5                                        {
 444   6                                        /*
 445   6                                                if(menucnt ==0)        //PKG-1
 446   6                                                {
 447   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 448   6                                                init_windows(20,0,80,32,"Notice"," VT62538-B1",0);
 449   6                                                OLED_Draw_WindowsDraw(&windemo);
 450   6                                                        POP = 1;
 451   6                                            OLED_Refresh_Gram();                                  
 452   6                                                }
 453   6                                                else if(menucnt ==1)   //PKG-2
 454   6                                                {
 455   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 456   6                                                init_windows(20,0,80,32,"Notice"," VT62538-B2",0);
 457   6                                                OLED_Draw_WindowsDraw(&windemo);
 458   6                                                        POP = 1;
 459   6                                            OLED_Refresh_Gram();                                          
 460   6                                                }
 461   6                                                else if(menucnt ==2)   //COB
 462   6                                                {
 463   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 464   6                                                init_windows(20,0,80,32,"Notice"," COB",0);
 465   6                                                OLED_Draw_WindowsDraw(&windemo);
 466   6                                                        POP = 1;
 467   6                                            OLED_Refresh_Gram();                                          
 468   6                                                }      
 469   6                                                */
 470   6                                                OLED_Clear();
 471   6                                                PKG = menucnt; //注意增加型号需要判断是否对应
 472   6                                                OK_COUNT = 0;
 473   6                                                NG_COUNT = 0;
 474   6                                                CutRun(PKG);    
 475   6                                            OLED_Clear();       //退出了割码操作
 476   6                                            Disp_Menu_1(menucnt);
 477   6                                OLED_Refresh_Gram();
 478   6                                        }
 479   5                                      }
 480   4                                      else
 481   4                                      {
 482   5                                        OLED_Clear();
 483   5                                        Disp_Menu_1(menucnt);
 484   5                            OLED_Refresh_Gram();
 485   5                                        InMode = 1;
 486   5                                      }
 487   4                        break;
 488   4                        case PR_MOD:
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 9   

 489   4                                      Key_change=0; 
 490   4                              BeepFlag =1;
 491   4                                      OLED_Clear();
 492   4                                      Done = 1;
 493   4                        break;
 494   4                      }
 495   3                
 496   3                }
 497   2              }
 498   1      }
 499          void test_mode(void)
 500          {
 501   1          u8 Done;
 502   1              u8 InMode;
 503   1              u32 IRtmp;
 504   1              IRtmp = 0;
 505   1              InMode = 0;
 506   1              Done = 0;
 507   1              DsDecode();
 508   1              Disp_Menu_Main(testmode);
 509   1              OLED_Refresh_Gram();
 510   1      #ifdef PRINT_INFO
 511   1              send_string ("\n设置 割码 【测试】\n");
 512   1      #endif
 513   1              while(!Done)
 514   1              {
 515   2                if(InMode)
 516   2                {
 517   3      
 518   3                  if((ReIRcode & 0xf) != 0)
 519   3                      {
 520   4                         IRtmp = ReIRcode;
 521   4                      }
 522   3                      if(IRtmp)
 523   3                      {
 524   4                          OLED_ShowChar(36,16,Hex2Dat(((IRtmp>>16)>>4)&0x0f),12,1);
 525   4                          OLED_ShowChar(42,16,Hex2Dat(((IRtmp>>16)&0x0f)),12,1);
 526   4                      
 527   4                              OLED_ShowChar(54,16,Hex2Dat(((IRtmp>>8)>>4)&0x0f),12,1);
 528   4                              OLED_ShowChar(60,16,Hex2Dat(((IRtmp>>8)&0x0f)),12,1);
 529   4                      
 530   4                              OLED_ShowChar(72,16,Hex2Dat(((IRtmp)>>4)&0x0f),12,1);
 531   4                              OLED_ShowChar(78,16,Hex2Dat(((IRtmp)&0x0f)),12,1);
 532   4                              OLED_Refresh_Gram();
 533   4                      }   
 534   3                }
 535   2      
 536   2                if(Key_change)
 537   2                {
 538   3                      switch(Key_back)
 539   3                      {
 540   4                        case PR_ADD:
 541   4                                      Key_change=0; 
 542   4                              BeepFlag =1;
 543   4                                      if(InMode)
 544   4                                      {
 545   5                                      
 546   5                                      }
 547   4                                      else
 548   4                                      {
 549   5                                        MODE = cutmode;
 550   5                                        Done = 1;
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 10  

 551   5                                      }
 552   4                        break;
 553   4                        case PR_SUB:
 554   4                                      Key_change=0; 
 555   4                              BeepFlag =1;
 556   4                                      if(InMode)
 557   4                                      {
 558   5                                      
 559   5                                      }
 560   4                                      else
 561   4                                      {
 562   5                                        MODE = setmode;
 563   5                                        Done = 1;
 564   5                                      }
 565   4                        break;
 566   4                        case PR_OK:
 567   4                                      Key_change=0; 
 568   4                              BeepFlag =1;
 569   4                                      if(InMode)
 570   4                                      {
 571   5      
 572   5                                      }
 573   4                                      else
 574   4                                      {
 575   5                                       /*
 576   5                                        Flush_24c02();
 577   5                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 578   5                                init_windows(10,0,100,32,"Notice"," FLUSH 2402 OK!",0);
 579   5                                OLED_Draw_WindowsDraw(&windemo);
 580   5                                        POP = 1;
 581   5                            OLED_Refresh_Gram();
 582   5                                        */
 583   5                                        EnDecode();
 584   5                                        OLED_Clear();
 585   5                                        OLED_ShowString(46,0,"DECODE",12,1);
 586   5                                        OLED_Refresh_Gram();
 587   5                                        InMode = 1;
 588   5                                      }
 589   4                        break;
 590   4                        case PR_MOD:
 591   4                                      Key_change=0; 
 592   4                              BeepFlag =1;
 593   4                                      OLED_Clear();
 594   4                                      Done = 1;
 595   4                        break;
 596   4                      }
 597   3                
 598   3                }
 599   2              }
 600   1      }
 601          
 602          //void lookinfo(void)
 603          //{
 604          //
 605          //}
 606          
 607          u8 chek4052(void)
 608          {
 609   1        u8 ret;
 610   1        ret = 0;
 611   1        OLED_Clear();
 612   1        if((RES.Pad0 <=Res_NG)||(RES.Pad1 <=Res_NG)||(RES.Pad2 <=Res_NG)||(RES.Pad3 <=Res_NG)||
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 11  

 613   1           (RES.Pad4 <=Res_NG)||(RES.Pad5 <=Res_NG)||(RES.Pad6 <=Res_NG)||(RES.Pad7 <=Res_NG))
 614   1         {
 615   2            ret = 0x01;
 616   2                send_string ("\n请更换U9 ：CD4052 \n");
 617   2                OLED_ShowString(0,11,"Check U9  CD4052",12,1);
 618   2         }
 619   1        if((RES.Pad8 <=Res_NG)||(RES.Pad9 <=Res_NG)||(RES.Pad10 <=Res_NG)||(RES.Pad11 <=Res_NG)|| 
 620   1           (RES.Pad12 <=Res_NG)||(RES.Pad13 <=Res_NG)||(RES.Pad14 <=Res_NG)||(RES.Pad15 <=Res_NG))
 621   1         {
 622   2            ret = 0x11;
 623   2                send_string ("\n请更换U12 ：CD4052 \n");
 624   2                OLED_ShowString(0,22,"Check U12 CD4052",12,1);
 625   2         }
 626   1         if(ret)
 627   1         {
 628   2              OLED_ShowString(0,0,"Hardware error:",12,1);
 629   2              OLED_Refresh_Gram();
 630   2         }
 631   1        if((Key_back == PR_OK)&&(Key_change))
 632   1        {
 633   2         Key_change=0; 
 634   2         BeepFlag =1;
 635   2         OLED_Clear();
 636   2         ret = 0;
 637   2        }      
 638   1         return ret;
 639   1      }
 640          
 641          void main(void)
 642          {
 643   1          SPEAKER = 0;
 644   1          sysInit();
 645   1              SPEAKER = 1;
 646   1      #ifdef PRINT_AUTHOR_INFO
 647   1              printInfo();
 648   1      #endif
 649   1      #ifdef PRINT_INFO
 650   1              send_string ("\n\n总烧录线【十进制】 : ");
 651   1          put_char((Maxline/10)+'0');
 652   1              put_char((Maxline%10)+'0');
 653   1              send_string ("  最大烧录地址【十六进制】:");
 654   1              printf_u8(MaxlineHex>>16);
 655   1          printf_u8(MaxlineHex>>8);
 656   1          printf_u8(MaxlineHex);
 657   1      #endif
 658   1          GetPadRes();
 659   1              //判断4052是否损坏！
 660   1      #ifdef PRINT_INFO
 661   1              send_string ("\n\nADC采集通道测试 :\n--------------------------------------------------------- ");
 662   1              send_string ("\n通道0：   ");
 663   1          printf_u8(RES.Pad0>>8);
 664   1          printf_u8(RES.Pad0);
 665   1              send_string ("\n通道1：   ");
 666   1          printf_u8(RES.Pad1>>8);
 667   1          printf_u8(RES.Pad1);
 668   1              send_string ("\n通道2：   ");
 669   1          printf_u8(RES.Pad2>>8);
 670   1          printf_u8(RES.Pad2);
 671   1              send_string ("\n通道3：   ");
 672   1          printf_u8(RES.Pad3>>8);
 673   1          printf_u8(RES.Pad3);
 674   1              send_string ("\n通道4：   ");
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 12  

 675   1          printf_u8(RES.Pad4>>8);
 676   1          printf_u8(RES.Pad4);
 677   1      
 678   1              send_string ("\n通道5：   ");
 679   1          printf_u8(RES.Pad5>>8);
 680   1          printf_u8(RES.Pad5);
 681   1              send_string ("\n通道6：   ");
 682   1          printf_u8(RES.Pad6>>8);
 683   1          printf_u8(RES.Pad6);
 684   1              send_string ("\n通道7：   ");
 685   1          printf_u8(RES.Pad7>>8);
 686   1          printf_u8(RES.Pad7);
 687   1              send_string ("\n通道8：   ");
 688   1          printf_u8(RES.Pad8>>8);
 689   1          printf_u8(RES.Pad8);
 690   1              send_string ("\n通道9：   ");
 691   1          printf_u8(RES.Pad9>>8);
 692   1          printf_u8(RES.Pad9);
 693   1              send_string ("\n通道10：   ");
 694   1          printf_u8(RES.Pad10>>8);
 695   1          printf_u8(RES.Pad10);
 696   1      
 697   1              send_string ("\n通道11：   ");
 698   1          printf_u8(RES.Pad11>>8);
 699   1          printf_u8(RES.Pad11);
 700   1              send_string ("\n通道12：   ");
 701   1          printf_u8(RES.Pad12>>8);
 702   1          printf_u8(RES.Pad12);
 703   1              send_string ("\n通道13：   ");
 704   1          printf_u8(RES.Pad13>>8);
 705   1          printf_u8(RES.Pad13);
 706   1              send_string ("\n通道14：   ");
 707   1          printf_u8(RES.Pad14>>8);
 708   1          printf_u8(RES.Pad14);
 709   1      
 710   1              send_string ("\n通道15：   ");
 711   1          printf_u8(RES.Pad15>>8);
 712   1          printf_u8(RES.Pad15);
 713   1              send_string ("\n通道16：   ");
 714   1          printf_u8(RES.Pad16>>8);
 715   1          printf_u8(RES.Pad16);
 716   1              send_string ("\n通道17：   ");
 717   1          printf_u8(RES.Pad17>>8);
 718   1          printf_u8(RES.Pad17);
 719   1              send_string ("\n通道18：   ");
 720   1          printf_u8(RES.Pad18>>8);
 721   1          printf_u8(RES.Pad18);
 722   1              send_string ("\n通道19：   ");
 723   1          printf_u8(RES.Pad19>>8);
 724   1          printf_u8(RES.Pad19);
 725   1              send_string ("\n如果某个通道值为0或小于00 F0，请更换CD4052!\n");
 726   1      #endif
 727   1          EA = 1;
 728   1              SPEAKER = 0;
 729   1              AddNo = 1;
 730   1              OLED_Clear();
 731   1      
 732   1              while(1)
 733   1              {
 734   2                 while(chek4052());
 735   2                 switch(MODE)
 736   2                 {
C51 COMPILER V9.00   MAIN                                                                  05/06/2015 14:06:25 PAGE 13  

 737   3                       case setmode:
 738   3                         set_mode();
 739   3                       break;
 740   3                       case cutmode:
 741   3                         cut_mode();
 742   3                       break;
 743   3                       case testmode:
 744   3                         test_mode();
 745   3                       break;
 746   3                 }
 747   2      
 748   2      /*
 749   2                if((Key_back == PR_ADD)&&(Key_change))
 750   2                {
 751   2                 AddNo >>= 1;         storge595(&AddNo,4); Key_change=0; BeepFlag =1; 
 752   2                }
 753   2                else if((Key_back == PR_SUB)&&(Key_change))
 754   2                {
 755   2                 AddNo <<= 1;         storge595(&AddNo,4);  Key_change=0;     BeepFlag =1;
 756   2                }
 757   2                else if((Key_back == PR_OK)&&(Key_change))
 758   2                {
 759   2                 StartCut(0); Key_change=0;   BeepFlag =1;
 760   2                 
 761   2                }
 762   2       */       
 763   2              }
 764   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3574    ----
   CONSTANT SIZE    =   1166    ----
   XDATA SIZE       =     35      40
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
