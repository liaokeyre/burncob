C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main\main.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\main.lst) OBJECT(.\output\main.obj)

line level    source

   1          #include "main.h"
   2          #include "uart.h"
   3          #include "oled.h"
   4          #include "24c02.h"
   5          #include "cd4052.h"
   6          #include "_595.h"
   7          #include "isr.h"
   8          #include "key.h"
   9          
  10          u8 MODE;
  11          u32 AddNo;    //割码地址值 
  12          
  13          u8 Cutflag;
  14          u8 BeepFlag;
  15          u8 PKG;            //封装型号
  16          u32 OK_COUNT;
  17          u32 NG_COUNT;
  18          
  19          u8 POP;      //弹窗标志
  20          extern void tsteicon(void);
  21          WINDOWS windemo;
  22          void init_windows(u8 x ,u8 y,u8 with,u8 height,u8 * title,u8 * text,u8 * state)
  23          {
  24   1        windemo.x =x;
  25   1        windemo.y =y;
  26   1        windemo.with =with;
  27   1        windemo.hight =height;
  28   1        windemo.title = title;
  29   1        windemo.text = text;
  30   1        windemo.state = state;
  31   1      } 
  32          #ifdef PRINT_AUTHOR_INFO
  33          void printInfo(void)
  34          {
  35   1         send_string ("=======================================================\n");
  36   1         send_string ("********************* Burn Code X *********************\n");
  37   1         send_string ("*                                                     *\n");
  38   1         send_string ("*    Version: SDK1.00.00(11:20:16 Apr 2  2015)        *\n");
  39   1         send_string ("*     Author: Liaokeyre<Liaokeyre@foxmail.com>        *\n");
  40   1         send_string ("*  Author: Cherry@ycsemi.com.cn @yancheng company     *\n");
  41   1         send_string ("*                                                     *\n");
  42   1         send_string ("*******************************************************\n"); 
  43   1         send_string ("=======================================================\n");
  44   1         send_string ("\n\n\nSystem Loading...\n");
  45   1         send_string ("\n\n\nSystem Load Ok!\n");
  46   1      }
  47          #endif
  48          
  49          void initAddNo(void)     //判断地址值是否正常
  50          {
  51   1        u32 tmp;
  52   1        at24c02_rddat(0x10,(u8*)&tmp,4);
  53   1        if((tmp == 0xffffffff)||((tmp > 0xfffff))) //初始状态 || 累加溢出？
  54   1        {
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 2   

  55   2         AddNo = 0;
  56   2         at24c02_wrdat(0x10,(u8*)&AddNo,4);
  57   2        }
  58   1      }
  59          void oledInit(void)
  60          {
  61   1              OLED_Init();  //初始化OLED  
  62   1              OLED_Clear(); 
  63   1              /*
  64   1          OLED_ShowFont16(0,10,0,1);
  65   1              OLED_ShowFont16(16,10,1,1);
  66   1              OLED_ShowFont16(32,10,2,1);
  67   1              OLED_ShowFont16(48,10,3,1);
  68   1              OLED_ShowFont16(64,10,4,1);
  69   1              OLED_ShowFont16(80,10,5,1);
  70   1              OLED_ShowFont16(96,10,6,1);
  71   1              OLED_ShowFont16(112,10,7,1);
  72   1              */
  73   1      #ifdef SHOW_LOGO
  74   1              OLED_DrawBMP(0,0,1);                    // show logo
  75   1          OLED_DrawBar(36, 26, 124, 30, 1);
  76   1      #endif
  77   1              OLED_Refresh_Gram();
  78   1      }
  79          
  80          void ioInit(void)
  81          {
  82   1            P1M1 = 0;
  83   1                P1M0 = 0; 
  84   1            P2M1 = 0;
  85   1                P2M0 = 0;
  86   1            P3M1 = 0;
  87   1                P3M0 = 0; 
  88   1            P4M1 = 0;
  89   1                P4M0 = 0;
  90   1            P5M1 = 0;
  91   1                P5M0 = 0; 
  92   1            P0M1 = 0;
  93   1                P0M0 = 0;
  94   1      
  95   1                P4M0 |= 0x22;
  96   1      
  97   1                P1M1 |= 0Xff;
  98   1                P1M0 &= ~0Xff; //高阻输入     ADC输入端口配置
  99   1      
 100   1                P2M1 &= ~0XF8;
 101   1                P2M0 |= 0XF8; //推挽
 102   1      
 103   1                P3M1 |= 0x04;
 104   1                P3M1 &= ~0x04;  //    p32 输入
 105   1      
 106   1                P5M1 &= ~0X20;
 107   1                P5M0 |= 0X20;    //P55推挽
 108   1      }
 109          
 110          void sysInit(void)
 111          {
 112   1              ioInit();
 113   1              InitADC();
 114   1              InitSign();
 115   1              UartInit();
 116   1              oledInit();
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 3   

 117   1              timerInit();
 118   1              BeepFlag = 0;
 119   1              OK_COUNT = 0;
 120   1              NG_COUNT = 0; //复位计数器
 121   1              DSENVMOS();                       // 关mos电源
 122   1              DSENABLE595();                    // 关595控制mos开关
 123   1              Cutflag = 0;
 124   1              MODE = cutmode;
 125   1              POP = 0;
 126   1              DSENVSOC();
 127   1              K1_OUT = 0;
 128   1      }
 129          void set_mode(void)
 130          {
 131   1          u8 Done;
 132   1              u8 InMode;
 133   1              u8 menucnt;
 134   1              u8 Eraseflag;
 135   1              u8 YesNo;
 136   1              YesNo = 0;
 137   1              Eraseflag = 0;    //删除内存的二次确认
 138   1              menucnt = 0;
 139   1              InMode = 0;
 140   1              Done = 0;
 141   1              Disp_Menu_Main(setmode);
 142   1              OLED_Refresh_Gram();
 143   1              while(!Done)
 144   1              {
 145   2                if(Key_change)
 146   2                {
 147   3                      switch(Key_back)
 148   3                      {
 149   4                        case PR_ADD:
 150   4                                      Key_change=0; 
 151   4                              BeepFlag =1;
 152   4                                      if(InMode)
 153   4                                      {
 154   5                                        if(Eraseflag == 1)
 155   5                                        {
 156   6                                                if(YesNo ++ >=1)
 157   6                                                YesNo = 0;
 158   6                                                OLED_ShowString(70,20,"YES",12,!YesNo);
 159   6                                                OLED_ShowString(110,20,"NO",12,YesNo);
 160   6                                                OLED_Refresh_Gram();  
 161   6                                        }
 162   5                                        else
 163   5                                        {
 164   6                                                if(menucnt --<=0)
 165   6                                                menucnt = 3;
 166   6                                                Disp_Menu_0(menucnt);
 167   6                                    OLED_Refresh_Gram();                                
 168   6                                        }                             
 169   5                                      }
 170   4                                      else
 171   4                                      {
 172   5                                        MODE = testmode;
 173   5                                        Done = 1;
 174   5                                      }
 175   4                        break;
 176   4                        case PR_SUB:
 177   4                                      Key_change=0; 
 178   4                              BeepFlag =1;
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 4   

 179   4                                      if(InMode)
 180   4                                      {
 181   5                                        if(Eraseflag == 1)
 182   5                                        {
 183   6                                                if(YesNo -- <= 0)
 184   6                                                YesNo = 1;
 185   6                                                OLED_ShowString(70,20,"YES",12,!YesNo);
 186   6                                                OLED_ShowString(110,20,"NO",12,YesNo);
 187   6                                                OLED_Refresh_Gram();
 188   6                                        }
 189   5                                        else
 190   5                                        {
 191   6                                                if(menucnt ++>=3)
 192   6                                                menucnt = 0;
 193   6                                                Disp_Menu_0(menucnt);
 194   6                                    OLED_Refresh_Gram();
 195   6                                        }                                     
 196   5                                      }
 197   4                                      else
 198   4                                      {
 199   5                                        MODE = cutmode;
 200   5                                        Done = 1;
 201   5                                      }
 202   4                        break;
 203   4                        case PR_OK:
 204   4                                      Key_change=0; 
 205   4                              BeepFlag =1;
 206   4                                      if(InMode)
 207   4                                      {
 208   5                                                if(menucnt ==2)        
 209   5                                                {
 210   6                                                    if(Eraseflag == 1)
 211   6                                                        {
 212   7                                                      
 213   7                                                              if(YesNo)
 214   7                                                              {
 215   8                                                                  OLED_Clear();
 216   8                                                                  OLED_ShowString(2,10,"ERASE MEMORRY...",12,1);                                       
 217   8                                                                      OLED_Refresh_Gram();
 218   8                                                                  Flush_24c02();
 219   8                                                                  OLED_Clear();
 220   8                                                                  OLED_ShowString(2,10,"ERASE DONE!",12,1);                                    
 221   8                                                                      OLED_Refresh_Gram();
 222   8      
 223   8                                                              }
 224   7      
 225   7                                                          OLED_Clear();
 226   7                                                          Disp_Menu_0(menucnt);
 227   7                                                              OLED_Refresh_Gram();                                                
 228   7                                                              Eraseflag = 0;
 229   7                                                              YesNo = 0;
 230   7                                                        }
 231   6                                                        else
 232   6                                                        {
 233   7                                                          Eraseflag = 1;
 234   7                                                      OLED_Clear();
 235   7                                                          OLED_ShowString(2,0,"Do you want clear all memorry?",12,1); 
 236   7                                                              OLED_ShowString(70,20,"YES",12,1);
 237   7                                                              OLED_ShowString(110,20,"NO",12,0);                               
 238   7                                              OLED_Refresh_Gram();                                              
 239   7                                                        }
 240   6                                                                                          
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 5   

 241   6                                                }
 242   5      /*                                        else if(menucnt ==1)   
 243   5                                                {
 244   5                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 245   5                                                init_windows(20,0,80,32,"Notice"," VT62538-B2",0);
 246   5                                                OLED_Draw_WindowsDraw(&windemo);
 247   5                                                        POP = 1;
 248   5                                            OLED_Refresh_Gram();                                          
 249   5                                                }
 250   5                                                else if(menucnt ==2
 251   5                                                {
 252   5                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 253   5                                                init_windows(20,0,80,32,"Notice"," COB",0);
 254   5                                                OLED_Draw_WindowsDraw(&windemo);
 255   5                                                        POP = 1;
 256   5                                            OLED_Refresh_Gram();                                          
 257   5                                                }      
 258   5      */                                                                      
 259   5                                      }
 260   4                                      else
 261   4                                      {
 262   5                                        OLED_Clear();
 263   5                                        Disp_Menu_0(menucnt);
 264   5                            OLED_Refresh_Gram();
 265   5                                        InMode = 1;
 266   5                                      }
 267   4                        break;
 268   4                        case PR_MOD:
 269   4                                      Key_change=0; 
 270   4                              BeepFlag =1;
 271   4                                      OLED_Clear();
 272   4                                      Done = 1;
 273   4                        break;
 274   4                      }
 275   3                
 276   3                }
 277   2              }
 278   1      
 279   1      }
 280          void cut_mode(void)
 281          {
 282   1          u8 Done;
 283   1              u8 InMode;
 284   1              u8 menucnt;
 285   1              menucnt = 0;
 286   1              InMode = 0;
 287   1              Done = 0;
 288   1              Disp_Menu_Main(cutmode);
 289   1              OLED_Refresh_Gram();
 290   1              while(!Done)
 291   1              {
 292   2                if(Key_change)
 293   2                {
 294   3                      switch(Key_back)
 295   3                      {
 296   4                        case PR_ADD:
 297   4                                      Key_change=0; 
 298   4                              BeepFlag =1;
 299   4                                      if(InMode)
 300   4                                      {
 301   5                                        if(menucnt --<=0)
 302   5                                        menucnt = 3;
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 6   

 303   5                                        Disp_Menu_1(menucnt);
 304   5                            OLED_Refresh_Gram();
 305   5                                      }
 306   4                                      else
 307   4                                      {
 308   5                                        MODE = setmode;
 309   5                                        Done = 1;
 310   5                                      }
 311   4                        break;
 312   4                        case PR_SUB:
 313   4                                      Key_change=0; 
 314   4                              BeepFlag =1;
 315   4                                      if(InMode)
 316   4                                      {
 317   5                                        if(menucnt ++>=3)
 318   5                                        menucnt = 0;
 319   5                                        Disp_Menu_1(menucnt);
 320   5                            OLED_Refresh_Gram();                                                              
 321   5                                      }
 322   4                                      else
 323   4                                      {
 324   5                                        MODE = testmode;
 325   5                                        Done = 1;
 326   5                                      }
 327   4                        break;
 328   4                        case PR_OK:
 329   4                                      Key_change=0; 
 330   4                              BeepFlag =1;
 331   4                                      if(InMode)
 332   4                                      {
 333   5                                        if(menucnt ==3)        //返回
 334   5                                        {
 335   6                                          OLED_Clear();        //清屏 
 336   6                                          Done = 1;
 337   6                                          return;
 338   6                                        }
 339   5                                        else
 340   5                                        {
 341   6                                        /*
 342   6                                                if(menucnt ==0)        //PKG-1
 343   6                                                {
 344   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 345   6                                                init_windows(20,0,80,32,"Notice"," VT62538-B1",0);
 346   6                                                OLED_Draw_WindowsDraw(&windemo);
 347   6                                                        POP = 1;
 348   6                                            OLED_Refresh_Gram();                                  
 349   6                                                }
 350   6                                                else if(menucnt ==1)   //PKG-2
 351   6                                                {
 352   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 353   6                                                init_windows(20,0,80,32,"Notice"," VT62538-B2",0);
 354   6                                                OLED_Draw_WindowsDraw(&windemo);
 355   6                                                        POP = 1;
 356   6                                            OLED_Refresh_Gram();                                          
 357   6                                                }
 358   6                                                else if(menucnt ==2)   //COB
 359   6                                                {
 360   6                                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 361   6                                                init_windows(20,0,80,32,"Notice"," COB",0);
 362   6                                                OLED_Draw_WindowsDraw(&windemo);
 363   6                                                        POP = 1;
 364   6                                            OLED_Refresh_Gram();                                          
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 7   

 365   6                                                }      
 366   6                                                */
 367   6                                                OLED_Clear();
 368   6                                                PKG = menucnt; //注意增加型号需要判断是否对应
 369   6                                                OK_COUNT = 0;
 370   6                                                NG_COUNT = 0;
 371   6                                                CutRun(PKG);    
 372   6                                            OLED_Clear();       //退出了割码操作
 373   6                                            Disp_Menu_1(menucnt);
 374   6                                OLED_Refresh_Gram();
 375   6                                        }
 376   5                                      }
 377   4                                      else
 378   4                                      {
 379   5                                        OLED_Clear();
 380   5                                        Disp_Menu_1(menucnt);
 381   5                            OLED_Refresh_Gram();
 382   5                                        InMode = 1;
 383   5                                      }
 384   4                        break;
 385   4                        case PR_MOD:
 386   4                                      Key_change=0; 
 387   4                              BeepFlag =1;
 388   4                                      OLED_Clear();
 389   4                                      Done = 1;
 390   4                        break;
 391   4                      }
 392   3                
 393   3                }
 394   2              }
 395   1      }
 396          void test_mode(void)
 397          {
 398   1          u8 Done;
 399   1              u8 InMode;
 400   1              u32 IRtmp;
 401   1              IRtmp = 0;
 402   1              InMode = 0;
 403   1              Done = 0;
 404   1              DsDecode();
 405   1              Disp_Menu_Main(testmode);
 406   1              OLED_Refresh_Gram();
 407   1              while(!Done)
 408   1              {
 409   2                if(InMode)
 410   2                {
 411   3      
 412   3                  if((ReIRcode & 0xf) != 0)
 413   3                      {
 414   4                         IRtmp = ReIRcode;
 415   4                      }
 416   3                      if(IRtmp)
 417   3                      {
 418   4                          OLED_ShowChar(36,16,Hex2Dat(((IRtmp>>16)>>4)&0x0f),12,1);
 419   4                          OLED_ShowChar(42,16,Hex2Dat(((IRtmp>>16)&0x0f)),12,1);
 420   4                      
 421   4                              OLED_ShowChar(54,16,Hex2Dat(((IRtmp>>8)>>4)&0x0f),12,1);
 422   4                              OLED_ShowChar(60,16,Hex2Dat(((IRtmp>>8)&0x0f)),12,1);
 423   4                      
 424   4                              OLED_ShowChar(72,16,Hex2Dat(((IRtmp)>>4)&0x0f),12,1);
 425   4                              OLED_ShowChar(78,16,Hex2Dat(((IRtmp)&0x0f)),12,1);
 426   4                              OLED_Refresh_Gram();
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 8   

 427   4                      }   
 428   3                }
 429   2      
 430   2                if(Key_change)
 431   2                {
 432   3                      switch(Key_back)
 433   3                      {
 434   4                        case PR_ADD:
 435   4                                      Key_change=0; 
 436   4                              BeepFlag =1;
 437   4                                      if(InMode)
 438   4                                      {
 439   5                                      
 440   5                                      }
 441   4                                      else
 442   4                                      {
 443   5                                        MODE = cutmode;
 444   5                                        Done = 1;
 445   5                                      }
 446   4                        break;
 447   4                        case PR_SUB:
 448   4                                      Key_change=0; 
 449   4                              BeepFlag =1;
 450   4                                      if(InMode)
 451   4                                      {
 452   5                                      
 453   5                                      }
 454   4                                      else
 455   4                                      {
 456   5                                        MODE = setmode;
 457   5                                        Done = 1;
 458   5                                      }
 459   4                        break;
 460   4                        case PR_OK:
 461   4                                      Key_change=0; 
 462   4                              BeepFlag =1;
 463   4                                      if(InMode)
 464   4                                      {
 465   5      
 466   5                                      }
 467   4                                      else
 468   4                                      {
 469   5                                       /*
 470   5                                        Flush_24c02();
 471   5                                        memcpy(OLED_GRAM_TMP,OLED_GRAM,512);
 472   5                                init_windows(10,0,100,32,"Notice"," FLUSH 2402 OK!",0);
 473   5                                OLED_Draw_WindowsDraw(&windemo);
 474   5                                        POP = 1;
 475   5                            OLED_Refresh_Gram();
 476   5                                        */
 477   5                                        EnDecode();
 478   5                                        OLED_Clear();
 479   5                                        OLED_ShowString(46,0,"DECODE",12,1);
 480   5                                        OLED_Refresh_Gram();
 481   5                                        InMode = 1;
 482   5                                      }
 483   4                        break;
 484   4                        case PR_MOD:
 485   4                                      Key_change=0; 
 486   4                              BeepFlag =1;
 487   4                                      OLED_Clear();
 488   4                                      Done = 1;
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 9   

 489   4                        break;
 490   4                      }
 491   3                
 492   3                }
 493   2              }
 494   1      }
 495          
 496          void lookinfo(void)
 497          {
 498   1      
 499   1      }
 500          
 501          void main(void)
 502          {
 503   1          SPEAKER = 0;
 504   1          sysInit();
 505   1              SPEAKER = 1;
 506   1      #ifdef PRINT_AUTHOR_INFO
 507   1              printInfo();
 508   1      #endif
 509   1          EA = 1;
 510   1              SPEAKER = 0;
 511   1              AddNo = 1;
 512   1              OLED_Clear();
 513   1              while(1)
 514   1              {
 515   2                 switch(MODE)
 516   2                 {
 517   3                       case setmode:
 518   3                         set_mode();
 519   3                       break;
 520   3                       case cutmode:
 521   3                         cut_mode();
 522   3                       break;
 523   3                       case testmode:
 524   3                         test_mode();
 525   3                       break;
 526   3                 }
 527   2      
 528   2      /*
 529   2                if((Key_back == PR_ADD)&&(Key_change))
 530   2                {
 531   2                 AddNo >>= 1;         storge595(&AddNo,4); Key_change=0; BeepFlag =1; 
 532   2                }
 533   2                else if((Key_back == PR_SUB)&&(Key_change))
 534   2                {
 535   2                 AddNo <<= 1;         storge595(&AddNo,4);  Key_change=0;     BeepFlag =1;
 536   2                }
 537   2                else if((Key_back == PR_OK)&&(Key_change))
 538   2                {
 539   2                 StartCut(0); Key_change=0;   BeepFlag =1;
 540   2                 
 541   2                }
 542   2       */       
 543   2              }
 544   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1948    ----
   CONSTANT SIZE    =    515    ----
   XDATA SIZE       =     30      31
C51 COMPILER V9.00   MAIN                                                                  04/24/2015 19:30:25 PAGE 10  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
