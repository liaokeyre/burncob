C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 24C02
OBJECT MODULE PLACED IN .\output\24c02.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE eeprom\24c02.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;
                    -.\cd4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\24c02.lst) OBJECT(.\output\24c02.obj)

line level    source

   1          #include        "main.h"
   2          #include    "24c02.h"
   3          #include    "oled.h"
   4          bool ACK = 1;  
   5          /*******************************************************************************************
   6              延时 10us             @11.0592MHz
   7          *********************************************************************************************/
   8          void delay_10us()
   9          {
  10   1               u8 i;
  11   1              _nop_();
  12   1              _nop_();
  13   1              _nop_();
  14   1              i = 24;
  15   1              while (--i);
  16   1      }    
  17          /*******************************************************************************************
  18              延时 5us               @11.0592MHz
  19          *********************************************************************************************/
  20          void delay_5us()
  21          {
  22   1               u8 i;
  23   1              _nop_();
  24   1              _nop_();
  25   1              _nop_();
  26   1              i = 10;
  27   1              while (--i);
  28   1      }
  29          /*******************************************************************************************
  30              延时 10ms                   @11.0592MHz
  31          *********************************************************************************************/
  32          void delay_10ms()
  33          {
  34   1      
  35   1              u8 i, j;
  36   1              _nop_();
  37   1              _nop_();
  38   1              i = 108;
  39   1              j = 144;
  40   1              do
  41   1              {
  42   2               while (--j);
  43   2              }
  44   1              while (--i);
  45   1      }
  46          /*******************************************************************************************
  47          函数名: bit i2c_start()
  48          说明: 启动成功返回1, 启动失败还回0
  49          
  50                  ````````````
  51          SCL 
  52          
  53                   `````|
  54          SDA       |__
C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 2   

  55          ********************************************************************************************/
  56          bit i2c_start()
  57          {
  58   1          delay_10us();
  59   1          I2C_SCL = 1;
  60   1          delay_10us();
  61   1          I2C_SDA = 1;
  62   1          delay_10us();
  63   1          if (I2C_SCL & I2C_SDA) // 确保为高电平 
  64   1          {
  65   2              I2C_SDA = 0;       // 启动I2C总线 
  66   2             delay_10us();
  67   2              I2C_SCL = 0;       // 拉低时钟线以备用 
  68   2             delay_10us();
  69   2              return 1;
  70   2          }
  71   1          else
  72   1          {
  73   2              return 0;
  74   2          }
  75   1      }
  76          
  77          /*******************************************************************************************
  78          函数名: void i2c_stop()
  79          说明: I2C停止信号
  80          
  81                  ````````````
  82          SCL 
  83          
  84                          |`````
  85          SDA ____|
  86          ********************************************************************************************/
  87          void i2c_stop()
  88          {
  89   1          delay_10us();
  90   1          I2C_SDA = 0;
  91   1          delay_10us();
  92   1          I2C_SCL = 1;
  93   1          delay_10us();
  94   1          I2C_SDA = 1;
  95   1      }
  96          
  97           
  98          
  99          /*******************************************************************************************
 100          函数名: bit i2c_sentbyte(u8 byt)
 101          说明: 发送数据,还回 1: 发送成功 0;发送失败
 102          ********************************************************************************************/
 103          bit i2c_sentbyte(u8 byt)
 104          {
 105   1          u8 i;
 106   1          
 107   1          for (i = 0; i < 8; i++)
 108   1          {
 109   2              delay_5us();   
 110   2              if (byt & 0x80)
 111   2              {
 112   3                  I2C_SDA = 1;
 113   3              }
 114   2              else
 115   2              {
 116   3                  I2C_SDA = 0;
C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 3   

 117   3              }
 118   2              
 119   2              delay_5us();
 120   2              I2C_SCL = 1;
 121   2              delay_5us();
 122   2              I2C_SCL = 0;    
 123   2              
 124   2              byt <<= 1;
 125   2          }
 126   1          delay_5us();    // 在第9 个周期响应ACK,读24c64发送出的应答信号ACK拉SDA 
 127   1          I2C_SDA = 1;
 128   1          delay_5us();
 129   1          I2C_SCL = 1;
 130   1          delay_5us();
 131   1          ACK = I2C_SDA; // 读应答信号 
 132   1          I2C_SCL = 0;
 133   1          
 134   1          return ACK;
 135   1      }
 136          
 137          /*******************************************************************************************
 138          函数名: u8 i2c_rcvbyte(u8 ack_chack)
 139          说明: 接收数据 ack_chack= 1: 发送应答信号, 0: 不发送应答信号
 140              ** 发送主机发送应答信号后 SDA为低电平,此时接收数据要重新拉高SDA电平
 141          ********************************************************************************************/
 142          u8 i2c_rcvbyte(u8 ack_chack)
 143          {
 144   1          u8 i, temp = 0;
 145   1          
 146   1          delay_5us();    
 147   1          I2C_SDA = 1;    // 读数据时候先拉高SDA电平 
 148   1          
 149   1          for (i = 0; i < 8; i++)
 150   1          {
 151   2              temp <<= 1;
 152   2              delay_5us();
 153   2              I2C_SCL = 1;
 154   2              delay_5us();
 155   2              if (I2C_SDA)
 156   2                      temp++;
 157   2              I2C_SCL = 0;    
 158   2          }
 159   1          
 160   1          delay_5us();    // 发送应答信号
 161   1          I2C_SDA = 1;
 162   1          if (ack_chack) // 如果为 1 发送应答信号
 163   1          {   
 164   2              I2C_SDA = 0;
 165   2          }
 166   1      
 167   1          delay_5us();
 168   1          I2C_SCL = 1;
 169   1          delay_5us();
 170   1          I2C_SCL = 0;
 171   1      //////////////////////////////////////////是否发送NACK?*******?????????????????????????
 172   1          return (temp);
 173   1      }
 174          /****************************************************************************
 175          * 功能：写一个字节到24C02指定的地址
 176          * 入口参数：address，地址（0x00~0xFF）；dat，数据
 177          * 出口参数：无
 178          * 说明：
C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 4   

 179          ****************************************************************************/
 180          void at24c02_wr(u8 address, u8 dat)
 181          { 
 182   1          i2c_start();   
 183   1          i2c_sentbyte(0xa0); 
 184   1          i2c_sentbyte(address); 
 185   1          i2c_sentbyte(dat); 
 186   1          i2c_stop(); 
 187   1      //    delay_10ms();  //增加了进度条，删除死延时！
 188   1      }
 189          
 190          void at24c02_wrdat(u8 address, void *dat, u8 bytenum)
 191          { 
 192   1          i2c_start();   
 193   1          i2c_sentbyte(0xa0); 
 194   1          i2c_sentbyte(address);
 195   1              while(bytenum--)
 196   1              { 
 197   2            i2c_sentbyte(*(u8*)dat ); 
 198   2                ((u8*)dat)++;
 199   2                address++;
 200   2                if(address>=0xff)
 201   2                return;
 202   2              }
 203   1          i2c_stop(); 
 204   1          delay_10ms(); 
 205   1      }
 206          /****************************************************************************
 207          * 功能：从24C02指定的地址读出一个字节
 208          * 入口参数：address，地址（0x00~0xFF）。
 209          * 出口参数：读到的数据
 210          * 说明：
 211          ****************************************************************************/
 212          u8 at24c02_rd(u8 address)
 213          { 
 214   1          u8 temp;      
 215   1          i2c_start();    
 216   1          i2c_sentbyte(0xa0); 
 217   1          i2c_sentbyte(address);      
 218   1          i2c_start();   
 219   1          i2c_sentbyte(0xa1); 
 220   1          temp = i2c_rcvbyte(0);
 221   1          i2c_stop();
 222   1              return temp;
 223   1      }
 224          void at24c02_rddat(u8 address, void *dat, u8 bytenum)
 225          { 
 226   1          if(bytenum)
 227   1              {  
 228   2                      i2c_start();    
 229   2                      i2c_sentbyte(0xa0); 
 230   2                      i2c_sentbyte(address);      
 231   2                      i2c_start();   
 232   2                      i2c_sentbyte(0xa1); 
 233   2                      bytenum--;
 234   2              while (bytenum--)
 235   2              {
 236   3                  *(u8*)dat = i2c_rcvbyte(1); // 发送ACK进行连续读 
 237   3                  ((u8*)dat)++;               // 主机接收存储单元加一           
 238   3              }
 239   2              *(u8*)dat = i2c_rcvbyte(0);     // 读最后一个数据,不发送ACK
 240   2                      i2c_stop();
C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 5   

 241   2              }
 242   1      }
 243          
 244          void Flush_24c02(void)
 245          {
 246   1        u8 i;
 247   1        OLED_DrawRectangle(0, 26, 126, 30, 1);
 248   1        for(i=0;i<0xff;i++)
 249   1        {
 250   2          at24c02_wr(i,0);  //全部填充0
 251   2              OLED_Draw_RectangleFill(1, 27, 1+i/2, 29, 1); 
 252   2              OLED_Refresh_Gram();
 253   2        } 
 254   1      }
 255          /****************************************************************/
 256          //获取地址码
 257          /***************************************************************/
 258          u32 Get_Pkg_Add(u8 package)
 259          {
 260   1         u32 ret;
 261   1         if(package == Package_1)
 262   1         {
 263   2          at24c02_rddat(PKG1_ADD, &ret, 4);
 264   2         } 
 265   1         else if(package == Package_2)
 266   1         {
 267   2          at24c02_rddat(PKG2_ADD, &ret, 4);
 268   2         } 
 269   1         else
 270   1         {
 271   2          at24c02_rddat(PKG3_ADD, &ret, 4);
 272   2         } 
 273   1         return ret;
 274   1      }
 275          
 276          /****************************************************************/
 277          //获取地址码    mode 0=OK  1=NG
 278          /***************************************************************/
 279          u32 Get_Pkg_CNT(u8 package,u8 mode)
 280          {
 281   1         u32 ret;
 282   1         if(mode == 0)
 283   1         {
 284   2                 if(package == Package_1)
 285   2                 {
 286   3                  at24c02_rddat(COUNT1_OK_ADD, &ret, 4);
 287   3                 } 
 288   2                 else if(package == Package_2)
 289   2                 {
 290   3                  at24c02_rddat(COUNT2_OK_ADD, &ret, 4);
 291   3                 } 
 292   2                 else
 293   2                 {
 294   3                  at24c02_rddat(COUNT3_OK_ADD, &ret, 4);
 295   3                 } 
 296   2         }
 297   1         else
 298   1         {
 299   2                 if(package == Package_1)
 300   2                 {
 301   3                  at24c02_rddat(COUNT1_NG_ADD, &ret, 4);
 302   3                 } 
C51 COMPILER V9.00   24C02                                                                 05/05/2015 10:51:29 PAGE 6   

 303   2                 else if(package == Package_2)
 304   2                 {
 305   3                  at24c02_rddat(COUNT2_NG_ADD, &ret, 4);
 306   3                 } 
 307   2                 else
 308   2                 {
 309   3                  at24c02_rddat(COUNT3_NG_ADD, &ret, 4);
 310   3                 }   
 311   2         }
 312   1         return ret;
 313   1      }
 314          
 315          
 316          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    600    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
