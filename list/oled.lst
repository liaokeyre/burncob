C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\output\oled.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled\oled.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\oled.lst) OBJECT(.\output\oled.obj)

line level    source

   1          /***********************************************************************************************
   2          π¶ƒ‹Àµ√˜£∫“—÷ß≥÷ª≠µ„£¨ª≠œﬂ£¨ª≠æÿ–Œ£¨ª≠‘≤£¨ª≠¥∞ø⁄£¨ª≠BMP
   3          “∆÷≤£∫liaokeyre
   4          ************************************************************************************************/
   5          //Ω”ø⁄∂®“Â≤Œ’’oled.hŒƒº˛
   6          //ÀƒœﬂSPI–Ë“™Ω”∆ﬂ∏˘œﬂ£¨∆‰÷–RESø…“‘≤ªΩ”£ªµ´ «≤ªΩ” ±∫Ú±ÿ–Î¿≠∏ﬂ
   7          // GND,VCC,CS,RES,D/C,CLK,DIN
   8          //πÿ”⁄µÁ—πŒ Ã‚£ª»Áπ˚øÕªß–Ë“™≥§ ±º‰Œ»∂®π§◊˜£ªΩ®“È»´≤ø≤…”√3.3VµÁ‘¥£ªµÁ∆Ω–≈∫≈“≤≤…”√3.3Vµƒ
   9          //»Áπ˚øÕªß–Ë“™”√5VµÁ‘¥£¨À‰»ª5Vø…“‘’˝≥£π§◊˜£¨µ´ Ω®“È«≤ª“™≥§ ±º‰π§◊˜£ª’‚—˘ø…ƒ‹ª·ºı…Ÿ∆¡µƒ Ÿ√¸£ª‘⁄VCC∂À¥Æ“ª–°µ
             -Á◊Ëø…ƒ‹ª·∫√“ª–©°£
  10          #include "oled.h"
  11          #include "oledfont.h" 
  12          #define GUI_LCM_XMAX 128
  13          #define GUI_LCM_YMAX  32         
  14          //#include "delay.h"
  15          //OLEDµƒœ‘¥Ê
  16          //¥Ê∑≈∏Ò Ω»Áœ¬.
  17          //[0]0 1 2 3 ... 127    
  18          //[1]0 1 2 3 ... 127    
  19          //[2]0 1 2 3 ... 127    
  20          //[3]0 1 2 3 ... 127
  21          //--------------------------------------12832   
  22          //[4]0 1 2 3 ... 127    
  23          //[5]0 1 2 3 ... 127    
  24          //[6]0 1 2 3 ... 127    
  25          //[7]0 1 2 3 ... 127 
  26          u8 OLED_GRAM[128][4];//œ‘¥Ê
  27          u8 OLED_GRAM_TMP[128][4];
  28          
  29          /****************************************************************************
  30          ◊÷Ω⁄¬Î∏ﬂµÕŒªæµœÒ≤Ÿ◊˜
  31          ÷˜“™ «”–“ª∏ˆ◊÷ø‚»°¬Î∑ΩœÚ «∑¥µƒ
  32          ÷ÿ–¬◊ˆ◊÷ø‚”÷¬È∑≥°£°£°£°£
  33          ****************************************************************************/   
  34          u8 ByteMirro(u8 dat)
  35          {
  36   1       dat = (dat & 0xf0) >> 4 | (dat & 0x0f)  << 4;//“‘4ŒªŒ™µ•ŒªΩ¯––Ωªªª    abcd  1234
  37   1       dat = (dat & 0xcc) >> 2 | (dat & 0x33)  << 2;//“‘2ŒªŒ™µ•ŒªΩ¯––Ωªªª    cdab  3412
  38   1       dat = (dat & 0xaa) >> 1 | (dat & 0x55)  << 1;//“‘1ŒªŒ™µ•ŒªΩ¯––Ωªªª   dcba  4321
  39   1       return dat;
  40   1      }
  41                             
  42          void delay_ms(unsigned int ms)
  43          {                         
  44   1              unsigned int a;
  45   1              while(ms)
  46   1              {
  47   2                      a=1800;
  48   2                      while(a--);
  49   2                      ms--;
  50   2              }
  51   1      //      return;
  52   1      }
  53          #if OLED_MODE==1
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 2   

              //œÚSSD1106–¥»Î“ª∏ˆ◊÷Ω⁄°£
              //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
              //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  71          //œÚSSD1306–¥»Î“ª∏ˆ◊÷Ω⁄°£
  72          //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
  73          //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
  74          void OLED_WR_Byte(u8 dat,u8 cmd)
  75          {       
  76   1              u8 i;                     
  77   1              if(cmd)
  78   1                OLED_DC_Set();
  79   1              else 
  80   1                OLED_DC_Clr();                  
  81   1              OLED_CS_Clr();
  82   1              for(i=0;i<8;i++)
  83   1              {                         
  84   2                      OLED_SCLK_Clr();
  85   2                      if(dat&0x80)
  86   2                      {
  87   3                        OLED_SDIN_Set();
  88   3                      }
  89   2              else
  90   2                  OLED_SDIN_Clr();
  91   2                  OLED_SCLK_Set();
  92   2                      dat<<=1;   
  93   2              }                                                 
  94   1              OLED_CS_Set();
  95   1              OLED_DC_Set();            
  96   1      } 
  97          #endif
  98          
  99          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 100          { 
 101   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
 102   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 103   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 104   1      } 
 105          /*        
 106          //ø™∆ÙOLEDœ‘ æ    
 107          void OLED_Display_On(void)
 108          {
 109                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 110                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 111                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 112          }
 113          //πÿ±’OLEDœ‘ æ     
 114          void OLED_Display_Off(void)
 115          {
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 3   

 116                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 117                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 118                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 119          }
 120          */
 121          void OLED_Refresh_Gram(void)
 122          {
 123   1              u8 i,n;             
 124   1              for(i=0;i<4;i++)  
 125   1              {  
 126   2                      OLED_WR_Byte (0xb4+i,OLED_CMD);    //…Ë÷√“≥µÿ÷∑£®0~7£©b4-->b7
 127   2                      OLED_WR_Byte (0x04,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–µÕµÿ÷∑
 128   2                      OLED_WR_Byte (0x10,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–∏ﬂµÿ÷∑   
 129   2                      for(n=0;n<128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); 
 130   2              }   
 131   1      }
 132                                                   
 133          //«Â∆¡∫Ø ˝,«ÂÕÍ∆¡,’˚∏ˆ∆¡ƒª «∫⁄…´µƒ!∫Õ√ªµ„¡¡“ª—˘!!!      
 134          void OLED_Clear(void)  
 135          {  
 136   1              u8 i,n;  
 137   1              for(i=0;i<4;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
 138   1      //      OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 139   1      }  
 140          //ª≠µ„ 
 141          //x:0~127
 142          //y:0~63
 143          //t:1 ÃÓ≥‰ 0,«Âø’                                  
 144          void OLED_DrawPoint(u8 x,u8 y,u8 t)
 145          {
 146   1              u8 pos,bx,temp=0;
 147   1              if(x>127||y>63)return;//≥¨≥ˆ∑∂Œß¡À.
 148   1              pos=7-y/8;            //µ√µΩÀ˘‘⁄“≥
 149   1              bx=y%8;                           //µ√µΩµ±«∞“≥æ´»∑Œª÷√
 150   1              temp=1<<(7-bx);
 151   1              if(t)OLED_GRAM[x][pos]|=temp;
 152   1              else OLED_GRAM[x][pos]&=~temp;      
 153   1      }
 154          
 155          //////////////////////////////////
 156          //“‘x1,y1Œ™∆µ„£¨x2,y2Œ™÷’µ„ª≠œﬂ//
 157          /////////(t=1ª≠µ„£¨t=0«Âµ„)///////
 158          //////////////////////////////////
 159          //ª≠œﬂ∫Ø ˝
 160          void OLED_DrawLine(u8 x1,u8 y1,u8 x2,u8 y2,u8 t) //y=kx+b
 161          {
 162   1              s16 dy;
 163   1              s16 dx;
 164   1              s8 dirx,diry,move;
 165   1              dy=y2-y1; 
 166   1              dx=x2-x1; 
 167   1              if(dy<0)  
 168   1              {
 169   2                      dy=-dy;
 170   2                      diry=-1;
 171   2              }
 172   1              else 
 173   1              {
 174   2                      diry=1;
 175   2              }
 176   1              if(dx<0)
 177   1              {
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 4   

 178   2                      dx=-dx;
 179   2                      dirx=-1;
 180   2              }
 181   1              else
 182   1              {
 183   2                      dirx=1;
 184   2              }
 185   1      //      dy<<=1; 
 186   1      //      dx<<=1;
 187   1              OLED_DrawPoint(x1,y1,t);
 188   1              if(dx>dy)       //////////////////
 189   1              {
 190   2                      move=dy-(dx>>1); 
 191   2                      while(x1!=x2)
 192   2                      {
 193   3                              if(move>=0)
 194   3                              {
 195   4                                      y1+=diry; 
 196   4                                      move-=dx;
 197   4                              }
 198   3                              x1+=dirx;
 199   3                              move+=dy;  
 200   3                              OLED_DrawPoint(x1,y1,t);
 201   3                      }
 202   2              }
 203   1              else
 204   1              {
 205   2                      move=dx-(dy>>1);
 206   2                      while(y1!=y2)
 207   2                      {
 208   3                              if(move>=0)
 209   3                              {
 210   4                                      x1+=dirx;
 211   4                                      move-=dy;
 212   4                              }
 213   3                              y1+=diry;
 214   3                              move+=dx;
 215   3                              OLED_DrawPoint(x1,y1,t);
 216   3                      }
 217   2              }
 218   1      }
 219          
 220          /****************************************************************************
 221          * π¶ƒ‹£∫ª≠ÀÆ∆Ωœﬂ°£
 222          * »Îø⁄≤Œ ˝£∫x0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 223          *           y0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄––µƒŒª÷√
 224          *           x1      ÀÆ∆Ωœﬂ÷’µ„À˘‘⁄¡–µƒŒª÷√
 225          *           t       œ‘ æ—’…´(∂‘”⁄∫⁄∞◊…´LCM£¨Œ™0 ±√£¨Œ™1 ±œ‘ æ)
 226          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 227          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 228          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 229          ****************************************************************************/
 230          void  OLED_Draw_HLine(u8 x0, u8 y0, u8 x1, u8 t)
 231          {
 232   1          u8  temp;
 233   1          if(x0>x1)               // ∂‘x0°¢x1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 234   1          {
 235   2              temp = x1;
 236   2              x1 = x0;
 237   2              x0 = temp;
 238   2          }
 239   1          do
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 5   

 240   1          {
 241   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 242   2              x0++;
 243   2          }
 244   1          while(x1>=x0);
 245   1      }
 246          /****************************************************************************
 247          * π¶ƒ‹£∫ª≠¥π÷±œﬂ°£
 248          * »Îø⁄≤Œ ˝£∫x0      ¥π÷±œﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 249          *           y0      ¥π÷±œﬂ∆µ„À˘‘⁄––µƒŒª÷√
 250          *           y1      ¥π÷±œﬂ÷’µ„À˘‘⁄––µƒŒª÷√
 251          *           t       œ‘ æ—’…´
 252          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 253          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 254          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 255          ****************************************************************************/
 256          void  OLED_Draw_RLine(u8 x0, u8 y0, u8 y1, u8 t)
 257          {
 258   1          u8  temp;
 259   1          if(y0>y1)       // ∂‘y0°¢y1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 260   1          {
 261   2              temp = y1;
 262   2              y1 = y0;
 263   2              y0 = temp;
 264   2          }
 265   1          do
 266   1          {
 267   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 268   2              y0++;
 269   2          }
 270   1          while(y1>=y0);
 271   1      }
 272          /****************************************************************************
 273          * π¶ƒ‹£∫ª≠æÿ–Œ°£
 274          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 275          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 276          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 277          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 278          *           t       1ª≠µ„£¨0«Âµ„
 279          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 280          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 281          ****************************************************************************/
 282          void  OLED_DrawRectangle(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 283          {  OLED_Draw_HLine(x1, y1, x2, t);
 284   1         OLED_Draw_HLine(x1, y2, x2, t);
 285   1         OLED_Draw_RLine(x1, y1, y2, t);
 286   1         OLED_Draw_RLine(x2, y1, y2, t);
 287   1      }
 288          /****************************************************************************
 289          * π¶ƒ‹£∫ÃÓ≥‰æÿ–Œ°£ª≠“ª∏ˆÃÓ≥‰µƒæÿ–Œ£¨ÃÓ≥‰…´”Î±ﬂøÚ…´“ª—˘°£
 290          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 291          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 292          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 293          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 294          *           t       ÃÓ≥‰—’…´
 295          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 296          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 297          ****************************************************************************/
 298          void  OLED_Draw_RectangleFill(u8 x0, u8 y0, u8 x1, u8 y1, u8 t)
 299          {  u8  i;
 300   1      
 301   1         /* œ»’“≥ˆæÿ–Œ◊Û…œΩ«”Î”“œ¬Ω«µƒ¡Ω∏ˆµ„£¨±£¥Ê‘⁄(x0,y0)£¨(x1,y1) */
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 6   

 302   1         if(x0>x1)                                            // »Ùx0>x1£¨‘Úx0”Îx1Ωªªª
 303   1         {  i = x0;
 304   2            x0 = x1;
 305   2            x1 = i;
 306   2         }
 307   1         if(y0>y1)                                            // »Ùy0>y1£¨‘Úy0”Îy1Ωªªª
 308   1         {  i = y0;
 309   2            y0 = y1;
 310   2            y1 = i;
 311   2         }
 312   1         
 313   1         /* ≈–∂œ «∑Ò÷ª «÷±œﬂ */
 314   1         if(y0==y1) 
 315   1         {  OLED_Draw_HLine(x0, y0, x1, t);
 316   2            return;
 317   2         }
 318   1         if(x0==x1) 
 319   1         {  (x0, y0, y1, t);
 320   2            return;
 321   2         }
 322   1      
 323   1         while(y0<=y1)                                                
 324   1         {  OLED_Draw_HLine(x0, y0, x1, t);   // µ±«∞ª≠ÀÆ∆Ωœﬂ
 325   2            y0++;                                                     // œ¬“ª––
 326   2         }
 327   1      }
 328          /****************************************************************************
 329          * π¶ƒ‹£∫ª≠’˝∑Ω–Œ°£
 330          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 331          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 332          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 333          *           t       œ‘ æ—’…´
 334          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 335          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 336          ****************************************************************************/
 337          void  OLED_Draw_Square(u8 x0, u8 y0, u8  with, u8 t)
 338          { 
 339   1          if(with==0) return;
 340   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 341   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 342   1              OLED_DrawRectangle(x0, y0, x0+with, y0+with, t);
 343   1      }
 344          /****************************************************************************
 345          * π¶ƒ‹£∫ª≠’˝∑Ω–ŒÃÓ≥‰°£
 346          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 347          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 348          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 349          *           t       œ‘ æ—’…´
 350          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 351          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 352          ****************************************************************************/
 353          void  OLED_Draw_SquareFill(u8 x0, u8 y0, u8  with, u8 t)
 354          { 
 355   1          if(with==0) return;
 356   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 357   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 358   1              OLED_Draw_RectangleFill(x0, y0, x0+with, y0+with, t);
 359   1      }
 360          /****************************************************************************
 361          * π¶ƒ‹£∫∂‡∏ˆµ„÷Æº‰µƒ¡¨–¯¡¨œﬂ°£¥”µ⁄“ªµ„¡¨µΩµ⁄∂˛µ„£¨‘Ÿ¡¨µΩµ⁄»˝µ„...
 362          * »Îø⁄≤Œ ˝£∫points  ∂‡∏ˆµ„◊¯±Í ˝æ›µƒ÷∏’Î£¨ ˝æ›≈≈¡–Œ™(x0,y0)°¢(x1,y1)°¢(x2,y2)...
 363          *           no      µ„ ˝ƒø£¨÷¡…Ÿ“™¥Û”⁄1
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 7   

 364          *           t   œ‘ æ—’…´
 365          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 366          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 367          ****************************************************************************/
 368          void  OLED_Draw_LineS(u8 const *points, u8 no, u8 t)
 369          {  u8  x0, y0;
 370   1         u8  x1, y1;
 371   1         u8  i;
 372   1      
 373   1         /* »Îø⁄≤Œ ˝π˝¬À */
 374   1         if(0==no) return;
 375   1         if(1==no)                                            // µ•µ„
 376   1         {  x0 = *points++;
 377   2            y0 = *points;
 378   2            OLED_DrawPoint(x0, y0, t);
 379   2         }
 380   1         
 381   1         /* ª≠∂‡ÃıœﬂÃı */
 382   1         x0 = *points++;                                      // »°≥ˆµ⁄“ªµ„◊¯±Í÷µ£¨◊˜Œ™‘≠∆µ„◊¯±Í÷µ
 383   1         y0 = *points++;
 384   1         for(i=1; i<no; i++)
 385   1         {  x1 = *points++;                           // »°≥ˆœ¬“ªµ„◊¯±Í÷µ
 386   2            y1 = *points++;
 387   2            OLED_DrawLine(x0, y0, x1, y1, t);
 388   2            x0 = x1;                                          // ∏¸–¬‘≠∆µ„◊¯±Í
 389   2            y0 = y1;
 390   2         }
 391   1      }
 392          //////////////////////////////
 393          //“‘x,yŒ™‘≤–ƒ£¨“‘rŒ™∞Îæ∂ª≠‘≤//
 394          /////(t=1ª≠µ„£¨t=0«Âµ„)///////
 395          //////////////////////////////
 396          //ª≠‘≤∫Ø ˝
 397          void OLED_DrawCircle(u8 x,u8 y,u16 r,u8 t)
 398          {
 399   1              u8 xc=0;
 400   1              u8 yc;
 401   1              s8 p;
 402   1              yc=r;
 403   1              p=3-(r<<1);
 404   1              while(xc<=yc)  
 405   1              {                 
 406   2                      OLED_DrawPoint(x+xc,y+yc,t);
 407   2                      OLED_DrawPoint(x+xc,y-yc,t);
 408   2                      OLED_DrawPoint(x-xc,y+yc,t);
 409   2                      OLED_DrawPoint(x-xc,y-yc,t);
 410   2                      OLED_DrawPoint(x+yc,y+xc,t);
 411   2                      OLED_DrawPoint(x+yc,y-xc,t);
 412   2                      OLED_DrawPoint(x-yc,y+xc,t);
 413   2                      OLED_DrawPoint(x-yc,y-xc,t);
 414   2                      if(p<0)
 415   2                      p+=((xc++)<<2)+6;
 416   2                      else
 417   2                      p+=(((xc++)-(yc--))<<2)+10;
 418   2              }
 419   1      }
 420          
 421          /****************************************************************************
 422          * π¶ƒ‹£∫œ‘ æ¥∞ø⁄°£∏˘æ›Ã·π©µƒ¥∞ø⁄≤Œ ˝Ω¯––ª≠¥∞ø⁄°£
 423          * »Îø⁄≤Œ ˝£∫win         ¥∞ø⁄æ‰±˙
 424          * ≥ˆø⁄≤Œ ˝£∫∑µªÿ0±Ì æ≤Ÿ◊˜ ß∞‹£¨∑µªÿ1±Ì æ≤Ÿ◊˜≥…π¶
 425          ****************************************************************************/
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 8   

 426          u8  OLED_Draw_WindowsDraw(WINDOWS *win)
 427          {  u8  *str;
 428   1         int8  bak, bak1, bak2;
 429   1         
 430   1         /* ≤Œ ˝π˝¬À£¨»Ù¥∞ø⁄∆≥ˆ∑∂Œß£¨‘Ú∑µªÿ0 */
 431   1         if( ( (win->with)<20 ) || ( (win->hight)<20 ) ) return(0);           // øÌ∂»°¢∏ﬂ∂»ºÏ≤È£¨œﬁ÷∆◊Ó–°¥∞ø⁄
 432   1         if( (win->x + win->with ) > GUI_LCM_XMAX ) return(0);                        // ¥∞ø⁄øÌ∂» «∑Ò“Á≥ˆ
 433   1         if( (win->y + win->hight ) > GUI_LCM_YMAX ) return(0);                       // ¥∞ø⁄∏ﬂ∂» «∑Ò“Á≥ˆ
 434   1          
 435   1         /* ø™ ºª≠¥∞ø⁄ */
 436   1         OLED_Draw_RectangleFill(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 0); //«Â≥ˆ“ª∆¨
             -«¯”Úª≠µØ¥∞
 437   1         OLED_DrawRectangle(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 1);      // ª≠¥∞ø⁄
 438   1         OLED_Draw_HLine(win->x, win->y + 9, win->x + win->with - 1, 1);                                                      // ª≠±ÍÃ‚ƒø¿∏
 439   1      //   OLED_Draw_RLine(win->x + 9, win->y, win->y + 9, 1);                                                                                // ª≠πÿ±’¥∞∫≈∞¥≈•
 440   1      //   OLED_DrawLine(win->x, win->y, win->x + 9, win->y + 9, 1);
 441   1      //   OLED_DrawLine(win->x + 9, win->y, win->x, win->y + 9, 1);
 442   1         OLED_Draw_RLine(win->x + win->with - 10, win->y, win->y + 9, 1);                                                                             // ª≠πÿ±’¥∞∫≈∞¥≈•
 443   1         OLED_DrawLine(win->x + win->with - 10, win->y, win->x + win->with - 1 , win->y + 9, 1);
 444   1         OLED_DrawLine(win->x + win->with - 1, win->y, win->x + win->with - 10, win->y + 9, 1);
 445   1         
 446   1      
 447   1         /* –¥±ÍÃ‚ */
 448   1         if( win->title != 0 ) 
 449   1         {  str = win->title;
 450   2            bak = win->x + 2;
 451   2            bak1 = win->y + 1;                  //titleŒª÷√
 452   2            bak2 = win->x + win->with -1;
 453   2           
 454   2            while(1)                                          
 455   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 456   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 457   3               
 458   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 459   3               bak += 6;
 460   3            }
 461   2         }
 462   1      
 463   1         /* –¥ƒ⁄»› */
 464   1         if( win->text != 0 ) 
 465   1         {  str = win->text;
 466   2            bak = win->x + 2;
 467   2            bak1 = win->y + 12;                 //textŒª÷√
 468   2            bak2 = win->x + win->with -1;
 469   2           
 470   2            while(1)                                          
 471   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 472   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 473   3               
 474   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 475   3               bak += 6;
 476   3            }
 477   2         }
 478   1      
 479   1         /* –¥◊¥Ã¨¿∏ */
 480   1         if( win->state != 0 )
 481   1         {  if( win->hight < 25) return(0);                                                           // ≈–∂œ «∑Òø…“‘ª≠◊¥Ã¨¿∏
 482   2            /* ª≠◊¥Ã¨¿∏ */
 483   2            OLED_Draw_HLine(win->x, win->y + win->hight - 10, win->x + win->with - 1, 1);
 484   2            
 485   2            str = win->state;
 486   2            bak = win->x + 3;
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 9   

 487   2            bak1 = win->y + win->hight - 9;
 488   2            bak2 = win->x + win->with -1;
 489   2            
 490   2            while(1)                                          
 491   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 492   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 493   3               
 494   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 495   3               bak += 6;
 496   3            }      
 497   2         }
 498   1         
 499   1         return(1);
 500   1      
 501   1      }
 502          /*******************************************************************************************
 503          ∫Ø ˝√˚: void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)
 504          Àµ√˜: ÃÓ≥‰÷∏∂®«¯”ÚRAM
 505          ********************************************************************************************/
 506          void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  
 507          {  
 508   1              u8 x,y;  
 509   1              for(x=x1;x<=x2;x++)
 510   1              {
 511   2                      for(y=y1;y<=y2;y++)OLED_DrawPoint(x,y,dot);
 512   2              }                                                                                                           
 513   1              OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 514   1      }
 515          
 516          
 517          /*******************************************************************************************
 518          ∫Ø ˝√˚: void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 519          Àµ√˜: œ‘ æ◊÷∑˚
 520          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ◊÷∑˚,∞¸¿®≤ø∑÷◊÷∑˚
 521          //x:0~127
 522          //y:0~63
 523          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 524          //size:—°‘Ò◊÷ÃÂ 16/12/7 
 525          ********************************************************************************************/
 526          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 527          {                           
 528   1              u8 temp,t,t1;
 529   1              u8 y0=y;
 530   1              chr=chr-' ';//µ√µΩ∆´“∆∫Ûµƒ÷µ                               
 531   1          for(t=0;t<size;t++)
 532   1          {   
 533   2                  if(size==7)temp=ByteMirro(F7x5[chr][t]); //µ˜”√0806◊÷ÃÂ  “ÚŒ™◊÷ø‚ «∑¥µƒ£¨À˘“‘æµœÒ¥¶¿Ì¡À£°
 534   2                      else if(size==12)temp=asc2_1206[chr][t];  //µ˜”√1206◊÷ÃÂ
 535   2                      else temp=asc2_1608[chr][t];             //µ˜”√1608◊÷ÃÂ                                   
 536   2              for(t1=0;t1<8;t1++)
 537   2                      {
 538   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 539   3                              else OLED_DrawPoint(x,y,!mode);
 540   3                              temp<<=1;
 541   3                              y++;
 542   3                              if((y-y0)==size)
 543   3                              {
 544   4                                      y=y0;
 545   4                                      x++;
 546   4                                      break;
 547   4                              }
 548   3                      }        
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 10  

 549   2          }          
 550   1      }
 551          //m^n∫Ø ˝
 552          u32 mypow(u8 m,u8 n)
 553          {
 554   1              u32 result=1;    
 555   1              while(n--)result*=m;    
 556   1              return result;
 557   1      }                                 
 558          
 559          /*******************************************************************************************
 560          ∫Ø ˝√˚: void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 561          Àµ√˜: œ‘ æ ˝◊÷
 562          //x,y :∆µ„◊¯±Í  
 563          //len : ˝◊÷µƒŒª ˝
 564          //size:◊÷ÃÂ¥Û–°
 565          //mode:ƒ£ Ω     0,ÃÓ≥‰ƒ£ Ω;1,µ˛º”ƒ£ Ω
 566          //num: ˝÷µ(0~4294967295);
 567          ********************************************************************************************/                     
 568          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 569          {               
 570   1              u8 t,temp;
 571   1              u8 enshow=0;                                               
 572   1              for(t=0;t<len;t++)
 573   1              {
 574   2                      temp=(num/mypow(10,len-t-1))%10;
 575   2                      if(enshow==0&&t<(len-1))
 576   2                      {
 577   3                              if(temp==0)
 578   3                              {
 579   4                                      OLED_ShowChar(x+(size/2)*t,y,' ',size,1);
 580   4                                      continue;
 581   4                              }else enshow=1; 
 582   3                               
 583   3                      }
 584   2                      OLED_ShowChar(x+(size/2)*t,y,temp+'0',size,1); 
 585   2              }
 586   1      } 
 587          /*******************************************************************************************
 588          ∫Ø ˝√˚: void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)
 589          Àµ√˜: œ‘ æ◊÷∑˚¥Æ
 590          //œ‘ æ◊÷∑˚¥Æ
 591          //x,y:∆µ„◊¯±Í  
 592          //*p:◊÷∑˚¥Æ∆ ºµÿ÷∑
 593          ********************************************************************************************/
 594          void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size, u8 mode)
 595          {
 596   1                 
 597   1          while(*p!='\0')
 598   1          { 
 599   2                  if(size == 16)
 600   2                      {      
 601   3                      if(x>122){x=0;y+=16;}   //ªª––
 602   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 603   3                      OLED_ShowChar(x,y,*p,16,mode);   
 604   3                      x+=8;
 605   3                      }
 606   2                      else if(size == 12)
 607   2                      {
 608   3                      if(x>122){x=0;y+=16;}   //ªª––
 609   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 610   3                      OLED_ShowChar(x,y,*p,12,mode);   
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 11  

 611   3                      x+=6;           
 612   3                      }
 613   2                      else
 614   2                      {
 615   3                      if(x>122){x=0;y+=16;}   //ªª––
 616   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 617   3                      OLED_ShowChar(x,y,*p,7,mode);    
 618   3                      x+=6;           
 619   3                      }
 620   2              p++;
 621   2          }  
 622   1      }
 623          
 624          /*******************************************************************************************
 625          ∫Ø ˝√˚: void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 626          Àµ√˜: œ‘ æ∫∫◊÷
 627          //œ‘ æ∫∫◊÷
 628          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ∫∫◊÷
 629          //x:0~127
 630          //y:0~63
 631          //fno:∫∫◊÷±‡∫≈
 632          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 633          //16*16¥Û–°µƒ◊÷∑˚
 634          ********************************************************************************************/
 635          void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 636          {                           
 637   1              u8 temp,t,t1;
 638   1              u8 y0=y;                                   
 639   1          for(t=0;t<32;t++)
 640   1          {   
 641   2                      if(t<16)temp=Hzk[fno*2][t];                               
 642   2              else temp=Hzk[fno*2+1][t-16];   
 643   2                      for(t1=0;t1<8;t1++)
 644   2                      {
 645   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 646   3                              else OLED_DrawPoint(x,y,!mode);
 647   3                              temp<<=1;
 648   3                              y++;
 649   3                              if((y-y0)==16)
 650   3                              {
 651   4                                      y=y0;
 652   4                                      x++;
 653   4                                      break;
 654   4                              }
 655   3                      }        
 656   2          }          
 657   1      }
 658          /*******************************************************************************************
 659          ∫Ø ˝√˚: void OLED_DrawBMP(u8 x,u8 y)
 660          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 661          ********************************************************************************************/
 662          void OLED_DrawBMP(u8 x,u8 y,u8 mode)
 663          {                           
 664   1              u16 temp,t,t1;
 665   1              u16 y0=y;                                                                          
 666   1          for(t=0;t<512;t++)
 667   1          {  
 668   2                  temp = logo[t];                               
 669   2              for(t1=0;t1<8;t1++)
 670   2                      {
 671   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 672   3                              else OLED_DrawPoint(x,y,!mode);            
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 12  

 673   3                              temp<<=1;
 674   3                              y++;
 675   3                              if((y-y0)==32)
 676   3                              {
 677   4                                      y=y0;
 678   4                                      x++;
 679   4                                      break;
 680   4                              }
 681   3                      }        
 682   2          }          
 683   1      }
 684          
 685          /*******************************************************************************************
 686          void OLED_DrawICON(u8 x,u8 y,u16 size ,u8 mode)
 687          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 688          ********************************************************************************************/
 689          void OLED_DrawICON(u8 x,u8 y,u8 mode,void *icon)
 690          {                           
 691   1              u16 temp,t,t1;
 692   1              u16 y0=y;                                                                          
 693   1          for(t=0;t<128;t++)
 694   1          {  
 695   2                  temp = *(u8*)icon ; 
 696   2                      ((u8*)icon)++;                            
 697   2              for(t1=0;t1<8;t1++)
 698   2                      {
 699   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 700   3                              else OLED_DrawPoint(x,y,!mode);            
 701   3                              temp<<=1;
 702   3                              y++;
 703   3                              if((y-y0)==32)
 704   3                              {
 705   4                                      y=y0;
 706   4                                      x++;
 707   4                                      break;
 708   4                              }
 709   3                      }        
 710   2          }          
 711   1      }
 712          
 713          void Disp_Menu_Main(u8 num)
 714          {
 715   1          OLED_ShowChar(0,11,'<',12,1);
 716   1          OLED_ShowChar(120,11,'>',12,1);
 717   1              if(num == 0)
 718   1              {
 719   2                  OLED_DrawICON(10,0,0,set_ico);
 720   2                  OLED_DrawICON(48,0,1,cut_ico);
 721   2                  OLED_DrawICON(86,0,1,rst_ico);
 722   2              } 
 723   1              else if(num == 1)
 724   1              {
 725   2                  OLED_DrawICON(10,0,1,set_ico);
 726   2                  OLED_DrawICON(48,0,0,cut_ico);
 727   2                  OLED_DrawICON(86,0,1,rst_ico);
 728   2              }
 729   1              else
 730   1              {
 731   2                  OLED_DrawICON(10,0,1,set_ico);
 732   2                  OLED_DrawICON(48,0,1,cut_ico);
 733   2                  OLED_DrawICON(86,0,0,rst_ico);
 734   2              }
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 13  

 735   1      //      OLED_Refresh_Gram();
 736   1      }
 737          void Disp_Menu_1(u8 num)
 738          {
 739   1      //    OLED_ShowChar(0,11,'<',12,1);
 740   1      //    OLED_ShowChar(120,11,'>',12,1);
 741   1              if(num == 0)
 742   1              {
 743   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,0);
 744   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 745   2                  OLED_ShowString(78,0,"3.COB",12,1);
 746   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 747   2              } 
 748   1              else if(num == 1)
 749   1              {
 750   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 751   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,0);
 752   2                  OLED_ShowString(78,0,"3.COB",12,1);
 753   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 754   2              }
 755   1              else if(num == 2)
 756   1              {
 757   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 758   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 759   2                  OLED_ShowString(78,0,"3.COB",12,0);
 760   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 761   2              }
 762   1              else
 763   1              {
 764   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 765   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 766   2                  OLED_ShowString(78,0,"3.COB",12,1);
 767   2                  OLED_ShowString(78,15,"4.RETURN",12,0);
 768   2              }
 769   1      }
 770          /*******************************************************************************************
 771          ∫Ø ˝√˚: void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 772          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 773          ********************************************************************************************/
 774          void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 775          {                           
 776   1        OLED_ShowString(x+4,y,"SADD:",7,1);    //µ⁄“ª––◊÷∑˚
 777   1        OLED_ShowString(x+4,y+16,"RADD:",7,1);   //µ⁄»˝––◊÷∑˚ 
 778   1        OLED_DrawLine(38,0,38,31,1); 
 779   1        OLED_DrawLine(38,0,40,0,1); 
 780   1        OLED_DrawLine(38,15,40,15,1);
 781   1        OLED_DrawLine(38,31,40,31,1);                  //ª≠∑÷∏Óœﬂ
 782   1        x = x+36;
 783   1        OLED_ShowChar(x+6,y,((Add1>>23)&0x01)+'0',7,1);
 784   1        OLED_ShowChar(x+6*2,y,((Add1>>22)&0x01)+'0',7,1);
 785   1        OLED_ShowChar(x+6*3,y,((Add1>>21)&0x01)+'0',7,1);
 786   1        OLED_ShowChar(x+6*4,y,((Add1>>20)&0x01)+'0',7,1);
 787   1        OLED_ShowChar(x+6*5,y,'-',7,1);
 788   1        OLED_ShowChar(x+6*6,y,((Add1>>19)&0x01)+'0',7,1);
 789   1        OLED_ShowChar(x+6*7,y,((Add1>>18)&0x01)+'0',7,1);
 790   1        OLED_ShowChar(x+6*8,y,((Add1>>17)&0x01)+'0',7,1);
 791   1        OLED_ShowChar(x+6*9,y,((Add1>>16)&0x01)+'0',7,1);
 792   1        OLED_ShowChar(x+6*10,y,'-',7,1);
 793   1        OLED_ShowChar(x+6*11,y,((Add1>>15)&0x01)+'0',7,1);
 794   1        OLED_ShowChar(x+6*12,y,((Add1>>14)&0x01)+'0',7,1);
 795   1        OLED_ShowChar(x+6*13,y,((Add1>>13)&0x01)+'0',7,1);
 796   1        OLED_ShowChar(x+6*14,y,((Add1>>12)&0x01)+'0',7,1);
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 14  

 797   1       // OLED_ShowChar(x+6*15,y,'-',7,1);
 798   1        OLED_ShowChar(x+6,y+8,((Add1>>11)&0x01)+'0',7,1);
 799   1        OLED_ShowChar(x+6*2,y+8,((Add1>>10)&0x01)+'0',7,1);
 800   1        OLED_ShowChar(x+6*3,y+8,((Add1>>9)&0x01)+'0',7,1);
 801   1        OLED_ShowChar(x+6*4,y+8,((Add1>>8)&0x01)+'0',7,1);
 802   1        OLED_ShowChar(x+6*5,y+8,'-',7,1);
 803   1        OLED_ShowChar(x+6*6,y+8,((Add1>>7)&0x01)+'0',7,1);
 804   1        OLED_ShowChar(x+6*7,y+8,((Add1>>6)&0x01)+'0',7,1);
 805   1        OLED_ShowChar(x+6*8,y+8,((Add1>>5)&0x01)+'0',7,1);
 806   1        OLED_ShowChar(x+6*9,y+8,((Add1>>4)&0x01)+'0',7,1);
 807   1        OLED_ShowChar(x+6*10,y+8,'-',7,1);
 808   1        OLED_ShowChar(x+6*11,y+8,((Add1>>3)&0x01)+'0',7,1);
 809   1        OLED_ShowChar(x+6*12,y+8,((Add1>>2)&0x01)+'0',7,1);
 810   1        OLED_ShowChar(x+6*13,y+8,((Add1>>1)&0x01)+'0',7,1);
 811   1        OLED_ShowChar(x+6*14,y+8,((Add1)&0x01)+'0',7,1);
 812   1      
 813   1        OLED_ShowChar(x+6,y+16,((Add2>>23)&0x01)+'0',7,1);
 814   1        OLED_ShowChar(x+6*2,y+16,((Add2>>22)&0x01)+'0',7,1);
 815   1        OLED_ShowChar(x+6*3,y+16,((Add2>>21)&0x01)+'0',7,1);
 816   1        OLED_ShowChar(x+6*4,y+16,((Add2>>20)&0x01)+'0',7,1);
 817   1        OLED_ShowChar(x+6*5,y+16,'-',7,1);
 818   1        OLED_ShowChar(x+6*6,y+16,((Add2>>19)&0x01)+'0',7,1);
 819   1        OLED_ShowChar(x+6*7,y+16,((Add2>>18)&0x01)+'0',7,1);
 820   1        OLED_ShowChar(x+6*8,y+16,((Add2>>17)&0x01)+'0',7,1);
 821   1        OLED_ShowChar(x+6*9,y+16,((Add2>>16)&0x01)+'0',7,1);
 822   1        OLED_ShowChar(x+6*10,y+16,'-',7,1);
 823   1        OLED_ShowChar(x+6*11,y+16,((Add2>>15)&0x01)+'0',7,1);
 824   1        OLED_ShowChar(x+6*12,y+16,((Add2>>14)&0x01)+'0',7,1);
 825   1        OLED_ShowChar(x+6*13,y+16,((Add2>>13)&0x01)+'0',7,1);
 826   1        OLED_ShowChar(x+6*14,y+16,((Add2>>12)&0x01)+'0',7,1);
 827   1      //  OLED_ShowChar(x+6*15,y+16,'-',7,1);
 828   1      
 829   1        OLED_ShowChar(x+6,y+24,((Add2>>11)&0x01)+'0',7,1);
 830   1        OLED_ShowChar(x+6*2,y+24,((Add2>>10)&0x01)+'0',7,1);
 831   1        OLED_ShowChar(x+6*3,y+24,((Add2>>9)&0x01)+'0',7,1);
 832   1        OLED_ShowChar(x+6*4,y+24,((Add2>>8)&0x01)+'0',7,1);
 833   1        OLED_ShowChar(x+6*5,y+24,'-',7,1);
 834   1        OLED_ShowChar(x+6*6,y+24,((Add2>>7)&0x01)+'0',7,1);
 835   1        OLED_ShowChar(x+6*7,y+24,((Add2>>6)&0x01)+'0',7,1);
 836   1        OLED_ShowChar(x+6*8,y+24,((Add2>>5)&0x01)+'0',7,1);
 837   1        OLED_ShowChar(x+6*9,y+24,((Add2>>4)&0x01)+'0',7,1);
 838   1        OLED_ShowChar(x+6*10,y+24,'-',7,1);
 839   1        OLED_ShowChar(x+6*11,y+24,((Add2>>3)&0x01)+'0',7,1);
 840   1        OLED_ShowChar(x+6*12,y+24,((Add2>>2)&0x01)+'0',7,1);
 841   1        OLED_ShowChar(x+6*13,y+24,((Add2>>1)&0x01)+'0',7,1);
 842   1        OLED_ShowChar(x+6*14,y+24,((Add2)&0x01)+'0',7,1);    
 843   1      }
 844          /*******************************************************************************************
 845          ∫Ø ˝√˚: void OLED_Init(void)
 846          Àµ√˜: OLED∆¡≥ı ºªØ
 847          ********************************************************************************************/                               
 848          void OLED_Init(void)
 849          {
 850   1          OLED_RST_Set();
 851   1              delay_ms(100);
 852   1              OLED_RST_Clr();
 853   1              delay_ms(100);
 854   1              OLED_RST_Set(); 
 855   1      
 856   1              OLED_WR_Byte(0xFD,OLED_CMD);//ƒ⁄≤øµ•∆¨ª˙–¥±£ª§
 857   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œπÿ±’ƒ⁄≤ø±£ª§£¨‘ –ÌΩ” ’À˘”–÷∏¡Ó£¨»Áø™∆Ù±£ª§‘Ú÷ªΩ” ‹FD÷∏¡Ó £øƒ¨»œŒ™0£¨Œ™1
             -‘Ú±£ª§ bit 0 0 0 1 0 £ø1 0
C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 15  

 858   1                      
 859   1              OLED_WR_Byte(0xAE,OLED_CMD);//πÿ±’œ‘ æ
 860   1      
 861   1              OLED_WR_Byte(0x20,OLED_CMD);
 862   1              OLED_WR_Byte(0x02,OLED_CMD);//page mode
 863   1      
 864   1              OLED_WR_Byte(0xB4,OLED_CMD);
 865   1      
 866   1              OLED_WR_Byte(0x00,OLED_CMD);//
 867   1              OLED_WR_Byte(0x10,OLED_CMD);//
 868   1      
 869   1      //      OLED_WR_Byte(0x40,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 870   1              OLED_WR_Byte(0x60,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 871   1      
 872   1              OLED_WR_Byte(0xD5,OLED_CMD);//…Ë÷√ ±÷”∑÷∆µ“Ú◊”£¨’Òµ¥∆µ¬ 
 873   1              OLED_WR_Byte(0xf0,OLED_CMD);//[3:0],∑÷∆µ“Ú◊”;[7:4],’µ¥∆µ¬      ƒ¨»œ0111 0000   PS¥Û≤ø∑÷«˝∂Ø∂º—°‘Ò «0x80
 874   1      
 875   1              OLED_WR_Byte(0xA8,OLED_CMD);//…Ë÷√∂‡÷ÿÕ®µ¿
 876   1              OLED_WR_Byte(0x1F,OLED_CMD);//ƒ¨»œ0X3F
 877   1      
 878   1              OLED_WR_Byte(0xD3,OLED_CMD);//…Ë÷√œ‘ æ∆´“∆
 879   1              OLED_WR_Byte(0x00,OLED_CMD);//ƒ¨»œ≤ª∆´“∆[5:0]
 880   1      
 881   1      
 882   1      
 883   1              OLED_WR_Byte(0xA1,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 884   1      
 885   1      //      OLED_WR_Byte(0xA0,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 886   1      
 887   1      //      OLED_WR_Byte(0xC8,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 888   1      
 889   1          OLED_WR_Byte(0xC0,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 890   1      
 891   1              OLED_WR_Byte(0xD8,OLED_CMD);//
 892   1              OLED_WR_Byte(0x05,OLED_CMD);
 893   1      
 894   1              OLED_WR_Byte(0xDA,OLED_CMD);//…Ë÷√COM”≤º˛“˝Ω≈≈‰÷√
 895   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œ[5:4]≈‰÷√
 896   1      
 897   1      //      OLED_WR_Byte(0x00,OLED_CMD);// £ø£ø£ø£ø√ª…∂”√∞…........
 898   1      
 899   1              OLED_WR_Byte(0xD9,OLED_CMD);//…Ë÷√‘§≥‰µÁ÷‹∆⁄
 900   1              OLED_WR_Byte(0xF1,OLED_CMD);//ƒ¨»œ[3:0],PHASE 1;[7:4],PHASE 2;
 901   1      
 902   1              OLED_WR_Byte(0x81,OLED_CMD);//∂‘±»∂»…Ë÷√
 903   1              OLED_WR_Byte(0xBF,OLED_CMD);//1~255;ƒ¨»œ0X7F (¡¡∂»…Ë÷√,‘Ω¥Û‘Ω¡¡)
 904   1      
 905   1      //      OLED_WR_Byte(0xD9,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 906   1      //      OLED_WR_Byte(0x25,OLED_CMD);//
 907   1      
 908   1              OLED_WR_Byte(0xDB,OLED_CMD);//…Ë÷√VCOMH µÁ—π±∂¬ 
 909   1              OLED_WR_Byte(0x34,OLED_CMD);//[5:2] 0000,0.64*vcc;1101,0.78*vcc;1111,0.84*vcc;
 910   1      
 911   1              OLED_WR_Byte(0xA4,OLED_CMD);//»´æ÷œ‘ æø™∆Ù;bit0:1,ø™∆Ù;0,πÿ±’;(∞◊∆¡/∫⁄∆¡) A4/A5
 912   1              OLED_WR_Byte(0xA6,OLED_CMD);//…Ë÷√œ‘ æ∑Ω Ω;bit0:1,∑¥œ‡œ‘ æ;0,’˝≥£œ‘ æ     A6/A7
 913   1              OLED_WR_Byte(0xAF,OLED_CMD);//ø™∆Ùœ‘ æ                                                            AE/AF
 914   1      
 915   1              OLED_Clear();
 916   1              OLED_Set_Pos(0,0);                      
 917   1      }  


C51 COMPILER V9.00   OLED                                                                  04/22/2015 18:31:48 PAGE 16  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7900    ----
   CONSTANT SIZE    =   4851    ----
   XDATA SIZE       =   1024     140
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
