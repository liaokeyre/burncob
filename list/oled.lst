C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\output\oled.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled\oled.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\oled.lst) OBJECT(.\output\oled.obj)

line level    source

   1          /***********************************************************************************************
   2          π¶ƒ‹Àµ√˜£∫“—÷ß≥÷ª≠µ„£¨ª≠œﬂ£¨ª≠æÿ–Œ£¨ª≠‘≤£¨ª≠¥∞ø⁄£¨ª≠BMP
   3          “∆÷≤£∫liaokeyre
   4          ************************************************************************************************/
   5          //Ω”ø⁄∂®“Â≤Œ’’oled.hŒƒº˛
   6          //ÀƒœﬂSPI–Ë“™Ω”∆ﬂ∏˘œﬂ£¨∆‰÷–RESø…“‘≤ªΩ”£ªµ´ «≤ªΩ” ±∫Ú±ÿ–Î¿≠∏ﬂ
   7          // GND,VCC,CS,RES,D/C,CLK,DIN
   8          //πÿ”⁄µÁ—πŒ Ã‚£ª»Áπ˚øÕªß–Ë“™≥§ ±º‰Œ»∂®π§◊˜£ªΩ®“È»´≤ø≤…”√3.3VµÁ‘¥£ªµÁ∆Ω–≈∫≈“≤≤…”√3.3Vµƒ
   9          //»Áπ˚øÕªß–Ë“™”√5VµÁ‘¥£¨À‰»ª5Vø…“‘’˝≥£π§◊˜£¨µ´ Ω®“È«≤ª“™≥§ ±º‰π§◊˜£ª’‚—˘ø…ƒ‹ª·ºı…Ÿ∆¡µƒ Ÿ√¸£ª‘⁄VCC∂À¥Æ“ª–°µ
             -Á◊Ëø…ƒ‹ª·∫√“ª–©°£
  10          #include "oled.h"
  11          #include "oledfont.h" 
  12          #include "24c02.h"
  13          #define GUI_LCM_XMAX 128
  14          #define GUI_LCM_YMAX  32         
  15          //#include "delay.h"
  16          //OLEDµƒœ‘¥Ê
  17          //¥Ê∑≈∏Ò Ω»Áœ¬.
  18          //[0]0 1 2 3 ... 127    
  19          //[1]0 1 2 3 ... 127    
  20          //[2]0 1 2 3 ... 127    
  21          //[3]0 1 2 3 ... 127
  22          //--------------------------------------12832   
  23          //[4]0 1 2 3 ... 127    
  24          //[5]0 1 2 3 ... 127    
  25          //[6]0 1 2 3 ... 127    
  26          //[7]0 1 2 3 ... 127 
  27          u8 OLED_GRAM[128][4];//œ‘¥Ê
  28          u8 OLED_GRAM_TMP[128][4];
  29          
  30          /****************************************************************************
  31          ◊÷Ω⁄¬Î∏ﬂµÕŒªæµœÒ≤Ÿ◊˜
  32          ÷˜“™ «”–“ª∏ˆ◊÷ø‚»°¬Î∑ΩœÚ «∑¥µƒ
  33          ÷ÿ–¬◊ˆ◊÷ø‚”÷¬È∑≥°£°£°£°£
  34          ****************************************************************************/   
  35          u8 ByteMirro(u8 dat)
  36          {
  37   1       dat = (dat & 0xf0) >> 4 | (dat & 0x0f)  << 4;//“‘4ŒªŒ™µ•ŒªΩ¯––Ωªªª    abcd  1234
  38   1       dat = (dat & 0xcc) >> 2 | (dat & 0x33)  << 2;//“‘2ŒªŒ™µ•ŒªΩ¯––Ωªªª    cdab  3412
  39   1       dat = (dat & 0xaa) >> 1 | (dat & 0x55)  << 1;//“‘1ŒªŒ™µ•ŒªΩ¯––Ωªªª   dcba  4321
  40   1       return dat;
  41   1      }
  42                             
  43          void delay_ms(unsigned int ms)
  44          {                         
  45   1              unsigned int a;
  46   1              while(ms)
  47   1              {
  48   2                      a=1800;
  49   2                      while(a--);
  50   2                      ms--;
  51   2              }
  52   1      //      return;
  53   1      }
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 2   

  54          #if OLED_MODE==1
              //œÚSSD1106–¥»Î“ª∏ˆ◊÷Ω⁄°£
              //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
              //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  72          //œÚSSD1306–¥»Î“ª∏ˆ◊÷Ω⁄°£
  73          //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
  74          //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
  75          void OLED_WR_Byte(u8 dat,u8 cmd)
  76          {       
  77   1              u8 i;                     
  78   1              if(cmd)
  79   1                OLED_DC_Set();
  80   1              else 
  81   1                OLED_DC_Clr();                  
  82   1              OLED_CS_Clr();
  83   1              for(i=0;i<8;i++)
  84   1              {                         
  85   2                      OLED_SCLK_Clr();
  86   2                      if(dat&0x80)
  87   2                      {
  88   3                        OLED_SDIN_Set();
  89   3                      }
  90   2              else
  91   2                  OLED_SDIN_Clr();
  92   2                  OLED_SCLK_Set();
  93   2                      dat<<=1;   
  94   2              }                                                 
  95   1              OLED_CS_Set();
  96   1              OLED_DC_Set();            
  97   1      } 
  98          #endif
  99          
 100          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 101          { 
 102   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
 103   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 104   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 105   1      } 
 106          /*        
 107          //ø™∆ÙOLEDœ‘ æ    
 108          void OLED_Display_On(void)
 109          {
 110                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 111                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 112                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 113          }
 114          //πÿ±’OLEDœ‘ æ     
 115          void OLED_Display_Off(void)
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 3   

 116          {
 117                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 118                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 119                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 120          }
 121          */
 122          void OLED_Refresh_Gram(void)
 123          {
 124   1              u8 i,n;             
 125   1              for(i=0;i<4;i++)  
 126   1              {  
 127   2                      OLED_WR_Byte (0xb4+i,OLED_CMD);    //…Ë÷√“≥µÿ÷∑£®0~7£©b4-->b7
 128   2                      OLED_WR_Byte (0x04,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–µÕµÿ÷∑
 129   2                      OLED_WR_Byte (0x10,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–∏ﬂµÿ÷∑   
 130   2                      for(n=0;n<128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); 
 131   2              }   
 132   1      }
 133                                                   
 134          //«Â∆¡∫Ø ˝,«ÂÕÍ∆¡,’˚∏ˆ∆¡ƒª «∫⁄…´µƒ!∫Õ√ªµ„¡¡“ª—˘!!!      
 135          void OLED_Clear(void)  
 136          {  
 137   1              u8 i,n;  
 138   1              for(i=0;i<4;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
 139   1      //      OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 140   1      }  
 141          //ª≠µ„ 
 142          //x:0~127
 143          //y:0~63
 144          //t:1 ÃÓ≥‰ 0,«Âø’                                  
 145          void OLED_DrawPoint(u8 x,u8 y,u8 t)
 146          {
 147   1              u8 pos,bx,temp=0;
 148   1              if(x>127||y>63)return;//≥¨≥ˆ∑∂Œß¡À.
 149   1              pos=7-y/8;            //µ√µΩÀ˘‘⁄“≥
 150   1              bx=y%8;                           //µ√µΩµ±«∞“≥æ´»∑Œª÷√
 151   1              temp=1<<(7-bx);
 152   1              if(t)OLED_GRAM[x][pos]|=temp;
 153   1              else OLED_GRAM[x][pos]&=~temp;      
 154   1      }
 155          
 156          //////////////////////////////////
 157          //“‘x1,y1Œ™∆µ„£¨x2,y2Œ™÷’µ„ª≠œﬂ//
 158          /////////(t=1ª≠µ„£¨t=0«Âµ„)///////
 159          //////////////////////////////////
 160          //ª≠œﬂ∫Ø ˝
 161          void OLED_DrawLine(u8 x1,u8 y1,u8 x2,u8 y2,u8 t) //y=kx+b
 162          {
 163   1              s16 dy;
 164   1              s16 dx;
 165   1              s8 dirx,diry,move;
 166   1              dy=y2-y1; 
 167   1              dx=x2-x1; 
 168   1              if(dy<0)  
 169   1              {
 170   2                      dy=-dy;
 171   2                      diry=-1;
 172   2              }
 173   1              else 
 174   1              {
 175   2                      diry=1;
 176   2              }
 177   1              if(dx<0)
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 4   

 178   1              {
 179   2                      dx=-dx;
 180   2                      dirx=-1;
 181   2              }
 182   1              else
 183   1              {
 184   2                      dirx=1;
 185   2              }
 186   1      //      dy<<=1; 
 187   1      //      dx<<=1;
 188   1              OLED_DrawPoint(x1,y1,t);
 189   1              if(dx>dy)       //////////////////
 190   1              {
 191   2                      move=dy-(dx>>1); 
 192   2                      while(x1!=x2)
 193   2                      {
 194   3                              if(move>=0)
 195   3                              {
 196   4                                      y1+=diry; 
 197   4                                      move-=dx;
 198   4                              }
 199   3                              x1+=dirx;
 200   3                              move+=dy;  
 201   3                              OLED_DrawPoint(x1,y1,t);
 202   3                      }
 203   2              }
 204   1              else
 205   1              {
 206   2                      move=dx-(dy>>1);
 207   2                      while(y1!=y2)
 208   2                      {
 209   3                              if(move>=0)
 210   3                              {
 211   4                                      x1+=dirx;
 212   4                                      move-=dy;
 213   4                              }
 214   3                              y1+=diry;
 215   3                              move+=dx;
 216   3                              OLED_DrawPoint(x1,y1,t);
 217   3                      }
 218   2              }
 219   1      }
 220          
 221          /****************************************************************************
 222          * π¶ƒ‹£∫ª≠ÀÆ∆Ωœﬂ°£
 223          * »Îø⁄≤Œ ˝£∫x0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 224          *           y0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄––µƒŒª÷√
 225          *           x1      ÀÆ∆Ωœﬂ÷’µ„À˘‘⁄¡–µƒŒª÷√
 226          *           t       œ‘ æ—’…´(∂‘”⁄∫⁄∞◊…´LCM£¨Œ™0 ±√£¨Œ™1 ±œ‘ æ)
 227          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 228          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 229          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 230          ****************************************************************************/
 231          void  OLED_Draw_HLine(u8 x0, u8 y0, u8 x1, u8 t)
 232          {
 233   1          u8  temp;
 234   1          if(x0>x1)               // ∂‘x0°¢x1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 235   1          {
 236   2              temp = x1;
 237   2              x1 = x0;
 238   2              x0 = temp;
 239   2          }
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 5   

 240   1          do
 241   1          {
 242   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 243   2              x0++;
 244   2          }
 245   1          while(x1>=x0);
 246   1      }
 247          /****************************************************************************
 248          * π¶ƒ‹£∫ª≠¥π÷±œﬂ°£
 249          * »Îø⁄≤Œ ˝£∫x0      ¥π÷±œﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 250          *           y0      ¥π÷±œﬂ∆µ„À˘‘⁄––µƒŒª÷√
 251          *           y1      ¥π÷±œﬂ÷’µ„À˘‘⁄––µƒŒª÷√
 252          *           t       œ‘ æ—’…´
 253          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 254          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 255          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 256          ****************************************************************************/
 257          void  OLED_Draw_RLine(u8 x0, u8 y0, u8 y1, u8 t)
 258          {
 259   1          u8  temp;
 260   1          if(y0>y1)       // ∂‘y0°¢y1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 261   1          {
 262   2              temp = y1;
 263   2              y1 = y0;
 264   2              y0 = temp;
 265   2          }
 266   1          do
 267   1          {
 268   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 269   2              y0++;
 270   2          }
 271   1          while(y1>=y0);
 272   1      }
 273          /****************************************************************************
 274          * π¶ƒ‹£∫ª≠æÿ–Œ°£
 275          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 276          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 277          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 278          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 279          *           t       1ª≠µ„£¨0«Âµ„
 280          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 281          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 282          ****************************************************************************/
 283          void  OLED_DrawRectangle(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 284          {  OLED_Draw_HLine(x1, y1, x2, t);
 285   1         OLED_Draw_HLine(x1, y2, x2, t);
 286   1         OLED_Draw_RLine(x1, y1, y2, t);
 287   1         OLED_Draw_RLine(x2, y1, y2, t);
 288   1      }
 289          /****************************************************************************
 290          * π¶ƒ‹£∫ÃÓ≥‰æÿ–Œ°£ª≠“ª∏ˆÃÓ≥‰µƒæÿ–Œ£¨ÃÓ≥‰…´”Î±ﬂøÚ…´“ª—˘°£
 291          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 292          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 293          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 294          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 295          *           t       ÃÓ≥‰—’…´
 296          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 297          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 298          ****************************************************************************/
 299          void  OLED_Draw_RectangleFill(u8 x0, u8 y0, u8 x1, u8 y1, u8 t)
 300          {  u8  i;
 301   1      
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 6   

 302   1         /* œ»’“≥ˆæÿ–Œ◊Û…œΩ«”Î”“œ¬Ω«µƒ¡Ω∏ˆµ„£¨±£¥Ê‘⁄(x0,y0)£¨(x1,y1) */
 303   1         if(x0>x1)                                            // »Ùx0>x1£¨‘Úx0”Îx1Ωªªª
 304   1         {  i = x0;
 305   2            x0 = x1;
 306   2            x1 = i;
 307   2         }
 308   1         if(y0>y1)                                            // »Ùy0>y1£¨‘Úy0”Îy1Ωªªª
 309   1         {  i = y0;
 310   2            y0 = y1;
 311   2            y1 = i;
 312   2         }
 313   1         
 314   1         /* ≈–∂œ «∑Ò÷ª «÷±œﬂ */
 315   1         if(y0==y1) 
 316   1         {  OLED_Draw_HLine(x0, y0, x1, t);
 317   2            return;
 318   2         }
 319   1         if(x0==x1) 
 320   1         {  (x0, y0, y1, t);
 321   2            return;
 322   2         }
 323   1      
 324   1         while(y0<=y1)                                                
 325   1         {  OLED_Draw_HLine(x0, y0, x1, t);   // µ±«∞ª≠ÀÆ∆Ωœﬂ
 326   2            y0++;                                                     // œ¬“ª––
 327   2         }
 328   1      }
 329          /****************************************************************************
 330          * π¶ƒ‹£∫ª≠’˝∑Ω–Œ°£
 331          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 332          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 333          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 334          *           t       œ‘ æ—’…´
 335          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 336          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 337          ****************************************************************************/
 338          void  OLED_Draw_Square(u8 x0, u8 y0, u8  with, u8 t)
 339          { 
 340   1          if(with==0) return;
 341   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 342   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 343   1              OLED_DrawRectangle(x0, y0, x0+with, y0+with, t);
 344   1      }
 345          /****************************************************************************
 346          * π¶ƒ‹£∫ª≠’˝∑Ω–ŒÃÓ≥‰°£
 347          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 348          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 349          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 350          *           t       œ‘ æ—’…´
 351          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 352          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 353          ****************************************************************************/
 354          void  OLED_Draw_SquareFill(u8 x0, u8 y0, u8  with, u8 t)
 355          { 
 356   1          if(with==0) return;
 357   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 358   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 359   1              OLED_Draw_RectangleFill(x0, y0, x0+with, y0+with, t);
 360   1      }
 361          /****************************************************************************
 362          * π¶ƒ‹£∫∂‡∏ˆµ„÷Æº‰µƒ¡¨–¯¡¨œﬂ°£¥”µ⁄“ªµ„¡¨µΩµ⁄∂˛µ„£¨‘Ÿ¡¨µΩµ⁄»˝µ„...
 363          * »Îø⁄≤Œ ˝£∫points  ∂‡∏ˆµ„◊¯±Í ˝æ›µƒ÷∏’Î£¨ ˝æ›≈≈¡–Œ™(x0,y0)°¢(x1,y1)°¢(x2,y2)...
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 7   

 364          *           no      µ„ ˝ƒø£¨÷¡…Ÿ“™¥Û”⁄1
 365          *           t   œ‘ æ—’…´
 366          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 367          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 368          ****************************************************************************/
 369          void  OLED_Draw_LineS(u8 const *points, u8 no, u8 t)
 370          {  u8  x0, y0;
 371   1         u8  x1, y1;
 372   1         u8  i;
 373   1      
 374   1         /* »Îø⁄≤Œ ˝π˝¬À */
 375   1         if(0==no) return;
 376   1         if(1==no)                                            // µ•µ„
 377   1         {  x0 = *points++;
 378   2            y0 = *points;
 379   2            OLED_DrawPoint(x0, y0, t);
 380   2         }
 381   1         
 382   1         /* ª≠∂‡ÃıœﬂÃı */
 383   1         x0 = *points++;                                      // »°≥ˆµ⁄“ªµ„◊¯±Í÷µ£¨◊˜Œ™‘≠∆µ„◊¯±Í÷µ
 384   1         y0 = *points++;
 385   1         for(i=1; i<no; i++)
 386   1         {  x1 = *points++;                           // »°≥ˆœ¬“ªµ„◊¯±Í÷µ
 387   2            y1 = *points++;
 388   2            OLED_DrawLine(x0, y0, x1, y1, t);
 389   2            x0 = x1;                                          // ∏¸–¬‘≠∆µ„◊¯±Í
 390   2            y0 = y1;
 391   2         }
 392   1      }
 393          //////////////////////////////
 394          //“‘x,yŒ™‘≤–ƒ£¨“‘rŒ™∞Îæ∂ª≠‘≤//
 395          /////(t=1ª≠µ„£¨t=0«Âµ„)///////
 396          //////////////////////////////
 397          //ª≠‘≤∫Ø ˝
 398          void OLED_DrawCircle(u8 x,u8 y,u16 r,u8 t)
 399          {
 400   1              u8 xc=0;
 401   1              u8 yc;
 402   1              s8 p;
 403   1              yc=r;
 404   1              p=3-(r<<1);
 405   1              while(xc<=yc)  
 406   1              {                 
 407   2                      OLED_DrawPoint(x+xc,y+yc,t);
 408   2                      OLED_DrawPoint(x+xc,y-yc,t);
 409   2                      OLED_DrawPoint(x-xc,y+yc,t);
 410   2                      OLED_DrawPoint(x-xc,y-yc,t);
 411   2                      OLED_DrawPoint(x+yc,y+xc,t);
 412   2                      OLED_DrawPoint(x+yc,y-xc,t);
 413   2                      OLED_DrawPoint(x-yc,y+xc,t);
 414   2                      OLED_DrawPoint(x-yc,y-xc,t);
 415   2                      if(p<0)
 416   2                      p+=((xc++)<<2)+6;
 417   2                      else
 418   2                      p+=(((xc++)-(yc--))<<2)+10;
 419   2              }
 420   1      }
 421          
 422          /****************************************************************************
 423          * π¶ƒ‹£∫œ‘ æ¥∞ø⁄°£∏˘æ›Ã·π©µƒ¥∞ø⁄≤Œ ˝Ω¯––ª≠¥∞ø⁄°£
 424          * »Îø⁄≤Œ ˝£∫win         ¥∞ø⁄æ‰±˙
 425          * ≥ˆø⁄≤Œ ˝£∫∑µªÿ0±Ì æ≤Ÿ◊˜ ß∞‹£¨∑µªÿ1±Ì æ≤Ÿ◊˜≥…π¶
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 8   

 426          ****************************************************************************/
 427          u8  OLED_Draw_WindowsDraw(WINDOWS *win)
 428          {  u8  *str;
 429   1         int8  bak, bak1, bak2;
 430   1         
 431   1         /* ≤Œ ˝π˝¬À£¨»Ù¥∞ø⁄∆≥ˆ∑∂Œß£¨‘Ú∑µªÿ0 */
 432   1         if( ( (win->with)<20 ) || ( (win->hight)<20 ) ) return(0);           // øÌ∂»°¢∏ﬂ∂»ºÏ≤È£¨œﬁ÷∆◊Ó–°¥∞ø⁄
 433   1         if( (win->x + win->with ) > GUI_LCM_XMAX ) return(0);                        // ¥∞ø⁄øÌ∂» «∑Ò“Á≥ˆ
 434   1         if( (win->y + win->hight ) > GUI_LCM_YMAX ) return(0);                       // ¥∞ø⁄∏ﬂ∂» «∑Ò“Á≥ˆ
 435   1          
 436   1         /* ø™ ºª≠¥∞ø⁄ */
 437   1         OLED_Draw_RectangleFill(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 0); //«Â≥ˆ“ª∆¨
             -«¯”Úª≠µØ¥∞
 438   1         OLED_DrawRectangle(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 1);      // ª≠¥∞ø⁄
 439   1         OLED_Draw_HLine(win->x, win->y + 9, win->x + win->with - 1, 1);                                                      // ª≠±ÍÃ‚ƒø¿∏
 440   1      //   OLED_Draw_RLine(win->x + 9, win->y, win->y + 9, 1);                                                                                // ª≠πÿ±’¥∞∫≈∞¥≈•
 441   1      //   OLED_DrawLine(win->x, win->y, win->x + 9, win->y + 9, 1);
 442   1      //   OLED_DrawLine(win->x + 9, win->y, win->x, win->y + 9, 1);
 443   1         OLED_Draw_RLine(win->x + win->with - 10, win->y, win->y + 9, 1);                                                                             // ª≠πÿ±’¥∞∫≈∞¥≈•
 444   1         OLED_DrawLine(win->x + win->with - 10, win->y, win->x + win->with - 1 , win->y + 9, 1);
 445   1         OLED_DrawLine(win->x + win->with - 1, win->y, win->x + win->with - 10, win->y + 9, 1);
 446   1         
 447   1      
 448   1         /* –¥±ÍÃ‚ */
 449   1         if( win->title != 0 ) 
 450   1         {  str = win->title;
 451   2            bak = win->x + 2;
 452   2            bak1 = win->y + 1;                  //titleŒª÷√
 453   2            bak2 = win->x + win->with -1;
 454   2           
 455   2            while(1)                                          
 456   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 457   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 458   3               
 459   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 460   3               bak += 6;
 461   3            }
 462   2         }
 463   1      
 464   1         /* –¥ƒ⁄»› */
 465   1         if( win->text != 0 ) 
 466   1         {  str = win->text;
 467   2            bak = win->x + 2;
 468   2            bak1 = win->y + 12;                 //textŒª÷√
 469   2            bak2 = win->x + win->with -1;
 470   2           
 471   2            while(1)                                          
 472   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 473   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 474   3               
 475   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 476   3               bak += 6;
 477   3            }
 478   2         }
 479   1      
 480   1         /* –¥◊¥Ã¨¿∏ */
 481   1         if( win->state != 0 )
 482   1         {  if( win->hight < 25) return(0);                                                           // ≈–∂œ «∑Òø…“‘ª≠◊¥Ã¨¿∏
 483   2            /* ª≠◊¥Ã¨¿∏ */
 484   2            OLED_Draw_HLine(win->x, win->y + win->hight - 10, win->x + win->with - 1, 1);
 485   2            
 486   2            str = win->state;
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 9   

 487   2            bak = win->x + 3;
 488   2            bak1 = win->y + win->hight - 9;
 489   2            bak2 = win->x + win->with -1;
 490   2            
 491   2            while(1)                                          
 492   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 493   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 494   3               
 495   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 496   3               bak += 6;
 497   3            }      
 498   2         }
 499   1         
 500   1         return(1);
 501   1      
 502   1      }
 503          /*******************************************************************************************
 504          ∫Ø ˝√˚: void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)
 505          Àµ√˜: ÃÓ≥‰÷∏∂®«¯”ÚRAM
 506          ********************************************************************************************/
 507          void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  
 508          {  
 509   1              u8 x,y;  
 510   1              for(x=x1;x<=x2;x++)
 511   1              {
 512   2                      for(y=y1;y<=y2;y++)OLED_DrawPoint(x,y,dot);
 513   2              }                                                                                                           
 514   1              OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 515   1      }
 516          
 517          
 518          /*******************************************************************************************
 519          ∫Ø ˝√˚: void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 520          Àµ√˜: œ‘ æ◊÷∑˚
 521          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ◊÷∑˚,∞¸¿®≤ø∑÷◊÷∑˚
 522          //x:0~127
 523          //y:0~63
 524          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 525          //size:—°‘Ò◊÷ÃÂ 16/12/7 
 526          ********************************************************************************************/
 527          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 528          {                           
 529   1              u8 temp,t,t1;
 530   1              u8 y0=y;
 531   1              chr=chr-' ';//µ√µΩ∆´“∆∫Ûµƒ÷µ                               
 532   1          for(t=0;t<size;t++)
 533   1          {   
 534   2                  if(size==7)temp=ByteMirro(F7x5[chr][t]); //µ˜”√0806◊÷ÃÂ  “ÚŒ™◊÷ø‚ «∑¥µƒ£¨À˘“‘æµœÒ¥¶¿Ì¡À£°
 535   2                      else if(size==12)temp=asc2_1206[chr][t];  //µ˜”√1206◊÷ÃÂ
 536   2                      else temp=asc2_1608[chr][t];             //µ˜”√1608◊÷ÃÂ                                   
 537   2              for(t1=0;t1<8;t1++)
 538   2                      {
 539   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 540   3                              else OLED_DrawPoint(x,y,!mode);
 541   3                              temp<<=1;
 542   3                              y++;
 543   3                              if((y-y0)==size)
 544   3                              {
 545   4                                      y=y0;
 546   4                                      x++;
 547   4                                      break;
 548   4                              }
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 10  

 549   3                      }        
 550   2          }          
 551   1      }
 552          //m^n∫Ø ˝
 553          u32 mypow(u8 m,u8 n)
 554          {
 555   1              u32 result=1;    
 556   1              while(n--)result*=m;    
 557   1              return result;
 558   1      }                                 
 559          
 560          /*******************************************************************************************
 561          ∫Ø ˝√˚: void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 562          Àµ√˜: œ‘ æ ˝◊÷
 563          //x,y :∆µ„◊¯±Í  
 564          //len : ˝◊÷µƒŒª ˝
 565          //size:◊÷ÃÂ¥Û–°
 566          //mode:ƒ£ Ω     0,ÃÓ≥‰ƒ£ Ω;1,µ˛º”ƒ£ Ω
 567          //num: ˝÷µ(0~4294967295);
 568          ********************************************************************************************/                     
 569          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 570          {               
 571   1              u8 t,temp;
 572   1              u8 enshow=0;                                               
 573   1              for(t=0;t<len;t++)
 574   1              {
 575   2                      temp=(num/mypow(10,len-t-1))%10;
 576   2                      if(enshow==0&&t<(len-1))
 577   2                      {
 578   3                              if(temp==0)
 579   3                              {
 580   4                                      OLED_ShowChar(x+(size/2)*t,y,' ',size,1);
 581   4                                      continue;
 582   4                              }else enshow=1; 
 583   3                               
 584   3                      }
 585   2                      OLED_ShowChar(x+(size/2)*t,y,temp+'0',size,1); 
 586   2              }
 587   1      } 
 588          /*******************************************************************************************
 589          ∫Ø ˝√˚: void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)
 590          Àµ√˜: œ‘ æ◊÷∑˚¥Æ
 591          //œ‘ æ◊÷∑˚¥Æ
 592          //x,y:∆µ„◊¯±Í  
 593          //*p:◊÷∑˚¥Æ∆ ºµÿ÷∑
 594          ********************************************************************************************/
 595          void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size, u8 mode)
 596          {
 597   1                 
 598   1          while(*p!='\0')
 599   1          { 
 600   2                  if(size == 16)
 601   2                      {      
 602   3                      if(x>122){x=0;y+=16;}   //ªª––
 603   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 604   3                      OLED_ShowChar(x,y,*p,16,mode);   
 605   3                      x+=8;
 606   3                      }
 607   2                      else if(size == 12)
 608   2                      {
 609   3                      if(x>122){x=0;y+=12;}   //ªª––
 610   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 11  

 611   3                      OLED_ShowChar(x,y,*p,12,mode);   
 612   3                      x+=6;           
 613   3                      }
 614   2                      else
 615   2                      {
 616   3                      if(x>122){x=0;y+=8;}    //ªª––
 617   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 618   3                      OLED_ShowChar(x,y,*p,7,mode);    
 619   3                      x+=6;           
 620   3                      }
 621   2              p++;
 622   2          }  
 623   1      }
 624          
 625          /*******************************************************************************************
 626          ∫Ø ˝√˚: void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 627          Àµ√˜: œ‘ æ∫∫◊÷
 628          //œ‘ æ∫∫◊÷
 629          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ∫∫◊÷
 630          //x:0~127
 631          //y:0~63
 632          //fno:∫∫◊÷±‡∫≈
 633          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 634          //16*16¥Û–°µƒ◊÷∑˚
 635          ********************************************************************************************/
 636          void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 637          {                           
 638   1              u8 temp,t,t1;
 639   1              u8 y0=y;                                   
 640   1          for(t=0;t<32;t++)
 641   1          {   
 642   2                      if(t<16)temp=Hzk[fno*2][t];                               
 643   2              else temp=Hzk[fno*2+1][t-16];   
 644   2                      for(t1=0;t1<8;t1++)
 645   2                      {
 646   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 647   3                              else OLED_DrawPoint(x,y,!mode);
 648   3                              temp<<=1;
 649   3                              y++;
 650   3                              if((y-y0)==16)
 651   3                              {
 652   4                                      y=y0;
 653   4                                      x++;
 654   4                                      break;
 655   4                              }
 656   3                      }        
 657   2          }          
 658   1      }
 659          /*******************************************************************************************
 660          ∫Ø ˝√˚: void OLED_DrawBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 661          Àµ√˜: ª≠Ω¯∂»Ãı£¨ ∆ ºŒª÷√◊¯±Í  
 662          ********************************************************************************************/
 663          void OLED_DrawBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 664          { 
 665   1        u8 i;                             
 666   1        OLED_DrawRectangle(x1, y1, x2, y2, t);
 667   1        for(i=0;i<x2-x1;i++)
 668   1        {
 669   2          OLED_Draw_RectangleFill(x1+1, y1+1, x1+i, y2-1, t); 
 670   2              OLED_Refresh_Gram();
 671   2              delay_10ms();
 672   2              delay_10ms();
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 12  

 673   2        }      
 674   1      }
 675          /*******************************************************************************************
 676          ∫Ø ˝√˚: void OLED_DrawBMP(u8 x,u8 y)
 677          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 678          ********************************************************************************************/
 679          void OLED_DrawBMP(u8 x,u8 y,u8 mode)
 680          {                           
 681   1              u16 temp,t,t1;
 682   1              u16 y0=y;                                                                          
 683   1          for(t=0;t<512;t++)
 684   1          {  
 685   2                  temp = logo[t];                               
 686   2              for(t1=0;t1<8;t1++)
 687   2                      {
 688   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 689   3                              else OLED_DrawPoint(x,y,!mode);            
 690   3                              temp<<=1;
 691   3                              y++;
 692   3                              if((y-y0)==32)
 693   3                              {
 694   4                                      y=y0;
 695   4                                      x++;
 696   4                                      break;
 697   4                              }
 698   3                      }        
 699   2          }          
 700   1      }
 701          
 702          /*******************************************************************************************
 703          void OLED_DrawICON(u8 x,u8 y,u16 size ,u8 mode)
 704          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 705          ********************************************************************************************/
 706          void OLED_DrawICON(u8 x,u8 y,u8 mode,void *icon)
 707          {                           
 708   1              u16 temp,t,t1;
 709   1              u16 y0=y;                                                                          
 710   1          for(t=0;t<128;t++)
 711   1          {  
 712   2                  temp = *(u8*)icon ; 
 713   2                      ((u8*)icon)++;                            
 714   2              for(t1=0;t1<8;t1++)
 715   2                      {
 716   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 717   3                              else OLED_DrawPoint(x,y,!mode);            
 718   3                              temp<<=1;
 719   3                              y++;
 720   3                              if((y-y0)==32)
 721   3                              {
 722   4                                      y=y0;
 723   4                                      x++;
 724   4                                      break;
 725   4                              }
 726   3                      }        
 727   2          }          
 728   1      }
 729          
 730          void Disp_Menu_Main(u8 num)
 731          {
 732   1          OLED_ShowChar(0,11,'<',12,1);
 733   1          OLED_ShowChar(120,11,'>',12,1);
 734   1              if(num == 0)
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 13  

 735   1              {
 736   2                  OLED_DrawICON(10,0,0,set_ico);
 737   2                  OLED_DrawICON(48,0,1,cut_ico);
 738   2                  OLED_DrawICON(86,0,1,test_ico);
 739   2              } 
 740   1              else if(num == 1)
 741   1              {
 742   2                  OLED_DrawICON(10,0,1,set_ico);
 743   2                  OLED_DrawICON(48,0,0,cut_ico);
 744   2                  OLED_DrawICON(86,0,1,test_ico);
 745   2              }
 746   1              else
 747   1              {
 748   2                  OLED_DrawICON(10,0,1,set_ico);
 749   2                  OLED_DrawICON(48,0,1,cut_ico);
 750   2                  OLED_DrawICON(86,0,0,test_ico);
 751   2              }
 752   1      //      OLED_Refresh_Gram();
 753   1      }
 754          void Disp_Menu_1(u8 num)
 755          {
 756   1      //    OLED_ShowChar(0,11,'<',12,1);
 757   1      //    OLED_ShowChar(120,11,'>',12,1);
 758   1              if(num == 0)
 759   1              {
 760   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,0);
 761   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 762   2                  OLED_ShowString(78,0,"3.COB",12,1);
 763   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 764   2              } 
 765   1              else if(num == 1)
 766   1              {
 767   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 768   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,0);
 769   2                  OLED_ShowString(78,0,"3.COB",12,1);
 770   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 771   2              }
 772   1              else if(num == 2)
 773   1              {
 774   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 775   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 776   2                  OLED_ShowString(78,0,"3.COB",12,0);
 777   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 778   2              }
 779   1              else
 780   1              {
 781   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 782   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 783   2                  OLED_ShowString(78,0,"3.COB",12,1);
 784   2                  OLED_ShowString(78,15,"4.RETURN",12,0);
 785   2              }
 786   1      }
 787          
 788          void Disp_Menu_0(u8 num)
 789          {
 790   1              if(num == 0)
 791   1              {
 792   2                  OLED_ShowString(0,0,"1.SET SEN",12,0);
 793   2                  OLED_ShowString(0,15,"2.SET ADD",12,1);
 794   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 795   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 796   2              } 
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 14  

 797   1              else if(num == 1)
 798   1              {
 799   2                  OLED_ShowString(0,0,"1.SET SEN",12,1);
 800   2                  OLED_ShowString(0,15,"2.SET ADD",12,0);
 801   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 802   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 803   2              }
 804   1              else if(num == 2)
 805   1              {
 806   2                  OLED_ShowString(0,0,"1.SET SEN",12,1);
 807   2                  OLED_ShowString(0,15,"2.SET ADD",12,1);
 808   2                  OLED_ShowString(78,0,"3.ERASE",12,0);
 809   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 810   2              }
 811   1              else
 812   1              {
 813   2                  OLED_ShowString(0,0,"1.SET SEN",12,1);
 814   2                  OLED_ShowString(0,15,"2.SET ADD",12,1);
 815   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 816   2                  OLED_ShowString(78,15,"4.RETURN",12,0);
 817   2              } 
 818   1      }
 819          /*******************************************************************************************
 820          ∫Ø ˝√˚: void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 821          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 822          ********************************************************************************************/
 823          void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 824          {                           
 825   1        OLED_ShowString(x+4,y,"SADD:",7,1);    //µ⁄“ª––◊÷∑˚
 826   1        OLED_ShowString(x+4,y+16,"RADD:",7,1);   //µ⁄»˝––◊÷∑˚ 
 827   1        OLED_DrawLine(38,0,38,31,1); 
 828   1        OLED_DrawLine(38,0,40,0,1); 
 829   1        OLED_DrawLine(38,15,40,15,1);
 830   1        OLED_DrawLine(38,31,40,31,1);                  //ª≠∑÷∏Óœﬂ
 831   1        x = x+36;
 832   1        OLED_ShowChar(x+6,y,((Add1>>23)&0x01)+'0',7,1);
 833   1        OLED_ShowChar(x+6*2,y,((Add1>>22)&0x01)+'0',7,1);
 834   1        OLED_ShowChar(x+6*3,y,((Add1>>21)&0x01)+'0',7,1);
 835   1        OLED_ShowChar(x+6*4,y,((Add1>>20)&0x01)+'0',7,1);
 836   1        OLED_ShowChar(x+6*5,y,'-',7,1);
 837   1        OLED_ShowChar(x+6*6,y,((Add1>>19)&0x01)+'0',7,1);
 838   1        OLED_ShowChar(x+6*7,y,((Add1>>18)&0x01)+'0',7,1);
 839   1        OLED_ShowChar(x+6*8,y,((Add1>>17)&0x01)+'0',7,1);
 840   1        OLED_ShowChar(x+6*9,y,((Add1>>16)&0x01)+'0',7,1);
 841   1        OLED_ShowChar(x+6*10,y,'-',7,1);
 842   1        OLED_ShowChar(x+6*11,y,((Add1>>15)&0x01)+'0',7,1);
 843   1        OLED_ShowChar(x+6*12,y,((Add1>>14)&0x01)+'0',7,1);
 844   1        OLED_ShowChar(x+6*13,y,((Add1>>13)&0x01)+'0',7,1);
 845   1        OLED_ShowChar(x+6*14,y,((Add1>>12)&0x01)+'0',7,1);
 846   1       // OLED_ShowChar(x+6*15,y,'-',7,1);
 847   1        OLED_ShowChar(x+6,y+8,((Add1>>11)&0x01)+'0',7,1);
 848   1        OLED_ShowChar(x+6*2,y+8,((Add1>>10)&0x01)+'0',7,1);
 849   1        OLED_ShowChar(x+6*3,y+8,((Add1>>9)&0x01)+'0',7,1);
 850   1        OLED_ShowChar(x+6*4,y+8,((Add1>>8)&0x01)+'0',7,1);
 851   1        OLED_ShowChar(x+6*5,y+8,'-',7,1);
 852   1        OLED_ShowChar(x+6*6,y+8,((Add1>>7)&0x01)+'0',7,1);
 853   1        OLED_ShowChar(x+6*7,y+8,((Add1>>6)&0x01)+'0',7,1);
 854   1        OLED_ShowChar(x+6*8,y+8,((Add1>>5)&0x01)+'0',7,1);
 855   1        OLED_ShowChar(x+6*9,y+8,((Add1>>4)&0x01)+'0',7,1);
 856   1        OLED_ShowChar(x+6*10,y+8,'-',7,1);
 857   1        OLED_ShowChar(x+6*11,y+8,((Add1>>3)&0x01)+'0',7,1);
 858   1        OLED_ShowChar(x+6*12,y+8,((Add1>>2)&0x01)+'0',7,1);
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 15  

 859   1        OLED_ShowChar(x+6*13,y+8,((Add1>>1)&0x01)+'0',7,1);
 860   1        OLED_ShowChar(x+6*14,y+8,((Add1)&0x01)+'0',7,1);
 861   1      
 862   1        OLED_ShowChar(x+6,y+16,((Add2>>23)&0x01)+'0',7,1);
 863   1        OLED_ShowChar(x+6*2,y+16,((Add2>>22)&0x01)+'0',7,1);
 864   1        OLED_ShowChar(x+6*3,y+16,((Add2>>21)&0x01)+'0',7,1);
 865   1        OLED_ShowChar(x+6*4,y+16,((Add2>>20)&0x01)+'0',7,1);
 866   1        OLED_ShowChar(x+6*5,y+16,'-',7,1);
 867   1        OLED_ShowChar(x+6*6,y+16,((Add2>>19)&0x01)+'0',7,1);
 868   1        OLED_ShowChar(x+6*7,y+16,((Add2>>18)&0x01)+'0',7,1);
 869   1        OLED_ShowChar(x+6*8,y+16,((Add2>>17)&0x01)+'0',7,1);
 870   1        OLED_ShowChar(x+6*9,y+16,((Add2>>16)&0x01)+'0',7,1);
 871   1        OLED_ShowChar(x+6*10,y+16,'-',7,1);
 872   1        OLED_ShowChar(x+6*11,y+16,((Add2>>15)&0x01)+'0',7,1);
 873   1        OLED_ShowChar(x+6*12,y+16,((Add2>>14)&0x01)+'0',7,1);
 874   1        OLED_ShowChar(x+6*13,y+16,((Add2>>13)&0x01)+'0',7,1);
 875   1        OLED_ShowChar(x+6*14,y+16,((Add2>>12)&0x01)+'0',7,1);
 876   1      //  OLED_ShowChar(x+6*15,y+16,'-',7,1);
 877   1      
 878   1        OLED_ShowChar(x+6,y+24,((Add2>>11)&0x01)+'0',7,1);
 879   1        OLED_ShowChar(x+6*2,y+24,((Add2>>10)&0x01)+'0',7,1);
 880   1        OLED_ShowChar(x+6*3,y+24,((Add2>>9)&0x01)+'0',7,1);
 881   1        OLED_ShowChar(x+6*4,y+24,((Add2>>8)&0x01)+'0',7,1);
 882   1        OLED_ShowChar(x+6*5,y+24,'-',7,1);
 883   1        OLED_ShowChar(x+6*6,y+24,((Add2>>7)&0x01)+'0',7,1);
 884   1        OLED_ShowChar(x+6*7,y+24,((Add2>>6)&0x01)+'0',7,1);
 885   1        OLED_ShowChar(x+6*8,y+24,((Add2>>5)&0x01)+'0',7,1);
 886   1        OLED_ShowChar(x+6*9,y+24,((Add2>>4)&0x01)+'0',7,1);
 887   1        OLED_ShowChar(x+6*10,y+24,'-',7,1);
 888   1        OLED_ShowChar(x+6*11,y+24,((Add2>>3)&0x01)+'0',7,1);
 889   1        OLED_ShowChar(x+6*12,y+24,((Add2>>2)&0x01)+'0',7,1);
 890   1        OLED_ShowChar(x+6*13,y+24,((Add2>>1)&0x01)+'0',7,1);
 891   1        OLED_ShowChar(x+6*14,y+24,((Add2)&0x01)+'0',7,1);    
 892   1      }
 893          /*******************************************************************************************
 894          ∫Ø ˝√˚: void OLED_Init(void)
 895          Àµ√˜: OLED∆¡≥ı ºªØ
 896          ********************************************************************************************/                               
 897          void OLED_Init(void)
 898          {
 899   1          OLED_RST_Set();
 900   1              delay_ms(100);
 901   1              OLED_RST_Clr();
 902   1              delay_ms(100);
 903   1              OLED_RST_Set(); 
 904   1      
 905   1              OLED_WR_Byte(0xFD,OLED_CMD);//ƒ⁄≤øµ•∆¨ª˙–¥±£ª§
 906   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œπÿ±’ƒ⁄≤ø±£ª§£¨‘ –ÌΩ” ’À˘”–÷∏¡Ó£¨»Áø™∆Ù±£ª§‘Ú÷ªΩ” ‹FD÷∏¡Ó £øƒ¨»œŒ™0£¨Œ™1
             -‘Ú±£ª§ bit 0 0 0 1 0 £ø1 0
 907   1                      
 908   1              OLED_WR_Byte(0xAE,OLED_CMD);//πÿ±’œ‘ æ
 909   1      
 910   1              OLED_WR_Byte(0x20,OLED_CMD);
 911   1              OLED_WR_Byte(0x02,OLED_CMD);//page mode
 912   1      
 913   1              OLED_WR_Byte(0xB4,OLED_CMD);
 914   1      
 915   1              OLED_WR_Byte(0x00,OLED_CMD);//
 916   1              OLED_WR_Byte(0x10,OLED_CMD);//
 917   1      
 918   1      //      OLED_WR_Byte(0x40,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 919   1              OLED_WR_Byte(0x60,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
C51 COMPILER V9.00   OLED                                                                  04/24/2015 19:30:25 PAGE 16  

 920   1      
 921   1              OLED_WR_Byte(0xD5,OLED_CMD);//…Ë÷√ ±÷”∑÷∆µ“Ú◊”£¨’Òµ¥∆µ¬ 
 922   1              OLED_WR_Byte(0xf0,OLED_CMD);//[3:0],∑÷∆µ“Ú◊”;[7:4],’µ¥∆µ¬      ƒ¨»œ0111 0000   PS¥Û≤ø∑÷«˝∂Ø∂º—°‘Ò «0x80
 923   1      
 924   1              OLED_WR_Byte(0xA8,OLED_CMD);//…Ë÷√∂‡÷ÿÕ®µ¿
 925   1              OLED_WR_Byte(0x1F,OLED_CMD);//ƒ¨»œ0X3F
 926   1      
 927   1              OLED_WR_Byte(0xD3,OLED_CMD);//…Ë÷√œ‘ æ∆´“∆
 928   1              OLED_WR_Byte(0x00,OLED_CMD);//ƒ¨»œ≤ª∆´“∆[5:0]
 929   1      
 930   1      
 931   1      
 932   1              OLED_WR_Byte(0xA1,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 933   1      
 934   1      //      OLED_WR_Byte(0xA0,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 935   1      
 936   1      //      OLED_WR_Byte(0xC8,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 937   1      
 938   1          OLED_WR_Byte(0xC0,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 939   1      
 940   1              OLED_WR_Byte(0xD8,OLED_CMD);//
 941   1              OLED_WR_Byte(0x05,OLED_CMD);
 942   1      
 943   1              OLED_WR_Byte(0xDA,OLED_CMD);//…Ë÷√COM”≤º˛“˝Ω≈≈‰÷√
 944   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œ[5:4]≈‰÷√
 945   1      
 946   1      //      OLED_WR_Byte(0x00,OLED_CMD);// £ø£ø£ø£ø√ª…∂”√∞…........
 947   1      
 948   1              OLED_WR_Byte(0xD9,OLED_CMD);//…Ë÷√‘§≥‰µÁ÷‹∆⁄
 949   1              OLED_WR_Byte(0xF1,OLED_CMD);//ƒ¨»œ[3:0],PHASE 1;[7:4],PHASE 2;
 950   1      
 951   1              OLED_WR_Byte(0x81,OLED_CMD);//∂‘±»∂»…Ë÷√
 952   1              OLED_WR_Byte(0xBF,OLED_CMD);//1~255;ƒ¨»œ0X7F (¡¡∂»…Ë÷√,‘Ω¥Û‘Ω¡¡)
 953   1      
 954   1      //      OLED_WR_Byte(0xD9,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 955   1      //      OLED_WR_Byte(0x25,OLED_CMD);//
 956   1      
 957   1              OLED_WR_Byte(0xDB,OLED_CMD);//…Ë÷√VCOMH µÁ—π±∂¬ 
 958   1              OLED_WR_Byte(0x34,OLED_CMD);//[5:2] 0000,0.64*vcc;1101,0.78*vcc;1111,0.84*vcc;
 959   1      
 960   1              OLED_WR_Byte(0xA4,OLED_CMD);//»´æ÷œ‘ æø™∆Ù;bit0:1,ø™∆Ù;0,πÿ±’;(∞◊∆¡/∫⁄∆¡) A4/A5
 961   1              OLED_WR_Byte(0xA6,OLED_CMD);//…Ë÷√œ‘ æ∑Ω Ω;bit0:1,∑¥œ‡œ‘ æ;0,’˝≥£œ‘ æ     A6/A7
 962   1              OLED_WR_Byte(0xAF,OLED_CMD);//ø™∆Ùœ‘ æ                                                            AE/AF
 963   1      
 964   1              OLED_Clear();
 965   1              OLED_Set_Pos(0,0);                      
 966   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8289    ----
   CONSTANT SIZE    =   4879    ----
   XDATA SIZE       =   1024     147
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
