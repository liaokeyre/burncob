C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\output\oled.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled\oled.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr) DEBUG OBJECTEXTEND PRINT(.\list\oled.lst) OBJECT(.\output\oled.obj)

line level    source

   1          /***********************************************************************************************
   2          π¶ƒ‹Àµ√˜£∫“—÷ß≥÷ª≠µ„£¨ª≠œﬂ£¨ª≠æÿ–Œ£¨ª≠‘≤£¨ª≠¥∞ø⁄£¨ª≠BMP
   3          “∆÷≤£∫liaokeyre
   4          ************************************************************************************************/
   5          //Ω”ø⁄∂®“Â≤Œ’’oled.hŒƒº˛
   6          //ÀƒœﬂSPI–Ë“™Ω”∆ﬂ∏˘œﬂ£¨∆‰÷–RESø…“‘≤ªΩ”£ªµ´ «≤ªΩ” ±∫Ú±ÿ–Î¿≠∏ﬂ
   7          // GND,VCC,CS,RES,D/C,CLK,DIN
   8          //πÿ”⁄µÁ—πŒ Ã‚£ª»Áπ˚øÕªß–Ë“™≥§ ±º‰Œ»∂®π§◊˜£ªΩ®“È»´≤ø≤…”√3.3VµÁ‘¥£ªµÁ∆Ω–≈∫≈“≤≤…”√3.3Vµƒ
   9          //»Áπ˚øÕªß–Ë“™”√5VµÁ‘¥£¨À‰»ª5Vø…“‘’˝≥£π§◊˜£¨µ´ Ω®“È«≤ª“™≥§ ±º‰π§◊˜£ª’‚—˘ø…ƒ‹ª·ºı…Ÿ∆¡µƒ Ÿ√¸£ª‘⁄VCC∂À¥Æ“ª–°µ
             -Á◊Ëø…ƒ‹ª·∫√“ª–©°£
  10          #include "oled.h"
  11          #include "oledfont.h"  
  12          #define GUI_LCM_XMAX 128
  13          #define GUI_LCM_YMAX  32         
  14          //#include "delay.h"
  15          //OLEDµƒœ‘¥Ê
  16          //¥Ê∑≈∏Ò Ω»Áœ¬.
  17          //[0]0 1 2 3 ... 127    
  18          //[1]0 1 2 3 ... 127    
  19          //[2]0 1 2 3 ... 127    
  20          //[3]0 1 2 3 ... 127
  21          //--------------------------------------12832   
  22          //[4]0 1 2 3 ... 127    
  23          //[5]0 1 2 3 ... 127    
  24          //[6]0 1 2 3 ... 127    
  25          //[7]0 1 2 3 ... 127 
  26          u8 OLED_GRAM[128][4];//œ‘¥Ê
  27          
  28          /****************************************************************************
  29          ◊÷Ω⁄¬Î∏ﬂµÕŒªæµœÒ≤Ÿ◊˜
  30          ÷˜“™ «”–“ª∏ˆ◊÷ø‚»°¬Î∑ΩœÚ «∑¥µƒ
  31          ÷ÿ–¬◊ˆ◊÷ø‚”÷¬È∑≥°£°£°£°£
  32          ****************************************************************************/   
  33          u8 ByteMirro(u8 dat)
  34          {
  35   1       dat = (dat & 0xf0) >> 4 | (dat & 0x0f)  << 4;//“‘4ŒªŒ™µ•ŒªΩ¯––Ωªªª    abcd  1234
  36   1       dat = (dat & 0xcc) >> 2 | (dat & 0x33)  << 2;//“‘2ŒªŒ™µ•ŒªΩ¯––Ωªªª    cdab  3412
  37   1       dat = (dat & 0xaa) >> 1 | (dat & 0x55)  << 1;//“‘1ŒªŒ™µ•ŒªΩ¯––Ωªªª   dcba  4321
  38   1       return dat;
  39   1      }
  40                             
  41          void delay_ms(unsigned int ms)
  42          {                         
  43   1              unsigned int a;
  44   1              while(ms)
  45   1              {
  46   2                      a=1800;
  47   2                      while(a--);
  48   2                      ms--;
  49   2              }
  50   1      //      return;
  51   1      }
  52          #if OLED_MODE==1
              //œÚSSD1106–¥»Î“ª∏ˆ◊÷Ω⁄°£
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 2   

              //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
              //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  70          //œÚSSD1306–¥»Î“ª∏ˆ◊÷Ω⁄°£
  71          //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
  72          //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
  73          void OLED_WR_Byte(u8 dat,u8 cmd)
  74          {       
  75   1              u8 i;                     
  76   1              if(cmd)
  77   1                OLED_DC_Set();
  78   1              else 
  79   1                OLED_DC_Clr();                  
  80   1              OLED_CS_Clr();
  81   1              for(i=0;i<8;i++)
  82   1              {                         
  83   2                      OLED_SCLK_Clr();
  84   2                      if(dat&0x80)
  85   2                      {
  86   3                        OLED_SDIN_Set();
  87   3                      }
  88   2              else
  89   2                  OLED_SDIN_Clr();
  90   2                  OLED_SCLK_Set();
  91   2                      dat<<=1;   
  92   2              }                                                 
  93   1              OLED_CS_Set();
  94   1              OLED_DC_Set();            
  95   1      } 
  96          #endif
  97          
  98          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  99          { 
 100   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
 101   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 102   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 103   1      } 
 104          /*        
 105          //ø™∆ÙOLEDœ‘ æ    
 106          void OLED_Display_On(void)
 107          {
 108                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 109                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 110                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 111          }
 112          //πÿ±’OLEDœ‘ æ     
 113          void OLED_Display_Off(void)
 114          {
 115                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 3   

 116                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 117                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 118          }
 119          */
 120          void OLED_Refresh_Gram(void)
 121          {
 122   1              u8 i,n;             
 123   1              for(i=0;i<4;i++)  
 124   1              {  
 125   2                      OLED_WR_Byte (0xb4+i,OLED_CMD);    //…Ë÷√“≥µÿ÷∑£®0~7£©b4-->b7
 126   2                      OLED_WR_Byte (0x04,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–µÕµÿ÷∑
 127   2                      OLED_WR_Byte (0x10,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–∏ﬂµÿ÷∑   
 128   2                      for(n=0;n<128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); 
 129   2              }   
 130   1      }
 131                                                   
 132          //«Â∆¡∫Ø ˝,«ÂÕÍ∆¡,’˚∏ˆ∆¡ƒª «∫⁄…´µƒ!∫Õ√ªµ„¡¡“ª—˘!!!      
 133          void OLED_Clear(void)  
 134          {  
 135   1              u8 i,n;  
 136   1              for(i=0;i<4;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
 137   1      //      OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 138   1      }  
 139          //ª≠µ„ 
 140          //x:0~127
 141          //y:0~63
 142          //t:1 ÃÓ≥‰ 0,«Âø’                                  
 143          void OLED_DrawPoint(u8 x,u8 y,u8 t)
 144          {
 145   1              u8 pos,bx,temp=0;
 146   1              if(x>127||y>63)return;//≥¨≥ˆ∑∂Œß¡À.
 147   1              pos=7-y/8;            //µ√µΩÀ˘‘⁄“≥
 148   1              bx=y%8;                           //µ√µΩµ±«∞“≥æ´»∑Œª÷√
 149   1              temp=1<<(7-bx);
 150   1              if(t)OLED_GRAM[x][pos]|=temp;
 151   1              else OLED_GRAM[x][pos]&=~temp;      
 152   1      }
 153          
 154          //////////////////////////////////
 155          //“‘x1,y1Œ™∆µ„£¨x2,y2Œ™÷’µ„ª≠œﬂ//
 156          /////////(t=1ª≠µ„£¨t=0«Âµ„)///////
 157          //////////////////////////////////
 158          //ª≠œﬂ∫Ø ˝
 159          void OLED_DrawLine(u8 x1,u8 y1,u8 x2,u8 y2,u8 t) //y=kx+b
 160          {
 161   1              s16 dy;
 162   1              s16 dx;
 163   1              s8 dirx,diry,move;
 164   1              dy=y2-y1; 
 165   1              dx=x2-x1; 
 166   1              if(dy<0)  
 167   1              {
 168   2                      dy=-dy;
 169   2                      diry=-1;
 170   2              }
 171   1              else 
 172   1              {
 173   2                      diry=1;
 174   2              }
 175   1              if(dx<0)
 176   1              {
 177   2                      dx=-dx;
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 4   

 178   2                      dirx=-1;
 179   2              }
 180   1              else
 181   1              {
 182   2                      dirx=1;
 183   2              }
 184   1      //      dy<<=1; 
 185   1      //      dx<<=1;
 186   1              OLED_DrawPoint(x1,y1,t);
 187   1              if(dx>dy)       //////////////////
 188   1              {
 189   2                      move=dy-(dx>>1); 
 190   2                      while(x1!=x2)
 191   2                      {
 192   3                              if(move>=0)
 193   3                              {
 194   4                                      y1+=diry; 
 195   4                                      move-=dx;
 196   4                              }
 197   3                              x1+=dirx;
 198   3                              move+=dy;  
 199   3                              OLED_DrawPoint(x1,y1,t);
 200   3                      }
 201   2              }
 202   1              else
 203   1              {
 204   2                      move=dx-(dy>>1);
 205   2                      while(y1!=y2)
 206   2                      {
 207   3                              if(move>=0)
 208   3                              {
 209   4                                      x1+=dirx;
 210   4                                      move-=dy;
 211   4                              }
 212   3                              y1+=diry;
 213   3                              move+=dx;
 214   3                              OLED_DrawPoint(x1,y1,t);
 215   3                      }
 216   2              }
 217   1      }
 218          
 219          /****************************************************************************
 220          * π¶ƒ‹£∫ª≠ÀÆ∆Ωœﬂ°£
 221          * »Îø⁄≤Œ ˝£∫x0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 222          *           y0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄––µƒŒª÷√
 223          *           x1      ÀÆ∆Ωœﬂ÷’µ„À˘‘⁄¡–µƒŒª÷√
 224          *           t       œ‘ æ—’…´(∂‘”⁄∫⁄∞◊…´LCM£¨Œ™0 ±√£¨Œ™1 ±œ‘ æ)
 225          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 226          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 227          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 228          ****************************************************************************/
 229          void  OLED_Draw_HLine(u8 x0, u8 y0, u8 x1, u8 t)
 230          {
 231   1          u8  temp;
 232   1          if(x0>x1)               // ∂‘x0°¢x1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 233   1          {
 234   2              temp = x1;
 235   2              x1 = x0;
 236   2              x0 = temp;
 237   2          }
 238   1          do
 239   1          {
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 5   

 240   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 241   2              x0++;
 242   2          }
 243   1          while(x1>=x0);
 244   1      }
 245          /****************************************************************************
 246          * π¶ƒ‹£∫ª≠¥π÷±œﬂ°£
 247          * »Îø⁄≤Œ ˝£∫x0      ¥π÷±œﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 248          *           y0      ¥π÷±œﬂ∆µ„À˘‘⁄––µƒŒª÷√
 249          *           y1      ¥π÷±œﬂ÷’µ„À˘‘⁄––µƒŒª÷√
 250          *           t       œ‘ æ—’…´
 251          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 252          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 253          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 254          ****************************************************************************/
 255          void  OLED_Draw_RLine(u8 x0, u8 y0, u8 y1, u8 t)
 256          {
 257   1          u8  temp;
 258   1          if(y0>y1)       // ∂‘y0°¢y1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 259   1          {
 260   2              temp = y1;
 261   2              y1 = y0;
 262   2              y0 = temp;
 263   2          }
 264   1          do
 265   1          {
 266   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 267   2              y0++;
 268   2          }
 269   1          while(y1>=y0);
 270   1      }
 271          /****************************************************************************
 272          * π¶ƒ‹£∫ª≠æÿ–Œ°£
 273          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 274          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 275          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 276          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 277          *           t       1ª≠µ„£¨0«Âµ„
 278          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 279          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 280          ****************************************************************************/
 281          void  OLED_DrawRectangle(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 282          {  OLED_Draw_HLine(x1, y1, x2, t);
 283   1         OLED_Draw_HLine(x1, y2, x2, t);
 284   1         OLED_Draw_RLine(x1, y1, y2, t);
 285   1         OLED_Draw_RLine(x2, y1, y2, t);
 286   1      }
 287          /****************************************************************************
 288          * π¶ƒ‹£∫ÃÓ≥‰æÿ–Œ°£ª≠“ª∏ˆÃÓ≥‰µƒæÿ–Œ£¨ÃÓ≥‰…´”Î±ﬂøÚ…´“ª—˘°£
 289          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 290          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 291          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 292          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 293          *           t       ÃÓ≥‰—’…´
 294          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 295          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 296          ****************************************************************************/
 297          void  OLED_Draw_RectangleFill(u8 x0, u8 y0, u8 x1, u8 y1, u8 t)
 298          {  u8  i;
 299   1      
 300   1         /* œ»’“≥ˆæÿ–Œ◊Û…œΩ«”Î”“œ¬Ω«µƒ¡Ω∏ˆµ„£¨±£¥Ê‘⁄(x0,y0)£¨(x1,y1) */
 301   1         if(x0>x1)                                            // »Ùx0>x1£¨‘Úx0”Îx1Ωªªª
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 6   

 302   1         {  i = x0;
 303   2            x0 = x1;
 304   2            x1 = i;
 305   2         }
 306   1         if(y0>y1)                                            // »Ùy0>y1£¨‘Úy0”Îy1Ωªªª
 307   1         {  i = y0;
 308   2            y0 = y1;
 309   2            y1 = i;
 310   2         }
 311   1         
 312   1         /* ≈–∂œ «∑Ò÷ª «÷±œﬂ */
 313   1         if(y0==y1) 
 314   1         {  OLED_Draw_HLine(x0, y0, x1, t);
 315   2            return;
 316   2         }
 317   1         if(x0==x1) 
 318   1         {  (x0, y0, y1, t);
 319   2            return;
 320   2         }
 321   1      
 322   1         while(y0<=y1)                                                
 323   1         {  OLED_Draw_HLine(x0, y0, x1, t);   // µ±«∞ª≠ÀÆ∆Ωœﬂ
 324   2            y0++;                                                     // œ¬“ª––
 325   2         }
 326   1      }
 327          /****************************************************************************
 328          * π¶ƒ‹£∫ª≠’˝∑Ω–Œ°£
 329          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 330          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 331          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 332          *           t       œ‘ æ—’…´
 333          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 334          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 335          ****************************************************************************/
 336          void  OLED_Draw_Square(u8 x0, u8 y0, u8  with, u8 t)
 337          { 
 338   1          if(with==0) return;
 339   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 340   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 341   1              OLED_DrawRectangle(x0, y0, x0+with, y0+with, t);
 342   1      }
 343          /****************************************************************************
 344          * π¶ƒ‹£∫ª≠’˝∑Ω–ŒÃÓ≥‰°£
 345          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 346          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 347          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 348          *           t       œ‘ æ—’…´
 349          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 350          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 351          ****************************************************************************/
 352          void  OLED_Draw_SquareFill(u8 x0, u8 y0, u8  with, u8 t)
 353          { 
 354   1          if(with==0) return;
 355   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 356   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 357   1              OLED_Draw_RectangleFill(x0, y0, x0+with, y0+with, t);
 358   1      }
 359          /****************************************************************************
 360          * π¶ƒ‹£∫∂‡∏ˆµ„÷Æº‰µƒ¡¨–¯¡¨œﬂ°£¥”µ⁄“ªµ„¡¨µΩµ⁄∂˛µ„£¨‘Ÿ¡¨µΩµ⁄»˝µ„...
 361          * »Îø⁄≤Œ ˝£∫points  ∂‡∏ˆµ„◊¯±Í ˝æ›µƒ÷∏’Î£¨ ˝æ›≈≈¡–Œ™(x0,y0)°¢(x1,y1)°¢(x2,y2)...
 362          *           no      µ„ ˝ƒø£¨÷¡…Ÿ“™¥Û”⁄1
 363          *           t   œ‘ æ—’…´
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 7   

 364          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 365          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 366          ****************************************************************************/
 367          void  OLED_Draw_LineS(u8 const *points, u8 no, u8 t)
 368          {  u8  x0, y0;
 369   1         u8  x1, y1;
 370   1         u8  i;
 371   1      
 372   1         /* »Îø⁄≤Œ ˝π˝¬À */
 373   1         if(0==no) return;
 374   1         if(1==no)                                            // µ•µ„
 375   1         {  x0 = *points++;
 376   2            y0 = *points;
 377   2            OLED_DrawPoint(x0, y0, t);
 378   2         }
 379   1         
 380   1         /* ª≠∂‡ÃıœﬂÃı */
 381   1         x0 = *points++;                                      // »°≥ˆµ⁄“ªµ„◊¯±Í÷µ£¨◊˜Œ™‘≠∆µ„◊¯±Í÷µ
 382   1         y0 = *points++;
 383   1         for(i=1; i<no; i++)
 384   1         {  x1 = *points++;                           // »°≥ˆœ¬“ªµ„◊¯±Í÷µ
 385   2            y1 = *points++;
 386   2            OLED_DrawLine(x0, y0, x1, y1, t);
 387   2            x0 = x1;                                          // ∏¸–¬‘≠∆µ„◊¯±Í
 388   2            y0 = y1;
 389   2         }
 390   1      }
 391          //////////////////////////////
 392          //“‘x,yŒ™‘≤–ƒ£¨“‘rŒ™∞Îæ∂ª≠‘≤//
 393          /////(t=1ª≠µ„£¨t=0«Âµ„)///////
 394          //////////////////////////////
 395          //ª≠‘≤∫Ø ˝
 396          void OLED_DrawCircle(u8 x,u8 y,u16 r,u8 t)
 397          {
 398   1              u8 xc=0;
 399   1              u8 yc;
 400   1              s8 p;
 401   1              yc=r;
 402   1              p=3-(r<<1);
 403   1              while(xc<=yc)  
 404   1              {                 
 405   2                      OLED_DrawPoint(x+xc,y+yc,t);
 406   2                      OLED_DrawPoint(x+xc,y-yc,t);
 407   2                      OLED_DrawPoint(x-xc,y+yc,t);
 408   2                      OLED_DrawPoint(x-xc,y-yc,t);
 409   2                      OLED_DrawPoint(x+yc,y+xc,t);
 410   2                      OLED_DrawPoint(x+yc,y-xc,t);
 411   2                      OLED_DrawPoint(x-yc,y+xc,t);
 412   2                      OLED_DrawPoint(x-yc,y-xc,t);
 413   2                      if(p<0)
 414   2                      p+=((xc++)<<2)+6;
 415   2                      else
 416   2                      p+=(((xc++)-(yc--))<<2)+10;
 417   2              }
 418   1      }
 419          
 420          /****************************************************************************
 421          * π¶ƒ‹£∫œ‘ æ¥∞ø⁄°£∏˘æ›Ã·π©µƒ¥∞ø⁄≤Œ ˝Ω¯––ª≠¥∞ø⁄°£
 422          * »Îø⁄≤Œ ˝£∫win         ¥∞ø⁄æ‰±˙
 423          * ≥ˆø⁄≤Œ ˝£∫∑µªÿ0±Ì æ≤Ÿ◊˜ ß∞‹£¨∑µªÿ1±Ì æ≤Ÿ◊˜≥…π¶
 424          ****************************************************************************/
 425          u8  OLED_Draw_WindowsDraw(WINDOWS *win)
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 8   

 426          {  u8  *str;
 427   1         int8  bak, bak1, bak2;
 428   1         
 429   1         /* ≤Œ ˝π˝¬À£¨»Ù¥∞ø⁄∆≥ˆ∑∂Œß£¨‘Ú∑µªÿ0 */
 430   1         if( ( (win->with)<20 ) || ( (win->hight)<20 ) ) return(0);           // øÌ∂»°¢∏ﬂ∂»ºÏ≤È£¨œﬁ÷∆◊Ó–°¥∞ø⁄
 431   1         if( (win->x + win->with ) > GUI_LCM_XMAX ) return(0);                        // ¥∞ø⁄øÌ∂» «∑Ò“Á≥ˆ
 432   1         if( (win->y + win->hight ) > GUI_LCM_YMAX ) return(0);                       // ¥∞ø⁄∏ﬂ∂» «∑Ò“Á≥ˆ
 433   1          
 434   1         /* ø™ ºª≠¥∞ø⁄ */
 435   1         OLED_Draw_RectangleFill(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 0); //«Â≥ˆ“ª∆¨
             -«¯”Úª≠µØ¥∞
 436   1         OLED_DrawRectangle(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 1);      // ª≠¥∞ø⁄
 437   1         OLED_Draw_HLine(win->x, win->y + 9, win->x + win->with - 1, 1);                                                      // ª≠±ÍÃ‚ƒø¿∏
 438   1      //   OLED_Draw_RLine(win->x + 9, win->y, win->y + 9, 1);                                                                                // ª≠πÿ±’¥∞∫≈∞¥≈•
 439   1      //   OLED_DrawLine(win->x, win->y, win->x + 9, win->y + 9, 1);
 440   1      //   OLED_DrawLine(win->x + 9, win->y, win->x, win->y + 9, 1);
 441   1         OLED_Draw_RLine(win->x + win->with - 10, win->y, win->y + 9, 1);                                                                             // ª≠πÿ±’¥∞∫≈∞¥≈•
 442   1         OLED_DrawLine(win->x + win->with - 10, win->y, win->x + win->with - 1 , win->y + 9, 1);
 443   1         OLED_DrawLine(win->x + win->with - 1, win->y, win->x + win->with - 10, win->y + 9, 1);
 444   1         
 445   1      
 446   1         /* –¥±ÍÃ‚ */
 447   1         if( win->title != 0 ) 
 448   1         {  str = win->title;
 449   2            bak = win->x + 2;
 450   2            bak1 = win->y + 1;                  //titleŒª÷√
 451   2            bak2 = win->x + win->with -1;
 452   2           
 453   2            while(1)                                          
 454   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 455   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 456   3               
 457   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 458   3               bak += 6;
 459   3            }
 460   2         }
 461   1      
 462   1         /* –¥ƒ⁄»› */
 463   1         if( win->text != 0 ) 
 464   1         {  str = win->text;
 465   2            bak = win->x + 2;
 466   2            bak1 = win->y + 12;                 //textŒª÷√
 467   2            bak2 = win->x + win->with -1;
 468   2           
 469   2            while(1)                                          
 470   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 471   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 472   3               
 473   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 474   3               bak += 6;
 475   3            }
 476   2         }
 477   1      
 478   1         /* –¥◊¥Ã¨¿∏ */
 479   1         if( win->state != 0 )
 480   1         {  if( win->hight < 25) return(0);                                                           // ≈–∂œ «∑Òø…“‘ª≠◊¥Ã¨¿∏
 481   2            /* ª≠◊¥Ã¨¿∏ */
 482   2            OLED_Draw_HLine(win->x, win->y + win->hight - 10, win->x + win->with - 1, 1);
 483   2            
 484   2            str = win->state;
 485   2            bak = win->x + 3;
 486   2            bak1 = win->y + win->hight - 9;
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 9   

 487   2            bak2 = win->x + win->with -1;
 488   2            
 489   2            while(1)                                          
 490   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 491   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 492   3               
 493   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 494   3               bak += 6;
 495   3            }      
 496   2         }
 497   1         
 498   1         return(1);
 499   1      
 500   1      }
 501          /*******************************************************************************************
 502          ∫Ø ˝√˚: void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)
 503          Àµ√˜: ÃÓ≥‰÷∏∂®«¯”ÚRAM
 504          ********************************************************************************************/
 505          void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  
 506          {  
 507   1              u8 x,y;  
 508   1              for(x=x1;x<=x2;x++)
 509   1              {
 510   2                      for(y=y1;y<=y2;y++)OLED_DrawPoint(x,y,dot);
 511   2              }                                                                                                           
 512   1              OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 513   1      }
 514          
 515          
 516          /*******************************************************************************************
 517          ∫Ø ˝√˚: void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 518          Àµ√˜: œ‘ æ◊÷∑˚
 519          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ◊÷∑˚,∞¸¿®≤ø∑÷◊÷∑˚
 520          //x:0~127
 521          //y:0~63
 522          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 523          //size:—°‘Ò◊÷ÃÂ 16/12/7 
 524          ********************************************************************************************/
 525          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 526          {                           
 527   1              u8 temp,t,t1;
 528   1              u8 y0=y;
 529   1              chr=chr-' ';//µ√µΩ∆´“∆∫Ûµƒ÷µ                               
 530   1          for(t=0;t<size;t++)
 531   1          {   
 532   2                  if(size==7)temp=ByteMirro(F7x5[chr][t]); //µ˜”√0806◊÷ÃÂ  “ÚŒ™◊÷ø‚ «∑¥µƒ£¨À˘“‘æµœÒ¥¶¿Ì¡À£°
 533   2                      else if(size==12)temp=asc2_1206[chr][t];  //µ˜”√1206◊÷ÃÂ
 534   2                      else temp=asc2_1608[chr][t];             //µ˜”√1608◊÷ÃÂ                                   
 535   2              for(t1=0;t1<8;t1++)
 536   2                      {
 537   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 538   3                              else OLED_DrawPoint(x,y,!mode);
 539   3                              temp<<=1;
 540   3                              y++;
 541   3                              if((y-y0)==size)
 542   3                              {
 543   4                                      y=y0;
 544   4                                      x++;
 545   4                                      break;
 546   4                              }
 547   3                      }        
 548   2          }          
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 10  

 549   1      }
 550          //m^n∫Ø ˝
 551          u32 mypow(u8 m,u8 n)
 552          {
 553   1              u32 result=1;    
 554   1              while(n--)result*=m;    
 555   1              return result;
 556   1      }                                 
 557          
 558          /*******************************************************************************************
 559          ∫Ø ˝√˚: void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 560          Àµ√˜: œ‘ æ ˝◊÷
 561          //x,y :∆µ„◊¯±Í  
 562          //len : ˝◊÷µƒŒª ˝
 563          //size:◊÷ÃÂ¥Û–°
 564          //mode:ƒ£ Ω     0,ÃÓ≥‰ƒ£ Ω;1,µ˛º”ƒ£ Ω
 565          //num: ˝÷µ(0~4294967295);
 566          ********************************************************************************************/                     
 567          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 568          {               
 569   1              u8 t,temp;
 570   1              u8 enshow=0;                                               
 571   1              for(t=0;t<len;t++)
 572   1              {
 573   2                      temp=(num/mypow(10,len-t-1))%10;
 574   2                      if(enshow==0&&t<(len-1))
 575   2                      {
 576   3                              if(temp==0)
 577   3                              {
 578   4                                      OLED_ShowChar(x+(size/2)*t,y,' ',size,1);
 579   4                                      continue;
 580   4                              }else enshow=1; 
 581   3                               
 582   3                      }
 583   2                      OLED_ShowChar(x+(size/2)*t,y,temp+'0',size,1); 
 584   2              }
 585   1      } 
 586          /*******************************************************************************************
 587          ∫Ø ˝√˚: void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)
 588          Àµ√˜: œ‘ æ◊÷∑˚¥Æ
 589          //œ‘ æ◊÷∑˚¥Æ
 590          //x,y:∆µ„◊¯±Í  
 591          //*p:◊÷∑˚¥Æ∆ ºµÿ÷∑
 592          ********************************************************************************************/
 593          void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)
 594          {
 595   1                 
 596   1          while(*p!='\0')
 597   1          { 
 598   2                  if(size == 16)
 599   2                      {      
 600   3                      if(x>122){x=0;y+=16;}   //ªª––
 601   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 602   3                      OLED_ShowChar(x,y,*p,16,1);      
 603   3                      x+=8;
 604   3                      }
 605   2                      else if(size == 12)
 606   2                      {
 607   3                      if(x>122){x=0;y+=16;}   //ªª––
 608   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 609   3                      OLED_ShowChar(x,y,*p,12,1);      
 610   3                      x+=6;           
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 11  

 611   3                      }
 612   2                      else
 613   2                      {
 614   3                      if(x>122){x=0;y+=16;}   //ªª––
 615   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 616   3                      OLED_ShowChar(x,y,*p,7,1);       
 617   3                      x+=6;           
 618   3                      }
 619   2              p++;
 620   2          }  
 621   1      }
 622          
 623          /*******************************************************************************************
 624          ∫Ø ˝√˚: void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 625          Àµ√˜: œ‘ æ∫∫◊÷
 626          //œ‘ æ∫∫◊÷
 627          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ∫∫◊÷
 628          //x:0~127
 629          //y:0~63
 630          //fno:∫∫◊÷±‡∫≈
 631          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 632          //16*16¥Û–°µƒ◊÷∑˚
 633          ********************************************************************************************/
 634          void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 635          {                           
 636   1              u8 temp,t,t1;
 637   1              u8 y0=y;                                   
 638   1          for(t=0;t<32;t++)
 639   1          {   
 640   2                      if(t<16)temp=Hzk[fno*2][t];                               
 641   2              else temp=Hzk[fno*2+1][t-16];   
 642   2                      for(t1=0;t1<8;t1++)
 643   2                      {
 644   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 645   3                              else OLED_DrawPoint(x,y,!mode);
 646   3                              temp<<=1;
 647   3                              y++;
 648   3                              if((y-y0)==16)
 649   3                              {
 650   4                                      y=y0;
 651   4                                      x++;
 652   4                                      break;
 653   4                              }
 654   3                      }        
 655   2          }          
 656   1      }
 657          /*******************************************************************************************
 658          ∫Ø ˝√˚: void OLED_DrawBMP(u8 x,u8 y)
 659          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 660          ********************************************************************************************/
 661          void OLED_DrawBMP(u8 x,u8 y)
 662          {                           
 663   1              u16 temp,t,t1;
 664   1              u16 y0=y;                                                                          
 665   1          for(t=0;t<512;t++)
 666   1          {  
 667   2                  temp = logo[t];                               
 668   2              for(t1=0;t1<8;t1++)
 669   2                      {
 670   3                              if(temp&0x80)OLED_DrawPoint(x,y,1); 
 671   3                              else OLED_DrawPoint(x,y,0);                
 672   3                              temp<<=1;
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 12  

 673   3                              y++;
 674   3                              if((y-y0)==32)
 675   3                              {
 676   4                                      y=y0;
 677   4                                      x++;
 678   4                                      break;
 679   4                              }
 680   3                      }        
 681   2          }          
 682   1      }
 683          
 684          /*******************************************************************************************
 685          ∫Ø ˝√˚: void OLED_Init(void)
 686          Àµ√˜: OLED∆¡≥ı ºªØ
 687          ********************************************************************************************/                               
 688          void OLED_Init(void)
 689          {
 690   1          OLED_RST_Set();
 691   1              delay_ms(100);
 692   1              OLED_RST_Clr();
 693   1              delay_ms(100);
 694   1              OLED_RST_Set(); 
 695   1      
 696   1              OLED_WR_Byte(0xFD,OLED_CMD);//ƒ⁄≤øµ•∆¨ª˙–¥±£ª§
 697   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œπÿ±’ƒ⁄≤ø±£ª§£¨‘ –ÌΩ” ’À˘”–÷∏¡Ó£¨»Áø™∆Ù±£ª§‘Ú÷ªΩ” ‹FD÷∏¡Ó £øƒ¨»œŒ™0£¨Œ™1
             -‘Ú±£ª§ bit 0 0 0 1 0 £ø1 0
 698   1                      
 699   1              OLED_WR_Byte(0xAE,OLED_CMD);//πÿ±’œ‘ æ
 700   1      
 701   1              OLED_WR_Byte(0x20,OLED_CMD);
 702   1              OLED_WR_Byte(0x02,OLED_CMD);//page mode
 703   1      
 704   1              OLED_WR_Byte(0xB4,OLED_CMD);
 705   1      
 706   1              OLED_WR_Byte(0x00,OLED_CMD);//
 707   1              OLED_WR_Byte(0x10,OLED_CMD);//
 708   1      
 709   1      //      OLED_WR_Byte(0x40,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 710   1              OLED_WR_Byte(0x60,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 711   1      
 712   1              OLED_WR_Byte(0xD5,OLED_CMD);//…Ë÷√ ±÷”∑÷∆µ“Ú◊”£¨’Òµ¥∆µ¬ 
 713   1              OLED_WR_Byte(0xf0,OLED_CMD);//[3:0],∑÷∆µ“Ú◊”;[7:4],’µ¥∆µ¬      ƒ¨»œ0111 0000   PS¥Û≤ø∑÷«˝∂Ø∂º—°‘Ò «0x80
 714   1      
 715   1              OLED_WR_Byte(0xA8,OLED_CMD);//…Ë÷√∂‡÷ÿÕ®µ¿
 716   1              OLED_WR_Byte(0x1F,OLED_CMD);//ƒ¨»œ0X3F
 717   1      
 718   1              OLED_WR_Byte(0xD3,OLED_CMD);//…Ë÷√œ‘ æ∆´“∆
 719   1              OLED_WR_Byte(0x00,OLED_CMD);//ƒ¨»œ≤ª∆´“∆[5:0]
 720   1      
 721   1      
 722   1      
 723   1              OLED_WR_Byte(0xA1,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 724   1      
 725   1      //      OLED_WR_Byte(0xA0,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 726   1      
 727   1      //      OLED_WR_Byte(0xC8,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 728   1      
 729   1          OLED_WR_Byte(0xC0,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 730   1      
 731   1              OLED_WR_Byte(0xD8,OLED_CMD);//
 732   1              OLED_WR_Byte(0x05,OLED_CMD);
 733   1      
C51 COMPILER V9.00   OLED                                                                  04/04/2015 23:44:43 PAGE 13  

 734   1              OLED_WR_Byte(0xDA,OLED_CMD);//…Ë÷√COM”≤º˛“˝Ω≈≈‰÷√
 735   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œ[5:4]≈‰÷√
 736   1      
 737   1      //      OLED_WR_Byte(0x00,OLED_CMD);// £ø£ø£ø£ø√ª…∂”√∞…........
 738   1      
 739   1              OLED_WR_Byte(0xD9,OLED_CMD);//…Ë÷√‘§≥‰µÁ÷‹∆⁄
 740   1              OLED_WR_Byte(0xF1,OLED_CMD);//ƒ¨»œ[3:0],PHASE 1;[7:4],PHASE 2;
 741   1      
 742   1              OLED_WR_Byte(0x81,OLED_CMD);//∂‘±»∂»…Ë÷√
 743   1              OLED_WR_Byte(0xBF,OLED_CMD);//1~255;ƒ¨»œ0X7F (¡¡∂»…Ë÷√,‘Ω¥Û‘Ω¡¡)
 744   1      
 745   1      //      OLED_WR_Byte(0xD9,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 746   1      //      OLED_WR_Byte(0x25,OLED_CMD);//
 747   1      
 748   1              OLED_WR_Byte(0xDB,OLED_CMD);//…Ë÷√VCOMH µÁ—π±∂¬ 
 749   1              OLED_WR_Byte(0x34,OLED_CMD);//[5:2] 0000,0.64*vcc;1101,0.78*vcc;1111,0.84*vcc;
 750   1      
 751   1              OLED_WR_Byte(0xA4,OLED_CMD);//»´æ÷œ‘ æø™∆Ù;bit0:1,ø™∆Ù;0,πÿ±’;(∞◊∆¡/∫⁄∆¡) A4/A5
 752   1              OLED_WR_Byte(0xA6,OLED_CMD);//…Ë÷√œ‘ æ∑Ω Ω;bit0:1,∑¥œ‡œ‘ æ;0,’˝≥£œ‘ æ     A6/A7
 753   1              OLED_WR_Byte(0xAF,OLED_CMD);//ø™∆Ùœ‘ æ                                                            AE/AF
 754   1      
 755   1              OLED_Clear();
 756   1              OLED_Set_Pos(0,0);                      
 757   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3981    ----
   CONSTANT SIZE    =   4414    ----
   XDATA SIZE       =    512     112
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
