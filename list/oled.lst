C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\output\oled.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled\oled.c LARGE BROWSE INCDIR(.\main;.\eeprom;.\oled;.\uart;.\74hc595;.\c
                    -d4052;.\isr;.\Key) DEBUG OBJECTEXTEND PRINT(.\list\oled.lst) OBJECT(.\output\oled.obj)

line level    source

   1          /***********************************************************************************************
   2          π¶ƒ‹Àµ√˜£∫“—÷ß≥÷ª≠µ„£¨ª≠œﬂ£¨ª≠æÿ–Œ£¨ª≠‘≤£¨ª≠¥∞ø⁄£¨ª≠BMP
   3          “∆÷≤£∫liaokeyre
   4          ************************************************************************************************/
   5          //Ω”ø⁄∂®“Â≤Œ’’oled.hŒƒº˛
   6          //ÀƒœﬂSPI–Ë“™Ω”∆ﬂ∏˘œﬂ£¨∆‰÷–RESø…“‘≤ªΩ”£ªµ´ «≤ªΩ” ±∫Ú±ÿ–Î¿≠∏ﬂ
   7          // GND,VCC,CS,RES,D/C,CLK,DIN
   8          //πÿ”⁄µÁ—πŒ Ã‚£ª»Áπ˚øÕªß–Ë“™≥§ ±º‰Œ»∂®π§◊˜£ªΩ®“È»´≤ø≤…”√3.3VµÁ‘¥£ªµÁ∆Ω–≈∫≈“≤≤…”√3.3Vµƒ
   9          //»Áπ˚øÕªß–Ë“™”√5VµÁ‘¥£¨À‰»ª5Vø…“‘’˝≥£π§◊˜£¨µ´ Ω®“È«≤ª“™≥§ ±º‰π§◊˜£ª’‚—˘ø…ƒ‹ª·ºı…Ÿ∆¡µƒ Ÿ√¸£ª‘⁄VCC∂À¥Æ“ª–°µ
             -Á◊Ëø…ƒ‹ª·∫√“ª–©°£
  10          #include "oled.h"
  11          #include "oledfont.h" 
  12          #include "24c02.h"
  13          #include "cd4052.h"
  14          #define GUI_LCM_XMAX 128
  15          #define GUI_LCM_YMAX  32         
  16          //#include "delay.h"
  17          //OLEDµƒœ‘¥Ê
  18          //¥Ê∑≈∏Ò Ω»Áœ¬.
  19          //[0]0 1 2 3 ... 127    
  20          //[1]0 1 2 3 ... 127    
  21          //[2]0 1 2 3 ... 127    
  22          //[3]0 1 2 3 ... 127
  23          //--------------------------------------12832   
  24          //[4]0 1 2 3 ... 127    
  25          //[5]0 1 2 3 ... 127    
  26          //[6]0 1 2 3 ... 127    
  27          //[7]0 1 2 3 ... 127 
  28          u8 OLED_GRAM[128][4];//œ‘¥Ê
  29          u8 OLED_GRAM_TMP[128][4];
  30          
  31          /****************************************************************************
  32          ◊÷Ω⁄¬Î∏ﬂµÕŒªæµœÒ≤Ÿ◊˜
  33          ÷˜“™ «”–“ª∏ˆ◊÷ø‚»°¬Î∑ΩœÚ «∑¥µƒ
  34          ÷ÿ–¬◊ˆ◊÷ø‚”÷¬È∑≥°£°£°£°£
  35          ****************************************************************************/   
  36          u8 ByteMirro(u8 dat)
  37          {
  38   1       dat = (dat & 0xf0) >> 4 | (dat & 0x0f)  << 4;//“‘4ŒªŒ™µ•ŒªΩ¯––Ωªªª    abcd  1234
  39   1       dat = (dat & 0xcc) >> 2 | (dat & 0x33)  << 2;//“‘2ŒªŒ™µ•ŒªΩ¯––Ωªªª    cdab  3412
  40   1       dat = (dat & 0xaa) >> 1 | (dat & 0x55)  << 1;//“‘1ŒªŒ™µ•ŒªΩ¯––Ωªªª   dcba  4321
  41   1       return dat;
  42   1      }
  43                             
  44          void delay_ms(unsigned int ms)
  45          {                         
  46   1              unsigned int a;
  47   1              while(ms)
  48   1              {
  49   2                      a=1800;
  50   2                      while(a--);
  51   2                      ms--;
  52   2              }
  53   1      //      return;
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 2   

  54   1      }
  55          #if OLED_MODE==1
              //œÚSSD1106–¥»Î“ª∏ˆ◊÷Ω⁄°£
              //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
              //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                      DATAOUT(dat);       
                      if(cmd)
                        OLED_DC_Set();
                      else 
                        OLED_DC_Clr();                   
                      OLED_CS_Clr();
                      OLED_WR_Clr();   
                      OLED_WR_Set();
                      OLED_CS_Set();    
                      OLED_DC_Set();   
              }                   
              #else
  73          //œÚSSD1306–¥»Î“ª∏ˆ◊÷Ω⁄°£
  74          //dat:“™–¥»Îµƒ ˝æ›/√¸¡Ó
  75          //cmd: ˝æ›/√¸¡Ó±Í÷æ 0,±Ì æ√¸¡Ó;1,±Ì æ ˝æ›;
  76          void OLED_WR_Byte(u8 dat,u8 cmd)
  77          {       
  78   1              u8 i;                     
  79   1              if(cmd)
  80   1                OLED_DC_Set();
  81   1              else 
  82   1                OLED_DC_Clr();                  
  83   1              OLED_CS_Clr();
  84   1              for(i=0;i<8;i++)
  85   1              {                         
  86   2                      OLED_SCLK_Clr();
  87   2                      if(dat&0x80)
  88   2                      {
  89   3                        OLED_SDIN_Set();
  90   3                      }
  91   2              else
  92   2                  OLED_SDIN_Clr();
  93   2                  OLED_SCLK_Set();
  94   2                      dat<<=1;   
  95   2              }                                                 
  96   1              OLED_CS_Set();
  97   1              OLED_DC_Set();            
  98   1      } 
  99          #endif
 100          
 101          void OLED_Set_Pos(unsigned char x, unsigned char y) 
 102          { 
 103   1              OLED_WR_Byte(0xb0+y,OLED_CMD);
 104   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 105   1              OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
 106   1      } 
 107          /*        
 108          //ø™∆ÙOLEDœ‘ æ    
 109          void OLED_Display_On(void)
 110          {
 111                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 112                  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 113                  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 114          }
 115          //πÿ±’OLEDœ‘ æ     
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 3   

 116          void OLED_Display_Off(void)
 117          {
 118                  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC√¸¡Ó
 119                  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 120                  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 121          }
 122          */
 123          void OLED_Refresh_Gram(void)
 124          {
 125   1              u8 i,n;             
 126   1              for(i=0;i<4;i++)  
 127   1              {  
 128   2                      OLED_WR_Byte (0xb4+i,OLED_CMD);    //…Ë÷√“≥µÿ÷∑£®0~7£©b4-->b7
 129   2                      OLED_WR_Byte (0x04,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–µÕµÿ÷∑
 130   2                      OLED_WR_Byte (0x10,OLED_CMD);      //…Ë÷√œ‘ æŒª÷√°™¡–∏ﬂµÿ÷∑   
 131   2                      for(n=0;n<128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA); 
 132   2              }   
 133   1      }
 134                                                   
 135          //«Â∆¡∫Ø ˝,«ÂÕÍ∆¡,’˚∏ˆ∆¡ƒª «∫⁄…´µƒ!∫Õ√ªµ„¡¡“ª—˘!!!      
 136          void OLED_Clear(void)  
 137          {  
 138   1              u8 i,n;  
 139   1              for(i=0;i<4;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
 140   1      //      OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 141   1      }  
 142          //ª≠µ„ 
 143          //x:0~127
 144          //y:0~63
 145          //t:1 ÃÓ≥‰ 0,«Âø’                                  
 146          void OLED_DrawPoint(u8 x,u8 y,u8 t)
 147          {
 148   1              u8 pos,bx,temp=0;
 149   1              if(x>127||y>63)return;//≥¨≥ˆ∑∂Œß¡À.
 150   1              pos=7-y/8;            //µ√µΩÀ˘‘⁄“≥
 151   1              bx=y%8;                           //µ√µΩµ±«∞“≥æ´»∑Œª÷√
 152   1              temp=1<<(7-bx);
 153   1              if(t)OLED_GRAM[x][pos]|=temp;
 154   1              else OLED_GRAM[x][pos]&=~temp;      
 155   1      }
 156          
 157          //////////////////////////////////
 158          //“‘x1,y1Œ™∆µ„£¨x2,y2Œ™÷’µ„ª≠œﬂ//
 159          /////////(t=1ª≠µ„£¨t=0«Âµ„)///////
 160          //////////////////////////////////
 161          //ª≠œﬂ∫Ø ˝
 162          void OLED_DrawLine(u8 x1,u8 y1,u8 x2,u8 y2,u8 t) //y=kx+b
 163          {
 164   1              s16 dy;
 165   1              s16 dx;
 166   1              s8 dirx,diry,move;
 167   1              dy=y2-y1; 
 168   1              dx=x2-x1; 
 169   1              if(dy<0)  
 170   1              {
 171   2                      dy=-dy;
 172   2                      diry=-1;
 173   2              }
 174   1              else 
 175   1              {
 176   2                      diry=1;
 177   2              }
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 4   

 178   1              if(dx<0)
 179   1              {
 180   2                      dx=-dx;
 181   2                      dirx=-1;
 182   2              }
 183   1              else
 184   1              {
 185   2                      dirx=1;
 186   2              }
 187   1      //      dy<<=1; 
 188   1      //      dx<<=1;
 189   1              OLED_DrawPoint(x1,y1,t);
 190   1              if(dx>dy)       //////////////////
 191   1              {
 192   2                      move=dy-(dx>>1); 
 193   2                      while(x1!=x2)
 194   2                      {
 195   3                              if(move>=0)
 196   3                              {
 197   4                                      y1+=diry; 
 198   4                                      move-=dx;
 199   4                              }
 200   3                              x1+=dirx;
 201   3                              move+=dy;  
 202   3                              OLED_DrawPoint(x1,y1,t);
 203   3                      }
 204   2              }
 205   1              else
 206   1              {
 207   2                      move=dx-(dy>>1);
 208   2                      while(y1!=y2)
 209   2                      {
 210   3                              if(move>=0)
 211   3                              {
 212   4                                      x1+=dirx;
 213   4                                      move-=dy;
 214   4                              }
 215   3                              y1+=diry;
 216   3                              move+=dx;
 217   3                              OLED_DrawPoint(x1,y1,t);
 218   3                      }
 219   2              }
 220   1      }
 221          
 222          /****************************************************************************
 223          * π¶ƒ‹£∫ª≠ÀÆ∆Ωœﬂ°£
 224          * »Îø⁄≤Œ ˝£∫x0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 225          *           y0      ÀÆ∆Ωœﬂ∆µ„À˘‘⁄––µƒŒª÷√
 226          *           x1      ÀÆ∆Ωœﬂ÷’µ„À˘‘⁄¡–µƒŒª÷√
 227          *           t       œ‘ æ—’…´(∂‘”⁄∫⁄∞◊…´LCM£¨Œ™0 ±√£¨Œ™1 ±œ‘ æ)
 228          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 229          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 230          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 231          ****************************************************************************/
 232          void  OLED_Draw_HLine(u8 x0, u8 y0, u8 x1, u8 t)
 233          {
 234   1          u8  temp;
 235   1          if(x0>x1)               // ∂‘x0°¢x1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 236   1          {
 237   2              temp = x1;
 238   2              x1 = x0;
 239   2              x0 = temp;
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 5   

 240   2          }
 241   1          do
 242   1          {
 243   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 244   2              x0++;
 245   2          }
 246   1          while(x1>=x0);
 247   1      }
 248          /****************************************************************************
 249          * π¶ƒ‹£∫ª≠¥π÷±œﬂ°£
 250          * »Îø⁄≤Œ ˝£∫x0      ¥π÷±œﬂ∆µ„À˘‘⁄¡–µƒŒª÷√
 251          *           y0      ¥π÷±œﬂ∆µ„À˘‘⁄––µƒŒª÷√
 252          *           y1      ¥π÷±œﬂ÷’µ„À˘‘⁄––µƒŒª÷√
 253          *           t       œ‘ æ—’…´
 254          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 255          * Àµ√˜£∫∂‘”⁄µ•…´°¢4º∂ª“∂»µƒ“∫æß£¨ø…Õ®π˝–ﬁ∏ƒ¥À∫Ø ˝◊˜ÕºÃ·∏ﬂÀŸ∂»£¨»Áµ•…´LCM£¨ø…“‘“ª¥Œ∏¸
 256          *      –¬8∏ˆµ„£¨∂¯≤ª–Ë“™“ª∏ˆµ„“ª∏ˆµ„µƒ–¥µΩLCM÷–°£
 257          ****************************************************************************/
 258          void  OLED_Draw_RLine(u8 x0, u8 y0, u8 y1, u8 t)
 259          {
 260   1          u8  temp;
 261   1          if(y0>y1)       // ∂‘y0°¢y1¥Û–°Ω¯––≈≈¡–£¨“‘±„ª≠Õº
 262   1          {
 263   2              temp = y1;
 264   2              y1 = y0;
 265   2              y0 = temp;
 266   2          }
 267   1          do
 268   1          {
 269   2              OLED_DrawPoint(x0, y0, t);   // ÷µ„œ‘ æ£¨√Ë≥ˆ¥π÷±œﬂ
 270   2              y0++;
 271   2          }
 272   1          while(y1>=y0);
 273   1      }
 274          /****************************************************************************
 275          * π¶ƒ‹£∫ª≠æÿ–Œ°£
 276          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 277          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 278          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 279          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 280          *           t       1ª≠µ„£¨0«Âµ„
 281          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 282          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 283          ****************************************************************************/
 284          void  OLED_DrawRectangle(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 285          {  OLED_Draw_HLine(x1, y1, x2, t);
 286   1         OLED_Draw_HLine(x1, y2, x2, t);
 287   1         OLED_Draw_RLine(x1, y1, y2, t);
 288   1         OLED_Draw_RLine(x2, y1, y2, t);
 289   1      }
 290          /****************************************************************************
 291          * π¶ƒ‹£∫ÃÓ≥‰æÿ–Œ°£ª≠“ª∏ˆÃÓ≥‰µƒæÿ–Œ£¨ÃÓ≥‰…´”Î±ﬂøÚ…´“ª—˘°£
 292          * »Îø⁄≤Œ ˝£∫x0          æÿ–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 293          *           y0          æÿ–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 294          *           x1      æÿ–Œ”“œ¬Ω«µƒx◊¯±Í÷µ
 295          *           y1      æÿ–Œ”“œ¬Ω«µƒy◊¯±Í÷µ
 296          *           t       ÃÓ≥‰—’…´
 297          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 298          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 299          ****************************************************************************/
 300          void  OLED_Draw_RectangleFill(u8 x0, u8 y0, u8 x1, u8 y1, u8 t)
 301          {  u8  i;
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 6   

 302   1      
 303   1         /* œ»’“≥ˆæÿ–Œ◊Û…œΩ«”Î”“œ¬Ω«µƒ¡Ω∏ˆµ„£¨±£¥Ê‘⁄(x0,y0)£¨(x1,y1) */
 304   1         if(x0>x1)                                            // »Ùx0>x1£¨‘Úx0”Îx1Ωªªª
 305   1         {  i = x0;
 306   2            x0 = x1;
 307   2            x1 = i;
 308   2         }
 309   1         if(y0>y1)                                            // »Ùy0>y1£¨‘Úy0”Îy1Ωªªª
 310   1         {  i = y0;
 311   2            y0 = y1;
 312   2            y1 = i;
 313   2         }
 314   1         
 315   1         /* ≈–∂œ «∑Ò÷ª «÷±œﬂ */
 316   1         if(y0==y1) 
 317   1         {  OLED_Draw_HLine(x0, y0, x1, t);
 318   2            return;
 319   2         }
 320   1         if(x0==x1) 
 321   1         {  (x0, y0, y1, t);
 322   2            return;
 323   2         }
 324   1      
 325   1         while(y0<=y1)                                                
 326   1         {  OLED_Draw_HLine(x0, y0, x1, t);   // µ±«∞ª≠ÀÆ∆Ωœﬂ
 327   2            y0++;                                                     // œ¬“ª––
 328   2         }
 329   1      }
 330          /****************************************************************************
 331          * π¶ƒ‹£∫ª≠’˝∑Ω–Œ°£
 332          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 333          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 334          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 335          *           t       œ‘ æ—’…´
 336          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 337          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 338          ****************************************************************************/
 339          void  OLED_Draw_Square(u8 x0, u8 y0, u8  with, u8 t)
 340          { 
 341   1          if(with==0) return;
 342   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 343   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 344   1              OLED_DrawRectangle(x0, y0, x0+with, y0+with, t);
 345   1      }
 346          /****************************************************************************
 347          * π¶ƒ‹£∫ª≠’˝∑Ω–ŒÃÓ≥‰°£
 348          * »Îø⁄≤Œ ˝£∫x0          ’˝∑Ω–Œ◊Û…œΩ«µƒx◊¯±Í÷µ
 349          *           y0          ’˝∑Ω–Œ◊Û…œΩ«µƒy◊¯±Í÷µ
 350          *           with    ’˝∑Ω–Œµƒ±ﬂ≥§
 351          *           t       œ‘ æ—’…´
 352          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 353          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 354          ****************************************************************************/
 355          void  OLED_Draw_SquareFill(u8 x0, u8 y0, u8  with, u8 t)
 356          { 
 357   1          if(with==0) return;
 358   1              if( (x0+with) > GUI_LCM_XMAX ) return;
 359   1              if( (y0+with) > GUI_LCM_YMAX ) return;
 360   1              OLED_Draw_RectangleFill(x0, y0, x0+with, y0+with, t);
 361   1      }
 362          /****************************************************************************
 363          * π¶ƒ‹£∫∂‡∏ˆµ„÷Æº‰µƒ¡¨–¯¡¨œﬂ°£¥”µ⁄“ªµ„¡¨µΩµ⁄∂˛µ„£¨‘Ÿ¡¨µΩµ⁄»˝µ„...
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 7   

 364          * »Îø⁄≤Œ ˝£∫points  ∂‡∏ˆµ„◊¯±Í ˝æ›µƒ÷∏’Î£¨ ˝æ›≈≈¡–Œ™(x0,y0)°¢(x1,y1)°¢(x2,y2)...
 365          *           no      µ„ ˝ƒø£¨÷¡…Ÿ“™¥Û”⁄1
 366          *           t   œ‘ æ—’…´
 367          * ≥ˆø⁄≤Œ ˝£∫Œﬁ
 368          * Àµ√˜£∫≤Ÿ◊˜ ß∞‹‘≠“Ú «÷∏∂®µÿ÷∑≥¨≥ˆ”––ß∑∂Œß°£
 369          ****************************************************************************/
 370          void  OLED_Draw_LineS(u8 const *points, u8 no, u8 t)
 371          {  u8  x0, y0;
 372   1         u8  x1, y1;
 373   1         u8  i;
 374   1      
 375   1         /* »Îø⁄≤Œ ˝π˝¬À */
 376   1         if(0==no) return;
 377   1         if(1==no)                                            // µ•µ„
 378   1         {  x0 = *points++;
 379   2            y0 = *points;
 380   2            OLED_DrawPoint(x0, y0, t);
 381   2         }
 382   1         
 383   1         /* ª≠∂‡ÃıœﬂÃı */
 384   1         x0 = *points++;                                      // »°≥ˆµ⁄“ªµ„◊¯±Í÷µ£¨◊˜Œ™‘≠∆µ„◊¯±Í÷µ
 385   1         y0 = *points++;
 386   1         for(i=1; i<no; i++)
 387   1         {  x1 = *points++;                           // »°≥ˆœ¬“ªµ„◊¯±Í÷µ
 388   2            y1 = *points++;
 389   2            OLED_DrawLine(x0, y0, x1, y1, t);
 390   2            x0 = x1;                                          // ∏¸–¬‘≠∆µ„◊¯±Í
 391   2            y0 = y1;
 392   2         }
 393   1      }
 394          //////////////////////////////
 395          //“‘x,yŒ™‘≤–ƒ£¨“‘rŒ™∞Îæ∂ª≠‘≤//
 396          /////(t=1ª≠µ„£¨t=0«Âµ„)///////
 397          //////////////////////////////
 398          //ª≠‘≤∫Ø ˝
 399          void OLED_DrawCircle(u8 x,u8 y,u16 r,u8 t)
 400          {
 401   1              u8 xc=0;
 402   1              u8 yc;
 403   1              s8 p;
 404   1              yc=r;
 405   1              p=3-(r<<1);
 406   1              while(xc<=yc)  
 407   1              {                 
 408   2                      OLED_DrawPoint(x+xc,y+yc,t);
 409   2                      OLED_DrawPoint(x+xc,y-yc,t);
 410   2                      OLED_DrawPoint(x-xc,y+yc,t);
 411   2                      OLED_DrawPoint(x-xc,y-yc,t);
 412   2                      OLED_DrawPoint(x+yc,y+xc,t);
 413   2                      OLED_DrawPoint(x+yc,y-xc,t);
 414   2                      OLED_DrawPoint(x-yc,y+xc,t);
 415   2                      OLED_DrawPoint(x-yc,y-xc,t);
 416   2                      if(p<0)
 417   2                      p+=((xc++)<<2)+6;
 418   2                      else
 419   2                      p+=(((xc++)-(yc--))<<2)+10;
 420   2              }
 421   1      }
 422          
 423          /****************************************************************************
 424          * π¶ƒ‹£∫œ‘ æ¥∞ø⁄°£∏˘æ›Ã·π©µƒ¥∞ø⁄≤Œ ˝Ω¯––ª≠¥∞ø⁄°£
 425          * »Îø⁄≤Œ ˝£∫win         ¥∞ø⁄æ‰±˙
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 8   

 426          * ≥ˆø⁄≤Œ ˝£∫∑µªÿ0±Ì æ≤Ÿ◊˜ ß∞‹£¨∑µªÿ1±Ì æ≤Ÿ◊˜≥…π¶
 427          ****************************************************************************/
 428          u8  OLED_Draw_WindowsDraw(WINDOWS *win)
 429          {  u8  *str;
 430   1         int8  bak, bak1, bak2;
 431   1         
 432   1         /* ≤Œ ˝π˝¬À£¨»Ù¥∞ø⁄∆≥ˆ∑∂Œß£¨‘Ú∑µªÿ0 */
 433   1         if( ( (win->with)<20 ) || ( (win->hight)<20 ) ) return(0);           // øÌ∂»°¢∏ﬂ∂»ºÏ≤È£¨œﬁ÷∆◊Ó–°¥∞ø⁄
 434   1         if( (win->x + win->with ) > GUI_LCM_XMAX ) return(0);                        // ¥∞ø⁄øÌ∂» «∑Ò“Á≥ˆ
 435   1         if( (win->y + win->hight ) > GUI_LCM_YMAX ) return(0);                       // ¥∞ø⁄∏ﬂ∂» «∑Ò“Á≥ˆ
 436   1          
 437   1         /* ø™ ºª≠¥∞ø⁄ */
 438   1         OLED_Draw_RectangleFill(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 0); //«Â≥ˆ“ª∆¨
             -«¯”Úª≠µØ¥∞
 439   1         OLED_DrawRectangle(win->x, win->y, win->x + win->with - 1, win->y + win->hight - 1, 1);      // ª≠¥∞ø⁄
 440   1         OLED_Draw_HLine(win->x, win->y + 9, win->x + win->with - 1, 1);                                                      // ª≠±ÍÃ‚ƒø¿∏
 441   1      //   OLED_Draw_RLine(win->x + 9, win->y, win->y + 9, 1);                                                                                // ª≠πÿ±’¥∞∫≈∞¥≈•
 442   1      //   OLED_DrawLine(win->x, win->y, win->x + 9, win->y + 9, 1);
 443   1      //   OLED_DrawLine(win->x + 9, win->y, win->x, win->y + 9, 1);
 444   1         OLED_Draw_RLine(win->x + win->with - 10, win->y, win->y + 9, 1);                                                                             // ª≠πÿ±’¥∞∫≈∞¥≈•
 445   1         OLED_DrawLine(win->x + win->with - 10, win->y, win->x + win->with - 1 , win->y + 9, 1);
 446   1         OLED_DrawLine(win->x + win->with - 1, win->y, win->x + win->with - 10, win->y + 9, 1);
 447   1         
 448   1      
 449   1         /* –¥±ÍÃ‚ */
 450   1         if( win->title != 0 ) 
 451   1         {  str = win->title;
 452   2            bak = win->x + 2;
 453   2            bak1 = win->y + 1;                  //titleŒª÷√
 454   2            bak2 = win->x + win->with -1;
 455   2           
 456   2            while(1)                                          
 457   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 458   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 459   3               
 460   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 461   3               bak += 6;
 462   3            }
 463   2         }
 464   1      
 465   1         /* –¥ƒ⁄»› */
 466   1         if( win->text != 0 ) 
 467   1         {  str = win->text;
 468   2            bak = win->x + 2;
 469   2            bak1 = win->y + 12;                 //textŒª÷√
 470   2            bak2 = win->x + win->with -1;
 471   2           
 472   2            while(1)                                          
 473   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 474   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 475   3               
 476   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 477   3               bak += 6;
 478   3            }
 479   2         }
 480   1      
 481   1         /* –¥◊¥Ã¨¿∏ */
 482   1         if( win->state != 0 )
 483   1         {  if( win->hight < 25) return(0);                                                           // ≈–∂œ «∑Òø…“‘ª≠◊¥Ã¨¿∏
 484   2            /* ª≠◊¥Ã¨¿∏ */
 485   2            OLED_Draw_HLine(win->x, win->y + win->hight - 10, win->x + win->with - 1, 1);
 486   2            
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 9   

 487   2            str = win->state;
 488   2            bak = win->x + 3;
 489   2            bak1 = win->y + win->hight - 9;
 490   2            bak2 = win->x + win->with -1;
 491   2            
 492   2            while(1)                                          
 493   2            {  if( (bak+8) > bak2 ) break;                                                            // ≈–∂œ±ÍÃ‚ «∑Ò“Á≥ˆ
 494   3               if(*str=='\0') break;                                                                          // ≈–∂œ◊÷∑˚¥Æ «∑ÒΩ· ¯
 495   3               
 496   3               OLED_ShowChar(bak, bak1, *str++,7,1);                                                  // œ‘ æ±ÍÃ‚
 497   3               bak += 6;
 498   3            }      
 499   2         }
 500   1         
 501   1         return(1);
 502   1      
 503   1      }
 504          /*******************************************************************************************
 505          ∫Ø ˝√˚: void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)
 506          Àµ√˜: ÃÓ≥‰÷∏∂®«¯”ÚRAM
 507          ********************************************************************************************/
 508          void OLED_Fill(u8 x1,u8 y1,u8 x2,u8 y2,u8 dot)  
 509          {  
 510   1              u8 x,y;  
 511   1              for(x=x1;x<=x2;x++)
 512   1              {
 513   2                      for(y=y1;y<=y2;y++)OLED_DrawPoint(x,y,dot);
 514   2              }                                                                                                           
 515   1              OLED_Refresh_Gram();//∏¸–¬œ‘ æ
 516   1      }
 517          
 518          
 519          /*******************************************************************************************
 520          ∫Ø ˝√˚: void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 521          Àµ√˜: œ‘ æ◊÷∑˚
 522          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ◊÷∑˚,∞¸¿®≤ø∑÷◊÷∑˚
 523          //x:0~127
 524          //y:0~63
 525          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 526          //size:—°‘Ò◊÷ÃÂ 16/12/7 
 527          ********************************************************************************************/
 528          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 size,u8 mode)
 529          {                           
 530   1              u8 temp,t,t1;
 531   1              u8 y0=y;
 532   1              chr=chr-' ';//µ√µΩ∆´“∆∫Ûµƒ÷µ                               
 533   1          for(t=0;t<size;t++)
 534   1          {   
 535   2                  if(size==7)temp=ByteMirro(F7x5[chr][t]); //µ˜”√0806◊÷ÃÂ  “ÚŒ™◊÷ø‚ «∑¥µƒ£¨À˘“‘æµœÒ¥¶¿Ì¡À£°
 536   2                      else if(size==12)temp=asc2_1206[chr][t];  //µ˜”√1206◊÷ÃÂ
 537   2                      else temp=asc2_1608[chr][t];             //µ˜”√1608◊÷ÃÂ                                   
 538   2              for(t1=0;t1<8;t1++)
 539   2                      {
 540   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 541   3                              else OLED_DrawPoint(x,y,!mode);
 542   3                              temp<<=1;
 543   3                              y++;
 544   3                              if((y-y0)==size)
 545   3                              {
 546   4                                      y=y0;
 547   4                                      x++;
 548   4                                      break;
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 10  

 549   4                              }
 550   3                      }        
 551   2          }          
 552   1      }
 553          //m^n∫Ø ˝
 554          u32 mypow(u8 m,u8 n)
 555          {
 556   1              u32 result=1;    
 557   1              while(n--)result*=m;    
 558   1              return result;
 559   1      }                                 
 560          
 561          /*******************************************************************************************
 562          ∫Ø ˝√˚: void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 563          Àµ√˜: œ‘ æ ˝◊÷
 564          //x,y :∆µ„◊¯±Í  
 565          //len : ˝◊÷µƒŒª ˝
 566          //size:◊÷ÃÂ¥Û–°
 567          //mode:ƒ£ Ω     0,ÃÓ≥‰ƒ£ Ω;1,µ˛º”ƒ£ Ω
 568          //num: ˝÷µ(0~4294967295);
 569          ********************************************************************************************/                     
 570          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size)
 571          {               
 572   1              u8 t,temp;
 573   1              u8 enshow=0;                                               
 574   1              for(t=0;t<len;t++)
 575   1              {
 576   2                      temp=(num/mypow(10,len-t-1))%10;
 577   2                      if(enshow==0&&t<(len-1))
 578   2                      {
 579   3                              if(temp==0)
 580   3                              {
 581   4                                      OLED_ShowChar(x+(size/2)*t,y,' ',size,1);
 582   4                                      continue;
 583   4                              }else enshow=1; 
 584   3                               
 585   3                      }
 586   2                      OLED_ShowChar(x+(size/2)*t,y,temp+'0',size,1); 
 587   2              }
 588   1      } 
 589          /*******************************************************************************************
 590          ∫Ø ˝√˚: void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size)
 591          Àµ√˜: œ‘ æ◊÷∑˚¥Æ
 592          //œ‘ æ◊÷∑˚¥Æ
 593          //x,y:∆µ„◊¯±Í  
 594          //*p:◊÷∑˚¥Æ∆ ºµÿ÷∑
 595          ********************************************************************************************/
 596          void OLED_ShowString(u8 x,u8 y,const u8 *p,u8 size, u8 mode)
 597          {
 598   1                 
 599   1          while(*p!='\0')
 600   1          { 
 601   2                  if(size == 16)
 602   2                      {      
 603   3                      if(x>122){x=0;y+=16;}   //ªª––
 604   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 605   3                      OLED_ShowChar(x,y,*p,16,mode);   
 606   3                      x+=8;
 607   3                      }
 608   2                      else if(size == 12)
 609   2                      {
 610   3                      if(x>122){x=0;y+=12;}   //ªª––
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 11  

 611   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 612   3                      OLED_ShowChar(x,y,*p,12,mode);   
 613   3                      x+=6;           
 614   3                      }
 615   2                      else
 616   2                      {
 617   3                      if(x>122){x=0;y+=8;}    //ªª––
 618   3                      if(y>32){y=x=0;OLED_Clear();} //ªª“≥
 619   3                      OLED_ShowChar(x,y,*p,7,mode);    
 620   3                      x+=6;           
 621   3                      }
 622   2              p++;
 623   2          }  
 624   1      }
 625          
 626          /*******************************************************************************************
 627          ∫Ø ˝√˚: void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 628          Àµ√˜: œ‘ æ∫∫◊÷
 629          //œ‘ æ∫∫◊÷
 630          //‘⁄÷∏∂®Œª÷√œ‘ æ“ª∏ˆ∫∫◊÷
 631          //x:0~127
 632          //y:0~63
 633          //fno:∫∫◊÷±‡∫≈
 634          //mode:0,∑¥∞◊œ‘ æ;1,’˝≥£œ‘ æ                             
 635          //16*16¥Û–°µƒ◊÷∑˚
 636          ********************************************************************************************/
 637          void OLED_ShowFont16(u8 x,u8 y,u8 fno,u8 mode)
 638          {                           
 639   1              u8 temp,t,t1;
 640   1              u8 y0=y;                                   
 641   1          for(t=0;t<32;t++)
 642   1          {   
 643   2                      if(t<16)temp=Hzk[fno*2][t];                               
 644   2              else temp=Hzk[fno*2+1][t-16];   
 645   2                      for(t1=0;t1<8;t1++)
 646   2                      {
 647   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode);
 648   3                              else OLED_DrawPoint(x,y,!mode);
 649   3                              temp<<=1;
 650   3                              y++;
 651   3                              if((y-y0)==16)
 652   3                              {
 653   4                                      y=y0;
 654   4                                      x++;
 655   4                                      break;
 656   4                              }
 657   3                      }        
 658   2          }          
 659   1      }
 660          /*******************************************************************************************
 661          ∫Ø ˝√˚: void OLED_DrawTriangle(u8 x1, u8 y1, u8 len,u8 t)
 662          Àµ√˜: ª≠»˝Ω«–Œ£¨ ∆ ºŒª÷√◊¯±Í  
 663          ********************************************************************************************/
 664          void OLED_DrawTriangle(u8 x1, u8 y1, u8 len,u8 t)
 665          {
 666   1        OLED_DrawLine(x1,y1,x1-len,y1+len,t);
 667   1        OLED_DrawLine(x1,y1,x1+len,y1+len,t);
 668   1        OLED_DrawLine(x1+len,y1+len,x1-len,y1+len,t); //ª≠»˝Ω«–Œ
 669   1      }
 670          /*******************************************************************************************
 671          ∫Ø ˝√˚: void OLED_DrawBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 672          Àµ√˜: ª≠Ω¯∂»Ãı£¨ ∆ ºŒª÷√◊¯±Í  
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 12  

 673          ********************************************************************************************/
 674          void OLED_DrawSetBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 num, u8 num1,u8 t)
 675          { 
 676   1      //  u8 i; 
 677   1        u8 xtmp;
 678   1        xtmp = (x2-x1)/num;
 679   1        OLED_Draw_RectangleFill(x1-3, y1-2, x2+4, y2+12, 0);                              
 680   1        OLED_DrawRectangle(x1, y1, x2, y2, t);
 681   1      
 682   1        OLED_DrawTriangle(x1+xtmp*num1, y2+1, 3,1);
 683   1        OLED_Draw_RectangleFill(x1+1, y1+1, x1+xtmp*num1, y2-1, t);
 684   1        OLED_ShowChar(x1+xtmp*num1-6,y2+6,Hex2Dat(((num1/10)&0x0f)),7,1);
 685   1        OLED_ShowChar(x1+xtmp*num1,y2+6,Hex2Dat(((num1%10)&0x0f)),7,1);
 686   1        OLED_Refresh_Gram(); 
 687   1           
 688   1      }
 689          /*******************************************************************************************
 690          ∫Ø ˝√˚: void OLED_DrawBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 691          Àµ√˜: ª≠Ω¯∂»Ãı£¨ ∆ ºŒª÷√◊¯±Í  
 692          ********************************************************************************************/
 693          void OLED_DrawBar(u8 x1, u8 y1, u8 x2, u8 y2, u8 t)
 694          { 
 695   1        u8 i;                             
 696   1        OLED_DrawRectangle(x1, y1, x2, y2, t);
 697   1        for(i=0;i<x2-x1;i++)
 698   1        {
 699   2          OLED_Draw_RectangleFill(x1+1, y1+1, x1+i, y2-1, t); 
 700   2              OLED_Refresh_Gram();
 701   2              delay_10ms();
 702   2              delay_10ms();
 703   2        }      
 704   1      }
 705          /*******************************************************************************************
 706          ∫Ø ˝√˚: void OLED_DrawBMP(u8 x,u8 y)
 707          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 708          ********************************************************************************************/
 709          void OLED_DrawBMP(u8 x,u8 y,u8 mode)
 710          {                           
 711   1              u16 temp,t,t1;
 712   1              u16 y0=y;                                                                          
 713   1          for(t=0;t<512;t++)
 714   1          {  
 715   2                  temp = logo[t];                               
 716   2              for(t1=0;t1<8;t1++)
 717   2                      {
 718   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 719   3                              else OLED_DrawPoint(x,y,!mode);            
 720   3                              temp<<=1;
 721   3                              y++;
 722   3                              if((y-y0)==32)
 723   3                              {
 724   4                                      y=y0;
 725   4                                      x++;
 726   4                                      break;
 727   4                              }
 728   3                      }        
 729   2          }          
 730   1      }
 731          
 732          /*******************************************************************************************
 733          void OLED_DrawICON(u8 x,u8 y,u16 size ,u8 mode)
 734          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 13  

 735          ********************************************************************************************/
 736          void OLED_DrawICON(u8 x,u8 y,u8 mode,void *icon)
 737          {                           
 738   1              u16 temp,t,t1;
 739   1              u16 y0=y;                                                                          
 740   1          for(t=0;t<128;t++)
 741   1          {  
 742   2                  temp = *(u8*)icon ; 
 743   2                      ((u8*)icon)++;                            
 744   2              for(t1=0;t1<8;t1++)
 745   2                      {
 746   3                              if(temp&0x80)OLED_DrawPoint(x,y,mode); 
 747   3                              else OLED_DrawPoint(x,y,!mode);            
 748   3                              temp<<=1;
 749   3                              y++;
 750   3                              if((y-y0)==32)
 751   3                              {
 752   4                                      y=y0;
 753   4                                      x++;
 754   4                                      break;
 755   4                              }
 756   3                      }        
 757   2          }          
 758   1      }
 759          
 760          void Disp_Menu_Main(u8 num)
 761          {
 762   1          OLED_ShowChar(0,11,'<',12,1);
 763   1          OLED_ShowChar(120,11,'>',12,1);
 764   1              if(num == 0)
 765   1              {
 766   2                  OLED_DrawICON(10,0,0,set_ico);
 767   2                  OLED_DrawICON(48,0,1,cut_ico);
 768   2                  OLED_DrawICON(86,0,1,test_ico);
 769   2              } 
 770   1              else if(num == 1)
 771   1              {
 772   2                  OLED_DrawICON(10,0,1,set_ico);
 773   2                  OLED_DrawICON(48,0,0,cut_ico);
 774   2                  OLED_DrawICON(86,0,1,test_ico);
 775   2              }
 776   1              else
 777   1              {
 778   2                  OLED_DrawICON(10,0,1,set_ico);
 779   2                  OLED_DrawICON(48,0,1,cut_ico);
 780   2                  OLED_DrawICON(86,0,0,test_ico);
 781   2              }
 782   1      //      OLED_Refresh_Gram();
 783   1      }
 784          void Disp_Menu_1(u8 num)
 785          {
 786   1      //    OLED_ShowChar(0,11,'<',12,1);
 787   1      //    OLED_ShowChar(120,11,'>',12,1);
 788   1              if(num == 0)
 789   1              {
 790   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,0);
 791   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 792   2                  OLED_ShowString(78,0,"3.COB",12,1);
 793   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 794   2              } 
 795   1              else if(num == 1)
 796   1              {
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 14  

 797   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 798   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,0);
 799   2                  OLED_ShowString(78,0,"3.COB",12,1);
 800   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 801   2              }
 802   1              else if(num == 2)
 803   1              {
 804   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 805   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 806   2                  OLED_ShowString(78,0,"3.COB",12,0);
 807   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 808   2              }
 809   1              else
 810   1              {
 811   2                  OLED_ShowString(0,0,"1.VT62538-B1",12,1);
 812   2                  OLED_ShowString(0,15,"2.VT62538-B2",12,1);
 813   2                  OLED_ShowString(78,0,"3.COB",12,1);
 814   2                  OLED_ShowString(78,15,"4.RETURN",12,0);
 815   2              }
 816   1      }
 817          
 818          void Disp_Menu_0(u8 num)
 819          {
 820   1              if(num == 0)
 821   1              {
 822   2                  OLED_ShowString(0,0,"1.SET LINE",12,0);
 823   2                  OLED_ShowString(0,15,"2.SET SENS",12,1);
 824   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 825   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 826   2              } 
 827   1              else if(num == 1)
 828   1              {
 829   2                  OLED_ShowString(0,0,"1.SET LINE",12,1);
 830   2                  OLED_ShowString(0,15,"2.SET SENS",12,0);
 831   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 832   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 833   2              }
 834   1              else if(num == 2)
 835   1              {
 836   2                  OLED_ShowString(0,0,"1.SET LINE",12,1);
 837   2                  OLED_ShowString(0,15,"2.SET SENS",12,1);
 838   2                  OLED_ShowString(78,0,"3.ERASE",12,0);
 839   2                  OLED_ShowString(78,15,"4.RETURN",12,1);
 840   2              }
 841   1              else
 842   1              {
 843   2                  OLED_ShowString(0,0,"1.SET LINE",12,1);
 844   2                  OLED_ShowString(0,15,"2.SET SENS",12,1);
 845   2                  OLED_ShowString(78,0,"3.ERASE",12,1);
 846   2                  OLED_ShowString(78,15,"4.RETURN",12,0);
 847   2              } 
 848   1      }
 849          
 850          /*******************************************************************************************
 851          ∫Ø ˝√˚: void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 852          Àµ√˜: ª≠ŒªÕº ∆ ºŒª÷√◊¯±Í x,y
 853          ********************************************************************************************/
 854          void OLED_ShowAdd(u8 x,u8 y,u32 Add1,u32 Add2)
 855          {                           
 856   1        OLED_ShowString(x+4,y,"SADD:",7,1);    //µ⁄“ª––◊÷∑˚
 857   1        OLED_ShowString(x+4,y+16,"RADD:",7,1);   //µ⁄»˝––◊÷∑˚ 
 858   1        OLED_DrawLine(38,0,38,31,1); 
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 15  

 859   1        OLED_DrawLine(38,0,40,0,1); 
 860   1        OLED_DrawLine(38,15,40,15,1);
 861   1        OLED_DrawLine(38,31,40,31,1);                  //ª≠∑÷∏Óœﬂ
 862   1        x = x+36;
 863   1        OLED_ShowChar(x+6,y,((Add1>>23)&0x01)+'0',7,1);
 864   1        OLED_ShowChar(x+6*2,y,((Add1>>22)&0x01)+'0',7,1);
 865   1        OLED_ShowChar(x+6*3,y,((Add1>>21)&0x01)+'0',7,1);
 866   1        OLED_ShowChar(x+6*4,y,((Add1>>20)&0x01)+'0',7,1);
 867   1        OLED_ShowChar(x+6*5,y,'-',7,1);
 868   1        OLED_ShowChar(x+6*6,y,((Add1>>19)&0x01)+'0',7,1);
 869   1        OLED_ShowChar(x+6*7,y,((Add1>>18)&0x01)+'0',7,1);
 870   1        OLED_ShowChar(x+6*8,y,((Add1>>17)&0x01)+'0',7,1);
 871   1        OLED_ShowChar(x+6*9,y,((Add1>>16)&0x01)+'0',7,1);
 872   1        OLED_ShowChar(x+6*10,y,'-',7,1);
 873   1        OLED_ShowChar(x+6*11,y,((Add1>>15)&0x01)+'0',7,1);
 874   1        OLED_ShowChar(x+6*12,y,((Add1>>14)&0x01)+'0',7,1);
 875   1        OLED_ShowChar(x+6*13,y,((Add1>>13)&0x01)+'0',7,1);
 876   1        OLED_ShowChar(x+6*14,y,((Add1>>12)&0x01)+'0',7,1);
 877   1       // OLED_ShowChar(x+6*15,y,'-',7,1);
 878   1        OLED_ShowChar(x+6,y+8,((Add1>>11)&0x01)+'0',7,1);
 879   1        OLED_ShowChar(x+6*2,y+8,((Add1>>10)&0x01)+'0',7,1);
 880   1        OLED_ShowChar(x+6*3,y+8,((Add1>>9)&0x01)+'0',7,1);
 881   1        OLED_ShowChar(x+6*4,y+8,((Add1>>8)&0x01)+'0',7,1);
 882   1        OLED_ShowChar(x+6*5,y+8,'-',7,1);
 883   1        OLED_ShowChar(x+6*6,y+8,((Add1>>7)&0x01)+'0',7,1);
 884   1        OLED_ShowChar(x+6*7,y+8,((Add1>>6)&0x01)+'0',7,1);
 885   1        OLED_ShowChar(x+6*8,y+8,((Add1>>5)&0x01)+'0',7,1);
 886   1        OLED_ShowChar(x+6*9,y+8,((Add1>>4)&0x01)+'0',7,1);
 887   1        OLED_ShowChar(x+6*10,y+8,'-',7,1);
 888   1        OLED_ShowChar(x+6*11,y+8,((Add1>>3)&0x01)+'0',7,1);
 889   1        OLED_ShowChar(x+6*12,y+8,((Add1>>2)&0x01)+'0',7,1);
 890   1        OLED_ShowChar(x+6*13,y+8,((Add1>>1)&0x01)+'0',7,1);
 891   1        OLED_ShowChar(x+6*14,y+8,((Add1)&0x01)+'0',7,1);
 892   1      
 893   1        OLED_ShowChar(x+6,y+16,((Add2>>23)&0x01)+'0',7,1);
 894   1        OLED_ShowChar(x+6*2,y+16,((Add2>>22)&0x01)+'0',7,1);
 895   1        OLED_ShowChar(x+6*3,y+16,((Add2>>21)&0x01)+'0',7,1);
 896   1        OLED_ShowChar(x+6*4,y+16,((Add2>>20)&0x01)+'0',7,1);
 897   1        OLED_ShowChar(x+6*5,y+16,'-',7,1);
 898   1        OLED_ShowChar(x+6*6,y+16,((Add2>>19)&0x01)+'0',7,1);
 899   1        OLED_ShowChar(x+6*7,y+16,((Add2>>18)&0x01)+'0',7,1);
 900   1        OLED_ShowChar(x+6*8,y+16,((Add2>>17)&0x01)+'0',7,1);
 901   1        OLED_ShowChar(x+6*9,y+16,((Add2>>16)&0x01)+'0',7,1);
 902   1        OLED_ShowChar(x+6*10,y+16,'-',7,1);
 903   1        OLED_ShowChar(x+6*11,y+16,((Add2>>15)&0x01)+'0',7,1);
 904   1        OLED_ShowChar(x+6*12,y+16,((Add2>>14)&0x01)+'0',7,1);
 905   1        OLED_ShowChar(x+6*13,y+16,((Add2>>13)&0x01)+'0',7,1);
 906   1        OLED_ShowChar(x+6*14,y+16,((Add2>>12)&0x01)+'0',7,1);
 907   1      //  OLED_ShowChar(x+6*15,y+16,'-',7,1);
 908   1      
 909   1        OLED_ShowChar(x+6,y+24,((Add2>>11)&0x01)+'0',7,1);
 910   1        OLED_ShowChar(x+6*2,y+24,((Add2>>10)&0x01)+'0',7,1);
 911   1        OLED_ShowChar(x+6*3,y+24,((Add2>>9)&0x01)+'0',7,1);
 912   1        OLED_ShowChar(x+6*4,y+24,((Add2>>8)&0x01)+'0',7,1);
 913   1        OLED_ShowChar(x+6*5,y+24,'-',7,1);
 914   1        OLED_ShowChar(x+6*6,y+24,((Add2>>7)&0x01)+'0',7,1);
 915   1        OLED_ShowChar(x+6*7,y+24,((Add2>>6)&0x01)+'0',7,1);
 916   1        OLED_ShowChar(x+6*8,y+24,((Add2>>5)&0x01)+'0',7,1);
 917   1        OLED_ShowChar(x+6*9,y+24,((Add2>>4)&0x01)+'0',7,1);
 918   1        OLED_ShowChar(x+6*10,y+24,'-',7,1);
 919   1        OLED_ShowChar(x+6*11,y+24,((Add2>>3)&0x01)+'0',7,1);
 920   1        OLED_ShowChar(x+6*12,y+24,((Add2>>2)&0x01)+'0',7,1);
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 16  

 921   1        OLED_ShowChar(x+6*13,y+24,((Add2>>1)&0x01)+'0',7,1);
 922   1        OLED_ShowChar(x+6*14,y+24,((Add2)&0x01)+'0',7,1);    
 923   1      }
 924          /*******************************************************************************************
 925          ∫Ø ˝√˚: void OLED_Init(void)
 926          Àµ√˜: OLED∆¡≥ı ºªØ
 927          ********************************************************************************************/                               
 928          void OLED_Init(void)
 929          {
 930   1          OLED_RST_Set();
 931   1              delay_ms(100);
 932   1              OLED_RST_Clr();
 933   1              delay_ms(100);
 934   1              OLED_RST_Set(); 
 935   1      
 936   1              OLED_WR_Byte(0xFD,OLED_CMD);//ƒ⁄≤øµ•∆¨ª˙–¥±£ª§
 937   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œπÿ±’ƒ⁄≤ø±£ª§£¨‘ –ÌΩ” ’À˘”–÷∏¡Ó£¨»Áø™∆Ù±£ª§‘Ú÷ªΩ” ‹FD÷∏¡Ó £øƒ¨»œŒ™0£¨Œ™1
             -‘Ú±£ª§ bit 0 0 0 1 0 £ø1 0
 938   1                      
 939   1              OLED_WR_Byte(0xAE,OLED_CMD);//πÿ±’œ‘ æ
 940   1      
 941   1              OLED_WR_Byte(0x20,OLED_CMD);
 942   1              OLED_WR_Byte(0x02,OLED_CMD);//page mode
 943   1      
 944   1              OLED_WR_Byte(0xB4,OLED_CMD);
 945   1      
 946   1              OLED_WR_Byte(0x00,OLED_CMD);//
 947   1              OLED_WR_Byte(0x10,OLED_CMD);//
 948   1      
 949   1      //      OLED_WR_Byte(0x40,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 950   1              OLED_WR_Byte(0x60,OLED_CMD);//…Ë÷√œ‘ æø™ º––40H+0~63
 951   1      
 952   1              OLED_WR_Byte(0xD5,OLED_CMD);//…Ë÷√ ±÷”∑÷∆µ“Ú◊”£¨’Òµ¥∆µ¬ 
 953   1              OLED_WR_Byte(0xf0,OLED_CMD);//[3:0],∑÷∆µ“Ú◊”;[7:4],’µ¥∆µ¬      ƒ¨»œ0111 0000   PS¥Û≤ø∑÷«˝∂Ø∂º—°‘Ò «0x80
 954   1      
 955   1              OLED_WR_Byte(0xA8,OLED_CMD);//…Ë÷√∂‡÷ÿÕ®µ¿
 956   1              OLED_WR_Byte(0x1F,OLED_CMD);//ƒ¨»œ0X3F
 957   1      
 958   1              OLED_WR_Byte(0xD3,OLED_CMD);//…Ë÷√œ‘ æ∆´“∆
 959   1              OLED_WR_Byte(0x00,OLED_CMD);//ƒ¨»œ≤ª∆´“∆[5:0]
 960   1      
 961   1      
 962   1      
 963   1              OLED_WR_Byte(0xA1,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 964   1      
 965   1      //      OLED_WR_Byte(0xA0,OLED_CMD);//∂Œ÷ÿ∂®“Â…Ë÷√,bit0:   0,0->0;  1,0->127
 966   1      
 967   1      //      OLED_WR_Byte(0xC8,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 968   1      
 969   1          OLED_WR_Byte(0xC0,OLED_CMD);//…Ë÷√COM…®√Ë∑ΩœÚ;bit3: 0,∆’Õ®ƒ£ Ω;1,÷ÿ∂®“Âƒ£ Ω COM[N-1]->COM0
 970   1      
 971   1              OLED_WR_Byte(0xD8,OLED_CMD);//
 972   1              OLED_WR_Byte(0x05,OLED_CMD);
 973   1      
 974   1              OLED_WR_Byte(0xDA,OLED_CMD);//…Ë÷√COM”≤º˛“˝Ω≈≈‰÷√
 975   1              OLED_WR_Byte(0x12,OLED_CMD);//ƒ¨»œ[5:4]≈‰÷√
 976   1      
 977   1      //      OLED_WR_Byte(0x00,OLED_CMD);// £ø£ø£ø£ø√ª…∂”√∞…........
 978   1      
 979   1              OLED_WR_Byte(0xD9,OLED_CMD);//…Ë÷√‘§≥‰µÁ÷‹∆⁄
 980   1              OLED_WR_Byte(0xF1,OLED_CMD);//ƒ¨»œ[3:0],PHASE 1;[7:4],PHASE 2;
 981   1      
C51 COMPILER V9.00   OLED                                                                  05/06/2015 14:06:25 PAGE 17  

 982   1              OLED_WR_Byte(0x81,OLED_CMD);//∂‘±»∂»…Ë÷√
 983   1              OLED_WR_Byte(0xBF,OLED_CMD);//1~255;ƒ¨»œ0X7F (¡¡∂»…Ë÷√,‘Ω¥Û‘Ω¡¡)
 984   1      
 985   1      //      OLED_WR_Byte(0xD9,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 986   1      //      OLED_WR_Byte(0x25,OLED_CMD);//
 987   1      
 988   1              OLED_WR_Byte(0xDB,OLED_CMD);//…Ë÷√VCOMH µÁ—π±∂¬ 
 989   1              OLED_WR_Byte(0x34,OLED_CMD);//[5:2] 0000,0.64*vcc;1101,0.78*vcc;1111,0.84*vcc;
 990   1      
 991   1              OLED_WR_Byte(0xA4,OLED_CMD);//»´æ÷œ‘ æø™∆Ù;bit0:1,ø™∆Ù;0,πÿ±’;(∞◊∆¡/∫⁄∆¡) A4/A5
 992   1              OLED_WR_Byte(0xA6,OLED_CMD);//…Ë÷√œ‘ æ∑Ω Ω;bit0:1,∑¥œ‡œ‘ æ;0,’˝≥£œ‘ æ     A6/A7
 993   1              OLED_WR_Byte(0xAF,OLED_CMD);//ø™∆Ùœ‘ æ                                                            AE/AF
 994   1      
 995   1              OLED_Clear();
 996   1              OLED_Set_Pos(0,0);                      
 997   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8690    ----
   CONSTANT SIZE    =   4881    ----
   XDATA SIZE       =   1024     159
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
